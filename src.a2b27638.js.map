{"version":3,"sources":["vendor/ogl/src/math/functions/Vec3Func.js","vendor/ogl/src/math/Vec3.js","vendor/ogl/src/core/Renderer.js","vendor/ogl/src/math/functions/Vec4Func.js","vendor/ogl/src/math/functions/QuatFunc.js","vendor/ogl/src/math/Quat.js","vendor/ogl/src/math/functions/Mat4Func.js","vendor/ogl/src/math/Mat4.js","vendor/ogl/src/math/functions/EulerFunc.js","vendor/ogl/src/math/Euler.js","vendor/ogl/src/core/Transform.js","vendor/ogl/src/core/Camera.js","vendor/ogl/src/math/functions/Vec2Func.js","vendor/ogl/src/math/Vec2.js","vendor/ogl/src/extras/Orbit.js","vendor/ogl/src/extras/Raycast.js","vendor/ogl/src/core/Texture.js","vendor/ogl/src/math/functions/Mat3Func.js","vendor/ogl/src/math/Mat3.js","vendor/ogl/src/core/Mesh.js","vendor/ogl/src/core/Geometry.js","vendor/ogl/src/extras/Plane.js","vendor/ogl/src/core/Program.js","src/World3d/debug/shader/quad.vert","src/World3d/debug/shader/quad.frag","src/World3d/debug/DisplayQuad.js","src/params.js","vendor/ogl/src/core/RenderTarget.js","vendor/ogl/src/extras/Triangle.js","vendor/ogl/src/extras/GPGPU.js","src/World3d/VerletGPU/Simulator/kernels/prevPos.frag","src/World3d/VerletGPU/Simulator/kernels/currentPos.frag","src/World3d/VerletGPU/Simulator/kernels/position.frag","src/World3d/VerletGPU/Simulator/kernels/calcNormal.frag","src/World3d/VerletGPU/Simulator/kernels/restLength.frag","src/World3d/VerletGPU/Simulator/kernels/restLengthDiagonal.frag","src/World3d/VerletGPU/Simulator/kernels/constrain.frag","src/World3d/VerletGPU/Simulator/kernels/constrainDiagonal.frag","src/World3d/VerletGPU/Simulator/kernels/constrainHorizontal.frag","src/World3d/VerletGPU/Simulator/kernels/constrainVertical.frag","src/World3d/VerletGPU/Simulator/kernels/constrainTLTR.frag","src/World3d/VerletGPU/Simulator/kernels/constrainBLBR.frag","src/World3d/VerletGPU/Simulator/index.js","src/World3d/VerletGPU/shader/verlet.vert","src/World3d/VerletGPU/shader/verlet.frag","src/World3d/VerletGPU/index.js","src/World3d/index.js","src/index.js","node_modules/parcel-bundler/src/builtins/hmr-runtime.js"],"names":["EPSILON","length","a","x","y","z","Math","sqrt","copy","out","set","add","b","subtract","multiply","divide","scale","distance","squaredDistance","squaredLength","negate","inverse","normalize","len","dot","cross","ax","ay","az","bx","by","bz","lerp","t","transformMat4","m","w","scaleRotateMat4","transformMat3","transformQuat","q","qx","qy","qz","qw","uvx","uvy","uvz","uuvx","uuvy","uuvz","w2","angle","tempA","tempB","cosine","PI","acos","exactEquals","Vec3","Array","constructor","v","Vec3Func","va","vb","sub","squaredLen","equals","applyMatrix4","mat4","scaleRotateMatrix4","applyQuaternion","clone","fromArray","o","toArray","transformDirection","tempVec3","ID","Renderer","canvas","document","createElement","width","height","dpr","alpha","depth","stencil","antialias","premultipliedAlpha","preserveDrawingBuffer","powerPreference","autoClear","webgl","attributes","color","id","gl","getContext","isWebgl2","renderer","setSize","state","blendFunc","src","ONE","dst","ZERO","blendEquation","modeRGB","FUNC_ADD","cullFace","frontFace","CCW","depthMask","depthFunc","LESS","premultiplyAlpha","flipY","unpackAlignment","framebuffer","viewport","textureUnits","activeTextureUnit","boundBuffer","uniformLocations","Map","extensions","getExtension","vertexAttribDivisor","drawArraysInstanced","drawElementsInstanced","createVertexArray","bindVertexArray","deleteVertexArray","drawBuffers","parameters","maxTextureUnits","getParameter","MAX_COMBINED_TEXTURE_IMAGE_UNITS","maxAnisotropy","MAX_TEXTURE_MAX_ANISOTROPY_EXT","Object","assign","style","setViewport","enable","disable","setBlendFunc","srcAlpha","dstAlpha","undefined","blendFuncSeparate","setBlendEquation","modeAlpha","blendEquationSeparate","setCullFace","value","setFrontFace","setDepthMask","setDepthFunc","activeTexture","TEXTURE0","bindFramebuffer","target","FRAMEBUFFER","buffer","extension","webgl2Func","extFunc","bind","sortOpaque","renderOrder","program","zDepth","sortTransparent","sortUI","getRenderList","scene","camera","frustumCull","sort","renderList","updateFrustum","traverse","node","visible","draw","frustumCulled","frustumIntersectsMesh","push","opaque","transparent","ui","forEach","depthTest","worldMatrix","getTranslation","projectionViewMatrix","concat","render","update","clear","DEPTH_TEST","COLOR_BUFFER_BIT","DEPTH_BUFFER_BIT","STENCIL_BUFFER_BIT","updateMatrixWorld","aw","identity","setAxisAngle","axis","rad","s","sin","cos","bw","rotateX","rotateY","rotateZ","slerp","omega","cosom","sinom","scale0","scale1","invert","a0","a1","a2","a3","invDot","conjugate","fromMat3","fTrace","fRoot","i","j","k","fromEuler","euler","order","sx","cx","sy","cy","sz","cz","vec4","Quat","onChange","QuatFunc","qA","qB","fromMatrix3","matrix3","fromAxisAngle","m00","m01","m02","m03","m10","m11","m12","m13","m20","m21","m22","m23","m30","m31","m32","m33","transpose","a01","a02","a03","a12","a13","a23","a00","a10","a11","a20","a21","a22","a30","a31","a32","a33","b00","b01","b02","b03","b04","b05","b06","b07","b08","b09","b10","b11","det","determinant","b0","b1","b2","b3","translate","rotate","hypot","c","b12","b20","b21","b22","abs","mat","getScaling","getMaxScaleOnAxis","max","getRotation","temp","scaling","is1","is2","is3","sm11","sm12","sm13","sm21","sm22","sm23","sm31","sm32","sm33","trace","S","fromRotationTranslationScale","x2","y2","z2","xx","xy","xz","yy","yz","zz","wx","wy","wz","fromQuat","yx","zx","zy","perspective","fovy","aspect","near","far","f","tan","nf","ortho","left","right","bottom","top","lr","bt","targetTo","eye","up","eyex","eyey","eyez","upx","upy","upz","z0","z1","x0","x1","multiplyScalar","Mat4","Mat4Func","ma","mb","fromPerspective","fov","fromOrthogonal","fromQuaternion","setPosition","compose","pos","lookAt","fromRotationMatrix","asin","min","atan2","tmpMat4","Euler","reorder","EulerFunc","Transform","parent","children","matrix","matrixAutoUpdate","position","quaternion","rotation","setParent","notifyParent","removeChild","addChild","child","notifyChild","indexOf","splice","force","updateMatrix","worldMatrixNeedsUpdate","l","callback","decompose","tempMat4","tempVec3a","tempVec3b","Camera","zoom","projectionMatrix","viewMatrix","worldPosition","type","orthographic","project","unproject","frustum","constant","invLen","geometry","bounds","radius","Infinity","computeBoundingSphere","center","frustumIntersectsSphere","normal","plane","transformMat2","transformMat2d","Vec2","Vec2Func","applyMatrix3","mat3","STATE","NONE","ROTATE","DOLLY","PAN","DOLLY_PAN","tempVec2a","tempVec2b","Orbit","object","element","enabled","ease","inertia","enableRotate","rotateSpeed","autoRotate","autoRotateSpeed","enableZoom","zoomSpeed","enablePan","panSpeed","minPolarAngle","maxPolarAngle","minAzimuthAngle","maxAzimuthAngle","minDistance","maxDistance","sphericalDelta","phi","theta","sphericalTarget","spherical","panDelta","offset","handleAutoRotate","sinPhiRadius","forcePosition","rotateStart","panStart","dollyStart","mouseButtons","ORBIT","ZOOM","getZoomScale","pow","panLeft","panUp","pan","deltaX","deltaY","el","body","targetDistance","clientHeight","dolly","dollyScale","handleMoveRotate","handleMouseMoveDolly","e","clientX","clientY","handleMovePan","handleTouchStartDollyPan","dx","touches","pageX","dy","pageY","handleTouchMoveDollyPan","onMouseDown","button","window","addEventListener","onMouseMove","onMouseUp","removeEventListener","onMouseWheel","stopPropagation","preventDefault","onTouchStart","onTouchMove","onTouchEnd","onContextMenu","addHandlers","passive","remove","tempVec2c","tempVec3c","tempVec3d","tempVec3e","tempVec3f","tempVec3g","tempVec3h","tempVec3i","tempVec3j","tempVec3k","Raycast","origin","direction","castMouse","mouse","intersectBounds","meshes","output","isArray","invWorldMat4","hits","mesh","localMaxDistance","localDistance","raycast","intersectSphere","intersectBox","hit","localPoint","point","intersectMeshes","includeUV","includeNormal","closestFaceNormal","faceNormal","barycoord","uvA","uvB","uvC","closestA","closestB","closestC","index","start","drawRange","end","count","ai","data","bi","ci","intersectTriangle","localFaceNormal","uv","localNormal","getBarycoord","sphere","ray","tca","d2","radius2","thc","t0","t1","box","tmin","tmax","tYmin","tYmax","tZmin","tZmax","invdirx","invdiry","invdirz","backfaceCulling","edge1","edge2","diff","DdN","sign","DdQxE2","DdE1xQ","QdN","v0","v1","v2","dot00","dot01","dot02","dot11","dot12","denom","invDenom","u","emptyPixel","Uint8Array","isPowerOf2","Texture","image","TEXTURE_2D","UNSIGNED_BYTE","format","RGBA","internalFormat","wrapS","CLAMP_TO_EDGE","wrapT","generateMipmaps","minFilter","NEAREST_MIPMAP_LINEAR","LINEAR","magFilter","anisotropy","level","texture","createTexture","store","glState","REPEAT","bindTexture","textureUnit","needsUpdate","pixelStorei","UNPACK_FLIP_Y_WEBGL","UNPACK_PREMULTIPLY_ALPHA_WEBGL","UNPACK_ALIGNMENT","texParameteri","TEXTURE_MIN_FILTER","TEXTURE_MAG_FILTER","TEXTURE_WRAP_S","TEXTURE_WRAP_T","texParameterf","TEXTURE_MAX_ANISOTROPY_EXT","TEXTURE_CUBE_MAP","texImage2D","TEXTURE_CUBE_MAP_POSITIVE_X","ArrayBuffer","isView","isCompressedTexture","compressedTexImage2D","generateMipmap","onUpdate","fromMat4","normalFromMat4","projection","Mat3","Mat3Func","fromMatrix4","fromBasis","vec3a","vec3b","vec3c","getNormalMatrix","Mesh","mode","TRIANGLES","console","error","modelViewMatrix","normalMatrix","beforeRenderCallbacks","afterRenderCallbacks","onBeforeRender","onAfterRender","uniforms","modelMatrix","cameraPosition","flipFaces","use","ATTR_ID","isBoundsWarned","Geometry","VAOs","instancedCount","currentGeometry","key","addAttribute","attr","size","Float32Array","FLOAT","Uint16Array","UNSIGNED_SHORT","UNSIGNED_INT","ELEMENT_ARRAY_BUFFER","ARRAY_BUFFER","normalized","stride","byteLength","divisor","instanced","createBuffer","updateAttribute","isInstanced","warn","bindBuffer","bufferData","STATIC_DRAW","setIndex","setDrawRange","setInstancedCount","createVAO","attributeOrder","bindAttributes","attributeLocations","location","name","numLoc","vertexAttribPointer","enableVertexAttribArray","drawElements","drawArrays","getPositionArray","computeBoundingBox","array","maxRadiusSq","vao","deleteBuffer","Plane","widthSegments","heightSegments","wSegs","hSegs","num","numIndices","Uint32Array","buildPlane","uDir","vDir","ii","io","segW","segH","iy","ix","d","arrayCacheF32","Program","vertex","fragment","BACK","depthWrite","ONE_MINUS_SRC_ALPHA","SRC_ALPHA","vertexShader","createShader","VERTEX_SHADER","shaderSource","compileShader","getShaderInfoLog","addLineNumbers","fragmentShader","FRAGMENT_SHADER","createProgram","attachShader","linkProgram","getProgramParameter","LINK_STATUS","getProgramInfoLog","deleteShader","numUniforms","ACTIVE_UNIFORMS","uIndex","uniform","getActiveUniform","getUniformLocation","split","match","uniformName","isStructArray","structIndex","Number","structProperty","isNaN","isStruct","locations","numAttribs","ACTIVE_ATTRIBUTES","aIndex","attribute","getActiveAttrib","getAttribLocation","join","applyState","CULL_FACE","BLEND","programActive","currentProgram","useProgram","activeUniform","setUniform","CW","deleteProgram","flatten","setValue","get","slice","arraysEqual","setArray","uniform1fv","uniform1f","uniform2fv","uniform3fv","uniform4fv","uniform1iv","uniform1i","uniform2iv","uniform3iv","uniform4iv","uniformMatrix2fv","uniformMatrix3fv","uniformMatrix4fv","string","lines","arrayLen","valueLen","warnCount","message","module","exports","require","DisplayQuad","_Texture","_Aspect","innerWidth","innerHeight","_Scale","_ViewportPos","params","PHYSICS","STIFFNESS","MAX_BOUNDS","TIMESTEP","CLAMP","STEPS","CLOTH","SIZE","NOISE","SPATIAL_FREQ","TEMPORAL_FREQ","AMP","SHADOW","BIAS","RenderTarget","depthTexture","createFramebuffer","textures","framebufferTexture2D","COLOR_ATTACHMENT0","NEAREST","DEPTH_COMPONENT","DEPTH_COMPONENT16","DEPTH_ATTACHMENT","depthBuffer","createRenderbuffer","bindRenderbuffer","RENDERBUFFER","renderbufferStorage","framebufferRenderbuffer","stencilBuffer","STENCIL_INDEX8","STENCIL_ATTACHMENT","depthStencilBuffer","DEPTH_STENCIL","DEPTH_STENCIL_ATTACHMENT","Triangle","GPGPU","filtering","initialData","passes","dataLength","ceil","log","LN2","coords","floor","floatArray","RGBA32F","options","HALF_FLOAT","HALF_FLOAT_OES","RGBA16F","fbo","read","write","swap","addPass","defaultVertex","defaultFragment","textureUniform","pass","enabledPasses","filter","prevPosKernel","currentPosKernel","positionKernel","normalKernel","restlengthKernel","restLengthDiagonalKernel","constrainKernel","constrainDiagonalKernel","constrainHorizontalKernel","constrainVerticalKernel","constrainTLTRKernel","constrainBLBRKernel","Simulator","countX","countY","firstTick","initSimulators","initPrograms","positionData","positionDataIterator","origDataIterator","corner","isTopLeft","isTopRight","isBottomLeft","isBottomRight","currentPosCapture","prevPositionData","prevPosIterator","twoPI","offsetx","random","offsety","offsetz","prevPositionCapture","positionSim","normalData","normalIterator","normalSim","initPositions","createDataTexture","restlengthCapture","restlengthDiagonalCapture","restlengthCaptureU","_InitPos","_Size","restlengthDiagonalU","prewarm","normalSimU","_Position","positionSimU","_PrevPos","_CurrentPos","_Normal","_Force","_Time","_InputWorldPos","_IsInteracting","_Corner","constrainU","_RestLengthVH","_RestLengthDiagonal","_TexelSize","_Clamp","_Stiffness","prevPosCaptureSimU","_Positions","currentPosCaptureSimU","constrainHorizontalFirstPassU","createConstraintUniform","flip","restlength","constrainHorizontalSecondPassU","constrainVerticalFirstPassU","constrainVerticalSecondPassU","constrainTLTRfirstPasssU","constrainTLTRsecondPasssU","constrainBRBLfirstPasssU","constrainBRBLsecondPasssU","_Flip","_RestLength","cornerUpdated","isInteracting","inputWorldPos","Positions","Normals","RestLengthsOrtho","RestLengthsDiagonal","Verlet","initGeometry","initProgram","timestep","timeStepSQ","windForce","forceDir","gravity","flipped","refGeometry","faces","particles","sticks","simulator","cubeMapTexture","loadCubeMap","_Normals","_CubeMap","loadImage","Promise","res","img","Image","onload","images","all","cubemap","posx","negx","posy","negy","posz","negz","flipFace","FRONT","World3d","init","initInputParams","clearColor","zIndex","appendChild","orbitCamera","initMesh","initDebug","inputPos","projectedInputPos","worldInputPos","verlet","positionQuad","prevPositionQuad","restlengthQuad","calcScreenToWorldPos","dist","dt","onResize","App","hideCTA","requestAnimationFrame","time","Date","now","tmpTime","deltaTime","prevTime","initEvents","ctaHidden","querySelector","classList","OVERLAY_ID","OldModule","bundle","Module","moduleName","call","hot","hotData","_acceptCallbacks","_disposeCallbacks","accept","fn","dispose","checkedAssets","assetsToAccept","isParcelRequire","WebSocket","hostname","protocol","ws","onmessage","event","JSON","parse","handled","assets","asset","isNew","didAccept","hmrAcceptCheck","global","parcelRequire","every","generated","js","hmrApply","hmrAcceptRun","reload","close","onclose","removeErrorOverlay","stack","overlay","createErrorOverlay","getElementById","stackTrace","innerText","innerHTML","getParents","modules","parents","dep","Function","deps","cached","cache","some","cb"],"mappings":"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","file":"src.a2b27638.js","sourceRoot":"..","sourcesContent":["const EPSILON = 0.000001;\r\n\r\n/**\r\n * Calculates the length of a vec3\r\n *\r\n * @param {vec3} a vector to calculate length of\r\n * @returns {Number} length of a\r\n */\r\nexport function length(a) {\r\n    let x = a[0];\r\n    let y = a[1];\r\n    let z = a[2];\r\n    return Math.sqrt(x * x + y * y + z * z);\r\n}\r\n\r\n/**\r\n * Copy the values from one vec3 to another\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the source vector\r\n * @returns {vec3} out\r\n */\r\nexport function copy(out, a) {\r\n    out[0] = a[0];\r\n    out[1] = a[1];\r\n    out[2] = a[2];\r\n    return out;\r\n}\r\n\r\n/**\r\n * Set the components of a vec3 to the given values\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @param {Number} z Z component\r\n * @returns {vec3} out\r\n */\r\nexport function set(out, x, y, z) {\r\n    out[0] = x;\r\n    out[1] = y;\r\n    out[2] = z;\r\n    return out;\r\n}\r\n\r\n/**\r\n * Adds two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @returns {vec3} out\r\n */\r\nexport function add(out, a, b) {\r\n    out[0] = a[0] + b[0];\r\n    out[1] = a[1] + b[1];\r\n    out[2] = a[2] + b[2];\r\n    return out;\r\n}\r\n\r\n/**\r\n * Subtracts vector b from vector a\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @returns {vec3} out\r\n */\r\nexport function subtract(out, a, b) {\r\n    out[0] = a[0] - b[0];\r\n    out[1] = a[1] - b[1];\r\n    out[2] = a[2] - b[2];\r\n    return out;\r\n}\r\n\r\n/**\r\n * Multiplies two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @returns {vec3} out\r\n */\r\nexport function multiply(out, a, b) {\r\n    out[0] = a[0] * b[0];\r\n    out[1] = a[1] * b[1];\r\n    out[2] = a[2] * b[2];\r\n    return out;\r\n}\r\n\r\n/**\r\n * Divides two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @returns {vec3} out\r\n */\r\nexport function divide(out, a, b) {\r\n    out[0] = a[0] / b[0];\r\n    out[1] = a[1] / b[1];\r\n    out[2] = a[2] / b[2];\r\n    return out;\r\n}\r\n\r\n/**\r\n * Scales a vec3 by a scalar number\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the vector to scale\r\n * @param {Number} b amount to scale the vector by\r\n * @returns {vec3} out\r\n */\r\nexport function scale(out, a, b) {\r\n    out[0] = a[0] * b;\r\n    out[1] = a[1] * b;\r\n    out[2] = a[2] * b;\r\n    return out;\r\n}\r\n\r\n/**\r\n * Calculates the euclidian distance between two vec3's\r\n *\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @returns {Number} distance between a and b\r\n */\r\nexport function distance(a, b) {\r\n    let x = b[0] - a[0];\r\n    let y = b[1] - a[1];\r\n    let z = b[2] - a[2];\r\n    return Math.sqrt(x * x + y * y + z * z);\r\n}\r\n\r\n/**\r\n * Calculates the squared euclidian distance between two vec3's\r\n *\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @returns {Number} squared distance between a and b\r\n */\r\nexport function squaredDistance(a, b) {\r\n    let x = b[0] - a[0];\r\n    let y = b[1] - a[1];\r\n    let z = b[2] - a[2];\r\n    return x * x + y * y + z * z;\r\n}\r\n\r\n/**\r\n * Calculates the squared length of a vec3\r\n *\r\n * @param {vec3} a vector to calculate squared length of\r\n * @returns {Number} squared length of a\r\n */\r\nexport function squaredLength(a) {\r\n    let x = a[0];\r\n    let y = a[1];\r\n    let z = a[2];\r\n    return x * x + y * y + z * z;\r\n}\r\n\r\n/**\r\n * Negates the components of a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a vector to negate\r\n * @returns {vec3} out\r\n */\r\nexport function negate(out, a) {\r\n    out[0] = -a[0];\r\n    out[1] = -a[1];\r\n    out[2] = -a[2];\r\n    return out;\r\n}\r\n\r\n/**\r\n * Returns the inverse of the components of a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a vector to invert\r\n * @returns {vec3} out\r\n */\r\nexport function inverse(out, a) {\r\n    out[0] = 1.0 / a[0];\r\n    out[1] = 1.0 / a[1];\r\n    out[2] = 1.0 / a[2];\r\n    return out;\r\n}\r\n\r\n/**\r\n * Normalize a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a vector to normalize\r\n * @returns {vec3} out\r\n */\r\nexport function normalize(out, a) {\r\n    let x = a[0];\r\n    let y = a[1];\r\n    let z = a[2];\r\n    let len = x * x + y * y + z * z;\r\n    if (len > 0) {\r\n        //TODO: evaluate use of glm_invsqrt here?\r\n        len = 1 / Math.sqrt(len);\r\n    }\r\n    out[0] = a[0] * len;\r\n    out[1] = a[1] * len;\r\n    out[2] = a[2] * len;\r\n    return out;\r\n}\r\n\r\n/**\r\n * Calculates the dot product of two vec3's\r\n *\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @returns {Number} dot product of a and b\r\n */\r\nexport function dot(a, b) {\r\n    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\r\n}\r\n\r\n/**\r\n * Computes the cross product of two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @returns {vec3} out\r\n */\r\nexport function cross(out, a, b) {\r\n    let ax = a[0],\r\n        ay = a[1],\r\n        az = a[2];\r\n    let bx = b[0],\r\n        by = b[1],\r\n        bz = b[2];\r\n\r\n    out[0] = ay * bz - az * by;\r\n    out[1] = az * bx - ax * bz;\r\n    out[2] = ax * by - ay * bx;\r\n    return out;\r\n}\r\n\r\n/**\r\n * Performs a linear interpolation between two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @param {Number} t interpolation amount between the two inputs\r\n * @returns {vec3} out\r\n */\r\nexport function lerp(out, a, b, t) {\r\n    let ax = a[0];\r\n    let ay = a[1];\r\n    let az = a[2];\r\n    out[0] = ax + t * (b[0] - ax);\r\n    out[1] = ay + t * (b[1] - ay);\r\n    out[2] = az + t * (b[2] - az);\r\n    return out;\r\n}\r\n\r\n/**\r\n * Transforms the vec3 with a mat4.\r\n * 4th vector component is implicitly '1'\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the vector to transform\r\n * @param {mat4} m matrix to transform with\r\n * @returns {vec3} out\r\n */\r\nexport function transformMat4(out, a, m) {\r\n    let x = a[0],\r\n        y = a[1],\r\n        z = a[2];\r\n    let w = m[3] * x + m[7] * y + m[11] * z + m[15];\r\n    w = w || 1.0;\r\n    out[0] = (m[0] * x + m[4] * y + m[8] * z + m[12]) / w;\r\n    out[1] = (m[1] * x + m[5] * y + m[9] * z + m[13]) / w;\r\n    out[2] = (m[2] * x + m[6] * y + m[10] * z + m[14]) / w;\r\n    return out;\r\n}\r\n\r\n/**\r\n * Same as above but doesn't apply translation.\r\n * Useful for rays.\r\n */\r\nexport function scaleRotateMat4(out, a, m) {\r\n    let x = a[0],\r\n        y = a[1],\r\n        z = a[2];\r\n    let w = m[3] * x + m[7] * y + m[11] * z + m[15];\r\n    w = w || 1.0;\r\n    out[0] = (m[0] * x + m[4] * y + m[8] * z) / w;\r\n    out[1] = (m[1] * x + m[5] * y + m[9] * z) / w;\r\n    out[2] = (m[2] * x + m[6] * y + m[10] * z) / w;\r\n    return out;\r\n}\r\n\r\n/**\r\n * Transforms the vec3 with a mat3.\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the vector to transform\r\n * @param {mat3} m the 3x3 matrix to transform with\r\n * @returns {vec3} out\r\n */\r\nexport function transformMat3(out, a, m) {\r\n    let x = a[0],\r\n        y = a[1],\r\n        z = a[2];\r\n    out[0] = x * m[0] + y * m[3] + z * m[6];\r\n    out[1] = x * m[1] + y * m[4] + z * m[7];\r\n    out[2] = x * m[2] + y * m[5] + z * m[8];\r\n    return out;\r\n}\r\n\r\n/**\r\n * Transforms the vec3 with a quat\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the vector to transform\r\n * @param {quat} q quaternion to transform with\r\n * @returns {vec3} out\r\n */\r\nexport function transformQuat(out, a, q) {\r\n    // benchmarks: https://jsperf.com/quaternion-transform-vec3-implementations-fixed\r\n\r\n    let x = a[0],\r\n        y = a[1],\r\n        z = a[2];\r\n    let qx = q[0],\r\n        qy = q[1],\r\n        qz = q[2],\r\n        qw = q[3];\r\n\r\n    let uvx = qy * z - qz * y;\r\n    let uvy = qz * x - qx * z;\r\n    let uvz = qx * y - qy * x;\r\n\r\n    let uuvx = qy * uvz - qz * uvy;\r\n    let uuvy = qz * uvx - qx * uvz;\r\n    let uuvz = qx * uvy - qy * uvx;\r\n\r\n    let w2 = qw * 2;\r\n    uvx *= w2;\r\n    uvy *= w2;\r\n    uvz *= w2;\r\n\r\n    uuvx *= 2;\r\n    uuvy *= 2;\r\n    uuvz *= 2;\r\n\r\n    out[0] = x + uvx + uuvx;\r\n    out[1] = y + uvy + uuvy;\r\n    out[2] = z + uvz + uuvz;\r\n    return out;\r\n}\r\n\r\n/**\r\n * Get the angle between two 3D vectors\r\n * @param {vec3} a The first operand\r\n * @param {vec3} b The second operand\r\n * @returns {Number} The angle in radians\r\n */\r\nexport const angle = (function () {\r\n    const tempA = [0, 0, 0];\r\n    const tempB = [0, 0, 0];\r\n\r\n    return function (a, b) {\r\n        copy(tempA, a);\r\n        copy(tempB, b);\r\n\r\n        normalize(tempA, tempA);\r\n        normalize(tempB, tempB);\r\n\r\n        let cosine = dot(tempA, tempB);\r\n\r\n        if (cosine > 1.0) {\r\n            return 0;\r\n        } else if (cosine < -1.0) {\r\n            return Math.PI;\r\n        } else {\r\n            return Math.acos(cosine);\r\n        }\r\n    };\r\n})();\r\n\r\n/**\r\n * Returns whether or not the vectors have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {vec3} a The first vector.\r\n * @param {vec3} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\r\nexport function exactEquals(a, b) {\r\n    return a[0] === b[0] && a[1] === b[1] && a[2] === b[2];\r\n}\r\n","import * as Vec3Func from './functions/Vec3Func.js';\r\n\r\nexport class Vec3 extends Array {\r\n    constructor(x = 0, y = x, z = x) {\r\n        super(x, y, z);\r\n        return this;\r\n    }\r\n\r\n    get x() {\r\n        return this[0];\r\n    }\r\n\r\n    get y() {\r\n        return this[1];\r\n    }\r\n\r\n    get z() {\r\n        return this[2];\r\n    }\r\n\r\n    set x(v) {\r\n        this[0] = v;\r\n    }\r\n\r\n    set y(v) {\r\n        this[1] = v;\r\n    }\r\n\r\n    set z(v) {\r\n        this[2] = v;\r\n    }\r\n\r\n    set(x, y = x, z = x) {\r\n        if (x.length) return this.copy(x);\r\n        Vec3Func.set(this, x, y, z);\r\n        return this;\r\n    }\r\n\r\n    copy(v) {\r\n        Vec3Func.copy(this, v);\r\n        return this;\r\n    }\r\n\r\n    add(va, vb) {\r\n        if (vb) Vec3Func.add(this, va, vb);\r\n        else Vec3Func.add(this, this, va);\r\n        return this;\r\n    }\r\n\r\n    sub(va, vb) {\r\n        if (vb) Vec3Func.subtract(this, va, vb);\r\n        else Vec3Func.subtract(this, this, va);\r\n        return this;\r\n    }\r\n\r\n    multiply(v) {\r\n        if (v.length) Vec3Func.multiply(this, this, v);\r\n        else Vec3Func.scale(this, this, v);\r\n        return this;\r\n    }\r\n\r\n    divide(v) {\r\n        if (v.length) Vec3Func.divide(this, this, v);\r\n        else Vec3Func.scale(this, this, 1 / v);\r\n        return this;\r\n    }\r\n\r\n    inverse(v = this) {\r\n        Vec3Func.inverse(this, v);\r\n        return this;\r\n    }\r\n\r\n    // Can't use 'length' as Array.prototype uses it\r\n    len() {\r\n        return Vec3Func.length(this);\r\n    }\r\n\r\n    distance(v) {\r\n        if (v) return Vec3Func.distance(this, v);\r\n        else return Vec3Func.length(this);\r\n    }\r\n\r\n    squaredLen() {\r\n        return Vec3Func.squaredLength(this);\r\n    }\r\n\r\n    squaredDistance(v) {\r\n        if (v) return Vec3Func.squaredDistance(this, v);\r\n        else return Vec3Func.squaredLength(this);\r\n    }\r\n\r\n    negate(v = this) {\r\n        Vec3Func.negate(this, v);\r\n        return this;\r\n    }\r\n\r\n    cross(va, vb) {\r\n        if (vb) Vec3Func.cross(this, va, vb);\r\n        else Vec3Func.cross(this, this, va);\r\n        return this;\r\n    }\r\n\r\n    scale(v) {\r\n        Vec3Func.scale(this, this, v);\r\n        return this;\r\n    }\r\n\r\n    normalize() {\r\n        Vec3Func.normalize(this, this);\r\n        return this;\r\n    }\r\n\r\n    dot(v) {\r\n        return Vec3Func.dot(this, v);\r\n    }\r\n\r\n    equals(v) {\r\n        return Vec3Func.exactEquals(this, v);\r\n    }\r\n\r\n    applyMatrix4(mat4) {\r\n        Vec3Func.transformMat4(this, this, mat4);\r\n        return this;\r\n    }\r\n\r\n    scaleRotateMatrix4(mat4) {\r\n        Vec3Func.scaleRotateMat4(this, this, mat4);\r\n        return this;\r\n    }\r\n\r\n    applyQuaternion(q) {\r\n        Vec3Func.transformQuat(this, this, q);\r\n        return this;\r\n    }\r\n\r\n    angle(v) {\r\n        return Vec3Func.angle(this, v);\r\n    }\r\n\r\n    lerp(v, t) {\r\n        Vec3Func.lerp(this, this, v, t);\r\n        return this;\r\n    }\r\n\r\n    clone() {\r\n        return new Vec3(this[0], this[1], this[2]);\r\n    }\r\n\r\n    fromArray(a, o = 0) {\r\n        this[0] = a[o];\r\n        this[1] = a[o + 1];\r\n        this[2] = a[o + 2];\r\n        return this;\r\n    }\r\n\r\n    toArray(a = [], o = 0) {\r\n        a[o] = this[0];\r\n        a[o + 1] = this[1];\r\n        a[o + 2] = this[2];\r\n        return a;\r\n    }\r\n\r\n    transformDirection(mat4) {\r\n        const x = this[0];\r\n        const y = this[1];\r\n        const z = this[2];\r\n\r\n        this[0] = mat4[0] * x + mat4[4] * y + mat4[8] * z;\r\n        this[1] = mat4[1] * x + mat4[5] * y + mat4[9] * z;\r\n        this[2] = mat4[2] * x + mat4[6] * y + mat4[10] * z;\r\n\r\n        return this.normalize();\r\n    }\r\n}\r\n","import { Vec3 } from '../math/Vec3.js';\r\n\r\n// TODO: Handle context loss https://www.khronos.org/webgl/wiki/HandlingContextLost\r\n\r\n// Not automatic - devs to use these methods manually\r\n// gl.colorMask( colorMask, colorMask, colorMask, colorMask );\r\n// gl.clearColor( r, g, b, a );\r\n// gl.stencilMask( stencilMask );\r\n// gl.stencilFunc( stencilFunc, stencilRef, stencilMask );\r\n// gl.stencilOp( stencilFail, stencilZFail, stencilZPass );\r\n// gl.clearStencil( stencil );\r\n\r\nconst tempVec3 = new Vec3();\r\nlet ID = 1;\r\n\r\nexport class Renderer {\r\n    constructor({\r\n        canvas = document.createElement('canvas'),\r\n        width = 300,\r\n        height = 150,\r\n        dpr = 1,\r\n        alpha = false,\r\n        depth = true,\r\n        stencil = false,\r\n        antialias = false,\r\n        premultipliedAlpha = false,\r\n        preserveDrawingBuffer = false,\r\n        powerPreference = 'default',\r\n        autoClear = true,\r\n        webgl = 2,\r\n    } = {}) {\r\n        const attributes = { alpha, depth, stencil, antialias, premultipliedAlpha, preserveDrawingBuffer, powerPreference };\r\n        this.dpr = dpr;\r\n        this.alpha = alpha;\r\n        this.color = true;\r\n        this.depth = depth;\r\n        this.stencil = stencil;\r\n        this.premultipliedAlpha = premultipliedAlpha;\r\n        this.autoClear = autoClear;\r\n        this.id = ID++;\r\n\r\n        // Attempt WebGL2 unless forced to 1, if not supported fallback to WebGL1\r\n        if (webgl === 2) this.gl = canvas.getContext('webgl2', attributes);\r\n        this.isWebgl2 = !!this.gl;\r\n        if (!this.gl) {\r\n            this.gl = canvas.getContext('webgl', attributes) || canvas.getContext('experimental-webgl', attributes);\r\n        }\r\n\r\n        // Attach renderer to gl so that all classes have access to internal state functions\r\n        this.gl.renderer = this;\r\n\r\n        // initialise size values\r\n        this.setSize(width, height);\r\n\r\n        // gl state stores to avoid redundant calls on methods used internally\r\n        this.state = {};\r\n        this.state.blendFunc = { src: this.gl.ONE, dst: this.gl.ZERO };\r\n        this.state.blendEquation = { modeRGB: this.gl.FUNC_ADD };\r\n        this.state.cullFace = null;\r\n        this.state.frontFace = this.gl.CCW;\r\n        this.state.depthMask = true;\r\n        this.state.depthFunc = this.gl.LESS;\r\n        this.state.premultiplyAlpha = false;\r\n        this.state.flipY = false;\r\n        this.state.unpackAlignment = 4;\r\n        this.state.framebuffer = null;\r\n        this.state.viewport = { width: null, height: null };\r\n        this.state.textureUnits = [];\r\n        this.state.activeTextureUnit = 0;\r\n        this.state.boundBuffer = null;\r\n        this.state.uniformLocations = new Map();\r\n\r\n        // store requested extensions\r\n        this.extensions = {};\r\n\r\n        // Initialise extra format types\r\n        if (this.isWebgl2) {\r\n            this.getExtension('EXT_color_buffer_float');\r\n            this.getExtension('OES_texture_float_linear');\r\n        } else {\r\n            this.getExtension('OES_texture_float');\r\n            this.getExtension('OES_texture_float_linear');\r\n            this.getExtension('OES_texture_half_float');\r\n            this.getExtension('OES_texture_half_float_linear');\r\n            this.getExtension('OES_element_index_uint');\r\n            this.getExtension('OES_standard_derivatives');\r\n            this.getExtension('EXT_sRGB');\r\n            this.getExtension('WEBGL_depth_texture');\r\n            this.getExtension('WEBGL_draw_buffers');\r\n        }\r\n\r\n        // Create method aliases using extension (WebGL1) or native if available (WebGL2)\r\n        this.vertexAttribDivisor = this.getExtension('ANGLE_instanced_arrays', 'vertexAttribDivisor', 'vertexAttribDivisorANGLE');\r\n        this.drawArraysInstanced = this.getExtension('ANGLE_instanced_arrays', 'drawArraysInstanced', 'drawArraysInstancedANGLE');\r\n        this.drawElementsInstanced = this.getExtension('ANGLE_instanced_arrays', 'drawElementsInstanced', 'drawElementsInstancedANGLE');\r\n        this.createVertexArray = this.getExtension('OES_vertex_array_object', 'createVertexArray', 'createVertexArrayOES');\r\n        this.bindVertexArray = this.getExtension('OES_vertex_array_object', 'bindVertexArray', 'bindVertexArrayOES');\r\n        this.deleteVertexArray = this.getExtension('OES_vertex_array_object', 'deleteVertexArray', 'deleteVertexArrayOES');\r\n        this.drawBuffers = this.getExtension('WEBGL_draw_buffers', 'drawBuffers', 'drawBuffersWEBGL');\r\n\r\n        // Store device parameters\r\n        this.parameters = {};\r\n        this.parameters.maxTextureUnits = this.gl.getParameter(this.gl.MAX_COMBINED_TEXTURE_IMAGE_UNITS);\r\n        this.parameters.maxAnisotropy = this.getExtension('EXT_texture_filter_anisotropic')\r\n            ? this.gl.getParameter(this.getExtension('EXT_texture_filter_anisotropic').MAX_TEXTURE_MAX_ANISOTROPY_EXT)\r\n            : 0;\r\n    }\r\n\r\n    setSize(width, height) {\r\n        this.width = width;\r\n        this.height = height;\r\n\r\n        this.gl.canvas.width = width * this.dpr;\r\n        this.gl.canvas.height = height * this.dpr;\r\n\r\n        Object.assign(this.gl.canvas.style, {\r\n            width: width + 'px',\r\n            height: height + 'px',\r\n        });\r\n    }\r\n\r\n    setViewport(width, height) {\r\n        if (this.state.viewport.width === width && this.state.viewport.height === height) return;\r\n        this.state.viewport.width = width;\r\n        this.state.viewport.height = height;\r\n        this.gl.viewport(0, 0, width, height);\r\n    }\r\n\r\n    enable(id) {\r\n        if (this.state[id] === true) return;\r\n        this.gl.enable(id);\r\n        this.state[id] = true;\r\n    }\r\n\r\n    disable(id) {\r\n        if (this.state[id] === false) return;\r\n        this.gl.disable(id);\r\n        this.state[id] = false;\r\n    }\r\n\r\n    setBlendFunc(src, dst, srcAlpha, dstAlpha) {\r\n        if (\r\n            this.state.blendFunc.src === src &&\r\n            this.state.blendFunc.dst === dst &&\r\n            this.state.blendFunc.srcAlpha === srcAlpha &&\r\n            this.state.blendFunc.dstAlpha === dstAlpha\r\n        )\r\n            return;\r\n        this.state.blendFunc.src = src;\r\n        this.state.blendFunc.dst = dst;\r\n        this.state.blendFunc.srcAlpha = srcAlpha;\r\n        this.state.blendFunc.dstAlpha = dstAlpha;\r\n        if (srcAlpha !== undefined) this.gl.blendFuncSeparate(src, dst, srcAlpha, dstAlpha);\r\n        else this.gl.blendFunc(src, dst);\r\n    }\r\n\r\n    setBlendEquation(modeRGB, modeAlpha) {\r\n        modeRGB = modeRGB || this.gl.FUNC_ADD;\r\n        if (this.state.blendEquation.modeRGB === modeRGB && this.state.blendEquation.modeAlpha === modeAlpha) return;\r\n        this.state.blendEquation.modeRGB = modeRGB;\r\n        this.state.blendEquation.modeAlpha = modeAlpha;\r\n        if (modeAlpha !== undefined) this.gl.blendEquationSeparate(modeRGB, modeAlpha);\r\n        else this.gl.blendEquation(modeRGB);\r\n    }\r\n\r\n    setCullFace(value) {\r\n        if (this.state.cullFace === value) return;\r\n        this.state.cullFace = value;\r\n        this.gl.cullFace(value);\r\n    }\r\n\r\n    setFrontFace(value) {\r\n        if (this.state.frontFace === value) return;\r\n        this.state.frontFace = value;\r\n        this.gl.frontFace(value);\r\n    }\r\n\r\n    setDepthMask(value) {\r\n        if (this.state.depthMask === value) return;\r\n        this.state.depthMask = value;\r\n        this.gl.depthMask(value);\r\n    }\r\n\r\n    setDepthFunc(value) {\r\n        if (this.state.depthFunc === value) return;\r\n        this.state.depthFunc = value;\r\n        this.gl.depthFunc(value);\r\n    }\r\n\r\n    activeTexture(value) {\r\n        if (this.state.activeTextureUnit === value) return;\r\n        this.state.activeTextureUnit = value;\r\n        this.gl.activeTexture(this.gl.TEXTURE0 + value);\r\n    }\r\n\r\n    bindFramebuffer({ target = this.gl.FRAMEBUFFER, buffer = null } = {}) {\r\n        if (this.state.framebuffer === buffer) return;\r\n        this.state.framebuffer = buffer;\r\n        this.gl.bindFramebuffer(target, buffer);\r\n    }\r\n\r\n    getExtension(extension, webgl2Func, extFunc) {\r\n        // if webgl2 function supported, return func bound to gl context\r\n        if (webgl2Func && this.gl[webgl2Func]) return this.gl[webgl2Func].bind(this.gl);\r\n\r\n        // fetch extension once only\r\n        if (!this.extensions[extension]) {\r\n            this.extensions[extension] = this.gl.getExtension(extension);\r\n        }\r\n\r\n        // return extension if no function requested\r\n        if (!webgl2Func) return this.extensions[extension];\r\n\r\n        // Return null if extension not supported\r\n        if (!this.extensions[extension]) return null;\r\n\r\n        // return extension function, bound to extension\r\n        return this.extensions[extension][extFunc].bind(this.extensions[extension]);\r\n    }\r\n\r\n    sortOpaque(a, b) {\r\n        if (a.renderOrder !== b.renderOrder) {\r\n            return a.renderOrder - b.renderOrder;\r\n        } else if (a.program.id !== b.program.id) {\r\n            return a.program.id - b.program.id;\r\n        } else if (a.zDepth !== b.zDepth) {\r\n            return a.zDepth - b.zDepth;\r\n        } else {\r\n            return b.id - a.id;\r\n        }\r\n    }\r\n\r\n    sortTransparent(a, b) {\r\n        if (a.renderOrder !== b.renderOrder) {\r\n            return a.renderOrder - b.renderOrder;\r\n        }\r\n        if (a.zDepth !== b.zDepth) {\r\n            return b.zDepth - a.zDepth;\r\n        } else {\r\n            return b.id - a.id;\r\n        }\r\n    }\r\n\r\n    sortUI(a, b) {\r\n        if (a.renderOrder !== b.renderOrder) {\r\n            return a.renderOrder - b.renderOrder;\r\n        } else if (a.program.id !== b.program.id) {\r\n            return a.program.id - b.program.id;\r\n        } else {\r\n            return b.id - a.id;\r\n        }\r\n    }\r\n\r\n    getRenderList({ scene, camera, frustumCull, sort }) {\r\n        let renderList = [];\r\n\r\n        if (camera && frustumCull) camera.updateFrustum();\r\n\r\n        // Get visible\r\n        scene.traverse((node) => {\r\n            if (!node.visible) return true;\r\n            if (!node.draw) return;\r\n\r\n            if (frustumCull && node.frustumCulled && camera) {\r\n                if (!camera.frustumIntersectsMesh(node)) return;\r\n            }\r\n\r\n            renderList.push(node);\r\n        });\r\n\r\n        if (sort) {\r\n            const opaque = [];\r\n            const transparent = []; // depthTest true\r\n            const ui = []; // depthTest false\r\n\r\n            renderList.forEach((node) => {\r\n                // Split into the 3 render groups\r\n                if (!node.program.transparent) {\r\n                    opaque.push(node);\r\n                } else if (node.program.depthTest) {\r\n                    transparent.push(node);\r\n                } else {\r\n                    ui.push(node);\r\n                }\r\n\r\n                node.zDepth = 0;\r\n\r\n                // Only calculate z-depth if renderOrder unset and depthTest is true\r\n                if (node.renderOrder !== 0 || !node.program.depthTest || !camera) return;\r\n\r\n                // update z-depth\r\n                node.worldMatrix.getTranslation(tempVec3);\r\n                tempVec3.applyMatrix4(camera.projectionViewMatrix);\r\n                node.zDepth = tempVec3.z;\r\n            });\r\n\r\n            opaque.sort(this.sortOpaque);\r\n            transparent.sort(this.sortTransparent);\r\n            ui.sort(this.sortUI);\r\n\r\n            renderList = opaque.concat(transparent, ui);\r\n        }\r\n\r\n        return renderList;\r\n    }\r\n\r\n    render({ scene, camera, target = null, update = true, sort = true, frustumCull = true, clear }) {\r\n        if (target === null) {\r\n            // make sure no render target bound so draws to canvas\r\n            this.bindFramebuffer();\r\n            this.setViewport(this.width * this.dpr, this.height * this.dpr);\r\n        } else {\r\n            // bind supplied render target and update viewport\r\n            this.bindFramebuffer(target);\r\n            this.setViewport(target.width, target.height);\r\n        }\r\n\r\n        if (clear || (this.autoClear && clear !== false)) {\r\n            // Ensure depth buffer writing is enabled so it can be cleared\r\n            if (this.depth && (!target || target.depth)) {\r\n                this.enable(this.gl.DEPTH_TEST);\r\n                this.setDepthMask(true);\r\n            }\r\n            this.gl.clear(\r\n                (this.color ? this.gl.COLOR_BUFFER_BIT : 0) |\r\n                    (this.depth ? this.gl.DEPTH_BUFFER_BIT : 0) |\r\n                    (this.stencil ? this.gl.STENCIL_BUFFER_BIT : 0)\r\n            );\r\n        }\r\n\r\n        // updates all scene graph matrices\r\n        if (update) scene.updateMatrixWorld();\r\n\r\n        // Update camera separately, in case not in scene graph\r\n        if (camera) camera.updateMatrixWorld();\r\n\r\n        // Get render list - entails culling and sorting\r\n        const renderList = this.getRenderList({ scene, camera, frustumCull, sort });\r\n\r\n        renderList.forEach((node) => {\r\n            node.draw({ camera });\r\n        });\r\n    }\r\n}\r\n","const EPSILON = 0.000001;\r\n\r\n/**\r\n * Copy the values from one vec4 to another\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a the source vector\r\n * @returns {vec4} out\r\n */\r\nexport function copy(out, a) {\r\n    out[0] = a[0];\r\n    out[1] = a[1];\r\n    out[2] = a[2];\r\n    out[3] = a[3];\r\n    return out;\r\n}\r\n\r\n/**\r\n * Set the components of a vec4 to the given values\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @param {Number} z Z component\r\n * @param {Number} w W component\r\n * @returns {vec4} out\r\n */\r\nexport function set(out, x, y, z, w) {\r\n    out[0] = x;\r\n    out[1] = y;\r\n    out[2] = z;\r\n    out[3] = w;\r\n    return out;\r\n}\r\n\r\n/**\r\n * Adds two vec4's\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a the first operand\r\n * @param {vec4} b the second operand\r\n * @returns {vec4} out\r\n */\r\nexport function add(out, a, b) {\r\n    out[0] = a[0] + b[0];\r\n    out[1] = a[1] + b[1];\r\n    out[2] = a[2] + b[2];\r\n    out[3] = a[3] + b[3];\r\n    return out;\r\n}\r\n\r\n/**\r\n * Scales a vec4 by a scalar number\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a the vector to scale\r\n * @param {Number} b amount to scale the vector by\r\n * @returns {vec4} out\r\n */\r\nexport function scale(out, a, b) {\r\n    out[0] = a[0] * b;\r\n    out[1] = a[1] * b;\r\n    out[2] = a[2] * b;\r\n    out[3] = a[3] * b;\r\n    return out;\r\n}\r\n\r\n/**\r\n * Calculates the length of a vec4\r\n *\r\n * @param {vec4} a vector to calculate length of\r\n * @returns {Number} length of a\r\n */\r\nexport function length(a) {\r\n    let x = a[0];\r\n    let y = a[1];\r\n    let z = a[2];\r\n    let w = a[3];\r\n    return Math.sqrt(x * x + y * y + z * z + w * w);\r\n}\r\n\r\n/**\r\n * Normalize a vec4\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a vector to normalize\r\n * @returns {vec4} out\r\n */\r\nexport function normalize(out, a) {\r\n    let x = a[0];\r\n    let y = a[1];\r\n    let z = a[2];\r\n    let w = a[3];\r\n    let len = x * x + y * y + z * z + w * w;\r\n    if (len > 0) {\r\n        len = 1 / Math.sqrt(len);\r\n    }\r\n    out[0] = x * len;\r\n    out[1] = y * len;\r\n    out[2] = z * len;\r\n    out[3] = w * len;\r\n    return out;\r\n}\r\n\r\n/**\r\n * Calculates the dot product of two vec4's\r\n *\r\n * @param {vec4} a the first operand\r\n * @param {vec4} b the second operand\r\n * @returns {Number} dot product of a and b\r\n */\r\nexport function dot(a, b) {\r\n    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2] + a[3] * b[3];\r\n}\r\n\r\n/**\r\n * Performs a linear interpolation between two vec4's\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a the first operand\r\n * @param {vec4} b the second operand\r\n * @param {Number} t interpolation amount between the two inputs\r\n * @returns {vec4} out\r\n */\r\nexport function lerp(out, a, b, t) {\r\n    let ax = a[0];\r\n    let ay = a[1];\r\n    let az = a[2];\r\n    let aw = a[3];\r\n    out[0] = ax + t * (b[0] - ax);\r\n    out[1] = ay + t * (b[1] - ay);\r\n    out[2] = az + t * (b[2] - az);\r\n    out[3] = aw + t * (b[3] - aw);\r\n    return out;\r\n}\r\n","import * as vec4 from './Vec4Func.js';\r\n\r\n/**\r\n * Set a quat to the identity quaternion\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @returns {quat} out\r\n */\r\nexport function identity(out) {\r\n    out[0] = 0;\r\n    out[1] = 0;\r\n    out[2] = 0;\r\n    out[3] = 1;\r\n    return out;\r\n}\r\n\r\n/**\r\n * Sets a quat from the given angle and rotation axis,\r\n * then returns it.\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {vec3} axis the axis around which to rotate\r\n * @param {Number} rad the angle in radians\r\n * @returns {quat} out\r\n **/\r\nexport function setAxisAngle(out, axis, rad) {\r\n    rad = rad * 0.5;\r\n    let s = Math.sin(rad);\r\n    out[0] = s * axis[0];\r\n    out[1] = s * axis[1];\r\n    out[2] = s * axis[2];\r\n    out[3] = Math.cos(rad);\r\n    return out;\r\n}\r\n\r\n/**\r\n * Multiplies two quats\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {quat} a the first operand\r\n * @param {quat} b the second operand\r\n * @returns {quat} out\r\n */\r\nexport function multiply(out, a, b) {\r\n    let ax = a[0],\r\n        ay = a[1],\r\n        az = a[2],\r\n        aw = a[3];\r\n    let bx = b[0],\r\n        by = b[1],\r\n        bz = b[2],\r\n        bw = b[3];\r\n\r\n    out[0] = ax * bw + aw * bx + ay * bz - az * by;\r\n    out[1] = ay * bw + aw * by + az * bx - ax * bz;\r\n    out[2] = az * bw + aw * bz + ax * by - ay * bx;\r\n    out[3] = aw * bw - ax * bx - ay * by - az * bz;\r\n    return out;\r\n}\r\n\r\n/**\r\n * Rotates a quaternion by the given angle about the X axis\r\n *\r\n * @param {quat} out quat receiving operation result\r\n * @param {quat} a quat to rotate\r\n * @param {number} rad angle (in radians) to rotate\r\n * @returns {quat} out\r\n */\r\nexport function rotateX(out, a, rad) {\r\n    rad *= 0.5;\r\n\r\n    let ax = a[0],\r\n        ay = a[1],\r\n        az = a[2],\r\n        aw = a[3];\r\n    let bx = Math.sin(rad),\r\n        bw = Math.cos(rad);\r\n\r\n    out[0] = ax * bw + aw * bx;\r\n    out[1] = ay * bw + az * bx;\r\n    out[2] = az * bw - ay * bx;\r\n    out[3] = aw * bw - ax * bx;\r\n    return out;\r\n}\r\n\r\n/**\r\n * Rotates a quaternion by the given angle about the Y axis\r\n *\r\n * @param {quat} out quat receiving operation result\r\n * @param {quat} a quat to rotate\r\n * @param {number} rad angle (in radians) to rotate\r\n * @returns {quat} out\r\n */\r\nexport function rotateY(out, a, rad) {\r\n    rad *= 0.5;\r\n\r\n    let ax = a[0],\r\n        ay = a[1],\r\n        az = a[2],\r\n        aw = a[3];\r\n    let by = Math.sin(rad),\r\n        bw = Math.cos(rad);\r\n\r\n    out[0] = ax * bw - az * by;\r\n    out[1] = ay * bw + aw * by;\r\n    out[2] = az * bw + ax * by;\r\n    out[3] = aw * bw - ay * by;\r\n    return out;\r\n}\r\n\r\n/**\r\n * Rotates a quaternion by the given angle about the Z axis\r\n *\r\n * @param {quat} out quat receiving operation result\r\n * @param {quat} a quat to rotate\r\n * @param {number} rad angle (in radians) to rotate\r\n * @returns {quat} out\r\n */\r\nexport function rotateZ(out, a, rad) {\r\n    rad *= 0.5;\r\n\r\n    let ax = a[0],\r\n        ay = a[1],\r\n        az = a[2],\r\n        aw = a[3];\r\n    let bz = Math.sin(rad),\r\n        bw = Math.cos(rad);\r\n\r\n    out[0] = ax * bw + ay * bz;\r\n    out[1] = ay * bw - ax * bz;\r\n    out[2] = az * bw + aw * bz;\r\n    out[3] = aw * bw - az * bz;\r\n    return out;\r\n}\r\n\r\n/**\r\n * Performs a spherical linear interpolation between two quat\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {quat} a the first operand\r\n * @param {quat} b the second operand\r\n * @param {Number} t interpolation amount between the two inputs\r\n * @returns {quat} out\r\n */\r\nexport function slerp(out, a, b, t) {\r\n    // benchmarks:\r\n    //    http://jsperf.com/quaternion-slerp-implementations\r\n    let ax = a[0],\r\n        ay = a[1],\r\n        az = a[2],\r\n        aw = a[3];\r\n    let bx = b[0],\r\n        by = b[1],\r\n        bz = b[2],\r\n        bw = b[3];\r\n\r\n    let omega, cosom, sinom, scale0, scale1;\r\n\r\n    // calc cosine\r\n    cosom = ax * bx + ay * by + az * bz + aw * bw;\r\n    // adjust signs (if necessary)\r\n    if (cosom < 0.0) {\r\n        cosom = -cosom;\r\n        bx = -bx;\r\n        by = -by;\r\n        bz = -bz;\r\n        bw = -bw;\r\n    }\r\n    // calculate coefficients\r\n    if (1.0 - cosom > 0.000001) {\r\n        // standard case (slerp)\r\n        omega = Math.acos(cosom);\r\n        sinom = Math.sin(omega);\r\n        scale0 = Math.sin((1.0 - t) * omega) / sinom;\r\n        scale1 = Math.sin(t * omega) / sinom;\r\n    } else {\r\n        // \"from\" and \"to\" quaternions are very close\r\n        //  ... so we can do a linear interpolation\r\n        scale0 = 1.0 - t;\r\n        scale1 = t;\r\n    }\r\n    // calculate final values\r\n    out[0] = scale0 * ax + scale1 * bx;\r\n    out[1] = scale0 * ay + scale1 * by;\r\n    out[2] = scale0 * az + scale1 * bz;\r\n    out[3] = scale0 * aw + scale1 * bw;\r\n\r\n    return out;\r\n}\r\n\r\n/**\r\n * Calculates the inverse of a quat\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {quat} a quat to calculate inverse of\r\n * @returns {quat} out\r\n */\r\nexport function invert(out, a) {\r\n    let a0 = a[0],\r\n        a1 = a[1],\r\n        a2 = a[2],\r\n        a3 = a[3];\r\n    let dot = a0 * a0 + a1 * a1 + a2 * a2 + a3 * a3;\r\n    let invDot = dot ? 1.0 / dot : 0;\r\n\r\n    // TODO: Would be faster to return [0,0,0,0] immediately if dot == 0\r\n\r\n    out[0] = -a0 * invDot;\r\n    out[1] = -a1 * invDot;\r\n    out[2] = -a2 * invDot;\r\n    out[3] = a3 * invDot;\r\n    return out;\r\n}\r\n\r\n/**\r\n * Calculates the conjugate of a quat\r\n * If the quaternion is normalized, this function is faster than quat.inverse and produces the same result.\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {quat} a quat to calculate conjugate of\r\n * @returns {quat} out\r\n */\r\nexport function conjugate(out, a) {\r\n    out[0] = -a[0];\r\n    out[1] = -a[1];\r\n    out[2] = -a[2];\r\n    out[3] = a[3];\r\n    return out;\r\n}\r\n\r\n/**\r\n * Creates a quaternion from the given 3x3 rotation matrix.\r\n *\r\n * NOTE: The resultant quaternion is not normalized, so you should be sure\r\n * to renormalize the quaternion yourself where necessary.\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {mat3} m rotation matrix\r\n * @returns {quat} out\r\n * @function\r\n */\r\nexport function fromMat3(out, m) {\r\n    // Algorithm in Ken Shoemake's article in 1987 SIGGRAPH course notes\r\n    // article \"Quaternion Calculus and Fast Animation\".\r\n    let fTrace = m[0] + m[4] + m[8];\r\n    let fRoot;\r\n\r\n    if (fTrace > 0.0) {\r\n        // |w| > 1/2, may as well choose w > 1/2\r\n        fRoot = Math.sqrt(fTrace + 1.0); // 2w\r\n        out[3] = 0.5 * fRoot;\r\n        fRoot = 0.5 / fRoot; // 1/(4w)\r\n        out[0] = (m[5] - m[7]) * fRoot;\r\n        out[1] = (m[6] - m[2]) * fRoot;\r\n        out[2] = (m[1] - m[3]) * fRoot;\r\n    } else {\r\n        // |w| <= 1/2\r\n        let i = 0;\r\n        if (m[4] > m[0]) i = 1;\r\n        if (m[8] > m[i * 3 + i]) i = 2;\r\n        let j = (i + 1) % 3;\r\n        let k = (i + 2) % 3;\r\n\r\n        fRoot = Math.sqrt(m[i * 3 + i] - m[j * 3 + j] - m[k * 3 + k] + 1.0);\r\n        out[i] = 0.5 * fRoot;\r\n        fRoot = 0.5 / fRoot;\r\n        out[3] = (m[j * 3 + k] - m[k * 3 + j]) * fRoot;\r\n        out[j] = (m[j * 3 + i] + m[i * 3 + j]) * fRoot;\r\n        out[k] = (m[k * 3 + i] + m[i * 3 + k]) * fRoot;\r\n    }\r\n\r\n    return out;\r\n}\r\n\r\n/**\r\n * Creates a quaternion from the given euler angle x, y, z.\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {vec3} euler Angles to rotate around each axis in degrees.\r\n * @param {String} order detailing order of operations. Default 'XYZ'.\r\n * @returns {quat} out\r\n * @function\r\n */\r\nexport function fromEuler(out, euler, order = 'YXZ') {\r\n    let sx = Math.sin(euler[0] * 0.5);\r\n    let cx = Math.cos(euler[0] * 0.5);\r\n    let sy = Math.sin(euler[1] * 0.5);\r\n    let cy = Math.cos(euler[1] * 0.5);\r\n    let sz = Math.sin(euler[2] * 0.5);\r\n    let cz = Math.cos(euler[2] * 0.5);\r\n\r\n    if (order === 'XYZ') {\r\n        out[0] = sx * cy * cz + cx * sy * sz;\r\n        out[1] = cx * sy * cz - sx * cy * sz;\r\n        out[2] = cx * cy * sz + sx * sy * cz;\r\n        out[3] = cx * cy * cz - sx * sy * sz;\r\n    } else if (order === 'YXZ') {\r\n        out[0] = sx * cy * cz + cx * sy * sz;\r\n        out[1] = cx * sy * cz - sx * cy * sz;\r\n        out[2] = cx * cy * sz - sx * sy * cz;\r\n        out[3] = cx * cy * cz + sx * sy * sz;\r\n    } else if (order === 'ZXY') {\r\n        out[0] = sx * cy * cz - cx * sy * sz;\r\n        out[1] = cx * sy * cz + sx * cy * sz;\r\n        out[2] = cx * cy * sz + sx * sy * cz;\r\n        out[3] = cx * cy * cz - sx * sy * sz;\r\n    } else if (order === 'ZYX') {\r\n        out[0] = sx * cy * cz - cx * sy * sz;\r\n        out[1] = cx * sy * cz + sx * cy * sz;\r\n        out[2] = cx * cy * sz - sx * sy * cz;\r\n        out[3] = cx * cy * cz + sx * sy * sz;\r\n    } else if (order === 'YZX') {\r\n        out[0] = sx * cy * cz + cx * sy * sz;\r\n        out[1] = cx * sy * cz + sx * cy * sz;\r\n        out[2] = cx * cy * sz - sx * sy * cz;\r\n        out[3] = cx * cy * cz - sx * sy * sz;\r\n    } else if (order === 'XZY') {\r\n        out[0] = sx * cy * cz - cx * sy * sz;\r\n        out[1] = cx * sy * cz - sx * cy * sz;\r\n        out[2] = cx * cy * sz + sx * sy * cz;\r\n        out[3] = cx * cy * cz + sx * sy * sz;\r\n    }\r\n\r\n    return out;\r\n}\r\n\r\n/**\r\n * Copy the values from one quat to another\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {quat} a the source quaternion\r\n * @returns {quat} out\r\n * @function\r\n */\r\nexport const copy = vec4.copy;\r\n\r\n/**\r\n * Set the components of a quat to the given values\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @param {Number} z Z component\r\n * @param {Number} w W component\r\n * @returns {quat} out\r\n * @function\r\n */\r\nexport const set = vec4.set;\r\n\r\n/**\r\n * Adds two quat's\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {quat} a the first operand\r\n * @param {quat} b the second operand\r\n * @returns {quat} out\r\n * @function\r\n */\r\nexport const add = vec4.add;\r\n\r\n/**\r\n * Scales a quat by a scalar number\r\n *\r\n * @param {quat} out the receiving vector\r\n * @param {quat} a the vector to scale\r\n * @param {Number} b amount to scale the vector by\r\n * @returns {quat} out\r\n * @function\r\n */\r\nexport const scale = vec4.scale;\r\n\r\n/**\r\n * Calculates the dot product of two quat's\r\n *\r\n * @param {quat} a the first operand\r\n * @param {quat} b the second operand\r\n * @returns {Number} dot product of a and b\r\n * @function\r\n */\r\nexport const dot = vec4.dot;\r\n\r\n/**\r\n * Performs a linear interpolation between two quat's\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {quat} a the first operand\r\n * @param {quat} b the second operand\r\n * @param {Number} t interpolation amount between the two inputs\r\n * @returns {quat} out\r\n * @function\r\n */\r\nexport const lerp = vec4.lerp;\r\n\r\n/**\r\n * Calculates the length of a quat\r\n *\r\n * @param {quat} a vector to calculate length of\r\n * @returns {Number} length of a\r\n */\r\nexport const length = vec4.length;\r\n\r\n/**\r\n * Normalize a quat\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {quat} a quaternion to normalize\r\n * @returns {quat} out\r\n * @function\r\n */\r\nexport const normalize = vec4.normalize;\r\n","import * as QuatFunc from './functions/QuatFunc.js';\r\n\r\nexport class Quat extends Array {\r\n    constructor(x = 0, y = 0, z = 0, w = 1) {\r\n        super(x, y, z, w);\r\n        this.onChange = () => {};\r\n        return this;\r\n    }\r\n\r\n    get x() {\r\n        return this[0];\r\n    }\r\n\r\n    get y() {\r\n        return this[1];\r\n    }\r\n\r\n    get z() {\r\n        return this[2];\r\n    }\r\n\r\n    get w() {\r\n        return this[3];\r\n    }\r\n\r\n    set x(v) {\r\n        this[0] = v;\r\n        this.onChange();\r\n    }\r\n\r\n    set y(v) {\r\n        this[1] = v;\r\n        this.onChange();\r\n    }\r\n\r\n    set z(v) {\r\n        this[2] = v;\r\n        this.onChange();\r\n    }\r\n\r\n    set w(v) {\r\n        this[3] = v;\r\n        this.onChange();\r\n    }\r\n\r\n    identity() {\r\n        QuatFunc.identity(this);\r\n        this.onChange();\r\n        return this;\r\n    }\r\n\r\n    set(x, y, z, w) {\r\n        if (x.length) return this.copy(x);\r\n        QuatFunc.set(this, x, y, z, w);\r\n        this.onChange();\r\n        return this;\r\n    }\r\n\r\n    rotateX(a) {\r\n        QuatFunc.rotateX(this, this, a);\r\n        this.onChange();\r\n        return this;\r\n    }\r\n\r\n    rotateY(a) {\r\n        QuatFunc.rotateY(this, this, a);\r\n        this.onChange();\r\n        return this;\r\n    }\r\n\r\n    rotateZ(a) {\r\n        QuatFunc.rotateZ(this, this, a);\r\n        this.onChange();\r\n        return this;\r\n    }\r\n\r\n    inverse(q = this) {\r\n        QuatFunc.invert(this, q);\r\n        this.onChange();\r\n        return this;\r\n    }\r\n\r\n    conjugate(q = this) {\r\n        QuatFunc.conjugate(this, q);\r\n        this.onChange();\r\n        return this;\r\n    }\r\n\r\n    copy(q) {\r\n        QuatFunc.copy(this, q);\r\n        this.onChange();\r\n        return this;\r\n    }\r\n\r\n    normalize(q = this) {\r\n        QuatFunc.normalize(this, q);\r\n        this.onChange();\r\n        return this;\r\n    }\r\n\r\n    multiply(qA, qB) {\r\n        if (qB) {\r\n            QuatFunc.multiply(this, qA, qB);\r\n        } else {\r\n            QuatFunc.multiply(this, this, qA);\r\n        }\r\n        this.onChange();\r\n        return this;\r\n    }\r\n\r\n    dot(v) {\r\n        return QuatFunc.dot(this, v);\r\n    }\r\n\r\n    fromMatrix3(matrix3) {\r\n        QuatFunc.fromMat3(this, matrix3);\r\n        this.onChange();\r\n        return this;\r\n    }\r\n\r\n    fromEuler(euler) {\r\n        QuatFunc.fromEuler(this, euler, euler.order);\r\n        return this;\r\n    }\r\n\r\n    fromAxisAngle(axis, a) {\r\n        QuatFunc.setAxisAngle(this, axis, a);\r\n        return this;\r\n    }\r\n\r\n    slerp(q, t) {\r\n        QuatFunc.slerp(this, this, q, t);\r\n        return this;\r\n    }\r\n\r\n    fromArray(a, o = 0) {\r\n        this[0] = a[o];\r\n        this[1] = a[o + 1];\r\n        this[2] = a[o + 2];\r\n        this[3] = a[o + 3];\r\n        return this;\r\n    }\r\n\r\n    toArray(a = [], o = 0) {\r\n        a[o] = this[0];\r\n        a[o + 1] = this[1];\r\n        a[o + 2] = this[2];\r\n        a[o + 3] = this[3];\r\n        return a;\r\n    }\r\n}\r\n","const EPSILON = 0.000001;\r\n\r\n/**\r\n * Copy the values from one mat4 to another\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the source matrix\r\n * @returns {mat4} out\r\n */\r\nexport function copy(out, a) {\r\n    out[0] = a[0];\r\n    out[1] = a[1];\r\n    out[2] = a[2];\r\n    out[3] = a[3];\r\n    out[4] = a[4];\r\n    out[5] = a[5];\r\n    out[6] = a[6];\r\n    out[7] = a[7];\r\n    out[8] = a[8];\r\n    out[9] = a[9];\r\n    out[10] = a[10];\r\n    out[11] = a[11];\r\n    out[12] = a[12];\r\n    out[13] = a[13];\r\n    out[14] = a[14];\r\n    out[15] = a[15];\r\n    return out;\r\n}\r\n\r\n/**\r\n * Set the components of a mat4 to the given values\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @returns {mat4} out\r\n */\r\nexport function set(out, m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {\r\n    out[0] = m00;\r\n    out[1] = m01;\r\n    out[2] = m02;\r\n    out[3] = m03;\r\n    out[4] = m10;\r\n    out[5] = m11;\r\n    out[6] = m12;\r\n    out[7] = m13;\r\n    out[8] = m20;\r\n    out[9] = m21;\r\n    out[10] = m22;\r\n    out[11] = m23;\r\n    out[12] = m30;\r\n    out[13] = m31;\r\n    out[14] = m32;\r\n    out[15] = m33;\r\n    return out;\r\n}\r\n\r\n/**\r\n * Set a mat4 to the identity matrix\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @returns {mat4} out\r\n */\r\nexport function identity(out) {\r\n    out[0] = 1;\r\n    out[1] = 0;\r\n    out[2] = 0;\r\n    out[3] = 0;\r\n    out[4] = 0;\r\n    out[5] = 1;\r\n    out[6] = 0;\r\n    out[7] = 0;\r\n    out[8] = 0;\r\n    out[9] = 0;\r\n    out[10] = 1;\r\n    out[11] = 0;\r\n    out[12] = 0;\r\n    out[13] = 0;\r\n    out[14] = 0;\r\n    out[15] = 1;\r\n    return out;\r\n}\r\n\r\n/**\r\n * Transpose the values of a mat4\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the source matrix\r\n * @returns {mat4} out\r\n */\r\nexport function transpose(out, a) {\r\n    // If we are transposing ourselves we can skip a few steps but have to cache some values\r\n    if (out === a) {\r\n        let a01 = a[1],\r\n            a02 = a[2],\r\n            a03 = a[3];\r\n        let a12 = a[6],\r\n            a13 = a[7];\r\n        let a23 = a[11];\r\n\r\n        out[1] = a[4];\r\n        out[2] = a[8];\r\n        out[3] = a[12];\r\n        out[4] = a01;\r\n        out[6] = a[9];\r\n        out[7] = a[13];\r\n        out[8] = a02;\r\n        out[9] = a12;\r\n        out[11] = a[14];\r\n        out[12] = a03;\r\n        out[13] = a13;\r\n        out[14] = a23;\r\n    } else {\r\n        out[0] = a[0];\r\n        out[1] = a[4];\r\n        out[2] = a[8];\r\n        out[3] = a[12];\r\n        out[4] = a[1];\r\n        out[5] = a[5];\r\n        out[6] = a[9];\r\n        out[7] = a[13];\r\n        out[8] = a[2];\r\n        out[9] = a[6];\r\n        out[10] = a[10];\r\n        out[11] = a[14];\r\n        out[12] = a[3];\r\n        out[13] = a[7];\r\n        out[14] = a[11];\r\n        out[15] = a[15];\r\n    }\r\n\r\n    return out;\r\n}\r\n\r\n/**\r\n * Inverts a mat4\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the source matrix\r\n * @returns {mat4} out\r\n */\r\nexport function invert(out, a) {\r\n    let a00 = a[0],\r\n        a01 = a[1],\r\n        a02 = a[2],\r\n        a03 = a[3];\r\n    let a10 = a[4],\r\n        a11 = a[5],\r\n        a12 = a[6],\r\n        a13 = a[7];\r\n    let a20 = a[8],\r\n        a21 = a[9],\r\n        a22 = a[10],\r\n        a23 = a[11];\r\n    let a30 = a[12],\r\n        a31 = a[13],\r\n        a32 = a[14],\r\n        a33 = a[15];\r\n\r\n    let b00 = a00 * a11 - a01 * a10;\r\n    let b01 = a00 * a12 - a02 * a10;\r\n    let b02 = a00 * a13 - a03 * a10;\r\n    let b03 = a01 * a12 - a02 * a11;\r\n    let b04 = a01 * a13 - a03 * a11;\r\n    let b05 = a02 * a13 - a03 * a12;\r\n    let b06 = a20 * a31 - a21 * a30;\r\n    let b07 = a20 * a32 - a22 * a30;\r\n    let b08 = a20 * a33 - a23 * a30;\r\n    let b09 = a21 * a32 - a22 * a31;\r\n    let b10 = a21 * a33 - a23 * a31;\r\n    let b11 = a22 * a33 - a23 * a32;\r\n\r\n    // Calculate the determinant\r\n    let det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\r\n\r\n    if (!det) {\r\n        return null;\r\n    }\r\n    det = 1.0 / det;\r\n\r\n    out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\r\n    out[1] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\r\n    out[2] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\r\n    out[3] = (a22 * b04 - a21 * b05 - a23 * b03) * det;\r\n    out[4] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\r\n    out[5] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\r\n    out[6] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\r\n    out[7] = (a20 * b05 - a22 * b02 + a23 * b01) * det;\r\n    out[8] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\r\n    out[9] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\r\n    out[10] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\r\n    out[11] = (a21 * b02 - a20 * b04 - a23 * b00) * det;\r\n    out[12] = (a11 * b07 - a10 * b09 - a12 * b06) * det;\r\n    out[13] = (a00 * b09 - a01 * b07 + a02 * b06) * det;\r\n    out[14] = (a31 * b01 - a30 * b03 - a32 * b00) * det;\r\n    out[15] = (a20 * b03 - a21 * b01 + a22 * b00) * det;\r\n\r\n    return out;\r\n}\r\n\r\n/**\r\n * Calculates the determinant of a mat4\r\n *\r\n * @param {mat4} a the source matrix\r\n * @returns {Number} determinant of a\r\n */\r\nexport function determinant(a) {\r\n    let a00 = a[0],\r\n        a01 = a[1],\r\n        a02 = a[2],\r\n        a03 = a[3];\r\n    let a10 = a[4],\r\n        a11 = a[5],\r\n        a12 = a[6],\r\n        a13 = a[7];\r\n    let a20 = a[8],\r\n        a21 = a[9],\r\n        a22 = a[10],\r\n        a23 = a[11];\r\n    let a30 = a[12],\r\n        a31 = a[13],\r\n        a32 = a[14],\r\n        a33 = a[15];\r\n\r\n    let b00 = a00 * a11 - a01 * a10;\r\n    let b01 = a00 * a12 - a02 * a10;\r\n    let b02 = a00 * a13 - a03 * a10;\r\n    let b03 = a01 * a12 - a02 * a11;\r\n    let b04 = a01 * a13 - a03 * a11;\r\n    let b05 = a02 * a13 - a03 * a12;\r\n    let b06 = a20 * a31 - a21 * a30;\r\n    let b07 = a20 * a32 - a22 * a30;\r\n    let b08 = a20 * a33 - a23 * a30;\r\n    let b09 = a21 * a32 - a22 * a31;\r\n    let b10 = a21 * a33 - a23 * a31;\r\n    let b11 = a22 * a33 - a23 * a32;\r\n\r\n    // Calculate the determinant\r\n    return b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\r\n}\r\n\r\n/**\r\n * Multiplies two mat4s\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the first operand\r\n * @param {mat4} b the second operand\r\n * @returns {mat4} out\r\n */\r\nexport function multiply(out, a, b) {\r\n    let a00 = a[0],\r\n        a01 = a[1],\r\n        a02 = a[2],\r\n        a03 = a[3];\r\n    let a10 = a[4],\r\n        a11 = a[5],\r\n        a12 = a[6],\r\n        a13 = a[7];\r\n    let a20 = a[8],\r\n        a21 = a[9],\r\n        a22 = a[10],\r\n        a23 = a[11];\r\n    let a30 = a[12],\r\n        a31 = a[13],\r\n        a32 = a[14],\r\n        a33 = a[15];\r\n\r\n    // Cache only the current line of the second matrix\r\n    let b0 = b[0],\r\n        b1 = b[1],\r\n        b2 = b[2],\r\n        b3 = b[3];\r\n    out[0] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\r\n    out[1] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\r\n    out[2] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\r\n    out[3] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\r\n\r\n    b0 = b[4];\r\n    b1 = b[5];\r\n    b2 = b[6];\r\n    b3 = b[7];\r\n    out[4] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\r\n    out[5] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\r\n    out[6] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\r\n    out[7] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\r\n\r\n    b0 = b[8];\r\n    b1 = b[9];\r\n    b2 = b[10];\r\n    b3 = b[11];\r\n    out[8] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\r\n    out[9] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\r\n    out[10] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\r\n    out[11] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\r\n\r\n    b0 = b[12];\r\n    b1 = b[13];\r\n    b2 = b[14];\r\n    b3 = b[15];\r\n    out[12] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\r\n    out[13] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\r\n    out[14] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\r\n    out[15] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\r\n    return out;\r\n}\r\n\r\n/**\r\n * Translate a mat4 by the given vector\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the matrix to translate\r\n * @param {vec3} v vector to translate by\r\n * @returns {mat4} out\r\n */\r\nexport function translate(out, a, v) {\r\n    let x = v[0],\r\n        y = v[1],\r\n        z = v[2];\r\n    let a00, a01, a02, a03;\r\n    let a10, a11, a12, a13;\r\n    let a20, a21, a22, a23;\r\n\r\n    if (a === out) {\r\n        out[12] = a[0] * x + a[4] * y + a[8] * z + a[12];\r\n        out[13] = a[1] * x + a[5] * y + a[9] * z + a[13];\r\n        out[14] = a[2] * x + a[6] * y + a[10] * z + a[14];\r\n        out[15] = a[3] * x + a[7] * y + a[11] * z + a[15];\r\n    } else {\r\n        a00 = a[0];\r\n        a01 = a[1];\r\n        a02 = a[2];\r\n        a03 = a[3];\r\n        a10 = a[4];\r\n        a11 = a[5];\r\n        a12 = a[6];\r\n        a13 = a[7];\r\n        a20 = a[8];\r\n        a21 = a[9];\r\n        a22 = a[10];\r\n        a23 = a[11];\r\n\r\n        out[0] = a00;\r\n        out[1] = a01;\r\n        out[2] = a02;\r\n        out[3] = a03;\r\n        out[4] = a10;\r\n        out[5] = a11;\r\n        out[6] = a12;\r\n        out[7] = a13;\r\n        out[8] = a20;\r\n        out[9] = a21;\r\n        out[10] = a22;\r\n        out[11] = a23;\r\n\r\n        out[12] = a00 * x + a10 * y + a20 * z + a[12];\r\n        out[13] = a01 * x + a11 * y + a21 * z + a[13];\r\n        out[14] = a02 * x + a12 * y + a22 * z + a[14];\r\n        out[15] = a03 * x + a13 * y + a23 * z + a[15];\r\n    }\r\n\r\n    return out;\r\n}\r\n\r\n/**\r\n * Scales the mat4 by the dimensions in the given vec3 not using vectorization\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the matrix to scale\r\n * @param {vec3} v the vec3 to scale the matrix by\r\n * @returns {mat4} out\r\n **/\r\nexport function scale(out, a, v) {\r\n    let x = v[0],\r\n        y = v[1],\r\n        z = v[2];\r\n\r\n    out[0] = a[0] * x;\r\n    out[1] = a[1] * x;\r\n    out[2] = a[2] * x;\r\n    out[3] = a[3] * x;\r\n    out[4] = a[4] * y;\r\n    out[5] = a[5] * y;\r\n    out[6] = a[6] * y;\r\n    out[7] = a[7] * y;\r\n    out[8] = a[8] * z;\r\n    out[9] = a[9] * z;\r\n    out[10] = a[10] * z;\r\n    out[11] = a[11] * z;\r\n    out[12] = a[12];\r\n    out[13] = a[13];\r\n    out[14] = a[14];\r\n    out[15] = a[15];\r\n    return out;\r\n}\r\n\r\n/**\r\n * Rotates a mat4 by the given angle around the given axis\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @param {vec3} axis the axis to rotate around\r\n * @returns {mat4} out\r\n */\r\nexport function rotate(out, a, rad, axis) {\r\n    let x = axis[0],\r\n        y = axis[1],\r\n        z = axis[2];\r\n    let len = Math.hypot(x, y, z);\r\n    let s, c, t;\r\n    let a00, a01, a02, a03;\r\n    let a10, a11, a12, a13;\r\n    let a20, a21, a22, a23;\r\n    let b00, b01, b02;\r\n    let b10, b11, b12;\r\n    let b20, b21, b22;\r\n\r\n    if (Math.abs(len) < EPSILON) {\r\n        return null;\r\n    }\r\n\r\n    len = 1 / len;\r\n    x *= len;\r\n    y *= len;\r\n    z *= len;\r\n\r\n    s = Math.sin(rad);\r\n    c = Math.cos(rad);\r\n    t = 1 - c;\r\n\r\n    a00 = a[0];\r\n    a01 = a[1];\r\n    a02 = a[2];\r\n    a03 = a[3];\r\n    a10 = a[4];\r\n    a11 = a[5];\r\n    a12 = a[6];\r\n    a13 = a[7];\r\n    a20 = a[8];\r\n    a21 = a[9];\r\n    a22 = a[10];\r\n    a23 = a[11];\r\n\r\n    // Construct the elements of the rotation matrix\r\n    b00 = x * x * t + c;\r\n    b01 = y * x * t + z * s;\r\n    b02 = z * x * t - y * s;\r\n    b10 = x * y * t - z * s;\r\n    b11 = y * y * t + c;\r\n    b12 = z * y * t + x * s;\r\n    b20 = x * z * t + y * s;\r\n    b21 = y * z * t - x * s;\r\n    b22 = z * z * t + c;\r\n\r\n    // Perform rotation-specific matrix multiplication\r\n    out[0] = a00 * b00 + a10 * b01 + a20 * b02;\r\n    out[1] = a01 * b00 + a11 * b01 + a21 * b02;\r\n    out[2] = a02 * b00 + a12 * b01 + a22 * b02;\r\n    out[3] = a03 * b00 + a13 * b01 + a23 * b02;\r\n    out[4] = a00 * b10 + a10 * b11 + a20 * b12;\r\n    out[5] = a01 * b10 + a11 * b11 + a21 * b12;\r\n    out[6] = a02 * b10 + a12 * b11 + a22 * b12;\r\n    out[7] = a03 * b10 + a13 * b11 + a23 * b12;\r\n    out[8] = a00 * b20 + a10 * b21 + a20 * b22;\r\n    out[9] = a01 * b20 + a11 * b21 + a21 * b22;\r\n    out[10] = a02 * b20 + a12 * b21 + a22 * b22;\r\n    out[11] = a03 * b20 + a13 * b21 + a23 * b22;\r\n\r\n    if (a !== out) {\r\n        // If the source and destination differ, copy the unchanged last row\r\n        out[12] = a[12];\r\n        out[13] = a[13];\r\n        out[14] = a[14];\r\n        out[15] = a[15];\r\n    }\r\n    return out;\r\n}\r\n\r\n/**\r\n * Returns the translation vector component of a transformation\r\n *  matrix. If a matrix is built with fromRotationTranslation,\r\n *  the returned vector will be the same as the translation vector\r\n *  originally supplied.\r\n * @param  {vec3} out Vector to receive translation component\r\n * @param  {mat4} mat Matrix to be decomposed (input)\r\n * @return {vec3} out\r\n */\r\nexport function getTranslation(out, mat) {\r\n    out[0] = mat[12];\r\n    out[1] = mat[13];\r\n    out[2] = mat[14];\r\n\r\n    return out;\r\n}\r\n\r\n/**\r\n * Returns the scaling factor component of a transformation\r\n *  matrix. If a matrix is built with fromRotationTranslationScale\r\n *  with a normalized Quaternion paramter, the returned vector will be\r\n *  the same as the scaling vector\r\n *  originally supplied.\r\n * @param  {vec3} out Vector to receive scaling factor component\r\n * @param  {mat4} mat Matrix to be decomposed (input)\r\n * @return {vec3} out\r\n */\r\nexport function getScaling(out, mat) {\r\n    let m11 = mat[0];\r\n    let m12 = mat[1];\r\n    let m13 = mat[2];\r\n    let m21 = mat[4];\r\n    let m22 = mat[5];\r\n    let m23 = mat[6];\r\n    let m31 = mat[8];\r\n    let m32 = mat[9];\r\n    let m33 = mat[10];\r\n\r\n    out[0] = Math.hypot(m11, m12, m13);\r\n    out[1] = Math.hypot(m21, m22, m23);\r\n    out[2] = Math.hypot(m31, m32, m33);\r\n\r\n    return out;\r\n}\r\n\r\nexport function getMaxScaleOnAxis(mat) {\r\n    let m11 = mat[0];\r\n    let m12 = mat[1];\r\n    let m13 = mat[2];\r\n    let m21 = mat[4];\r\n    let m22 = mat[5];\r\n    let m23 = mat[6];\r\n    let m31 = mat[8];\r\n    let m32 = mat[9];\r\n    let m33 = mat[10];\r\n\r\n    const x = m11 * m11 + m12 * m12 + m13 * m13;\r\n    const y = m21 * m21 + m22 * m22 + m23 * m23;\r\n    const z = m31 * m31 + m32 * m32 + m33 * m33;\r\n\r\n    return Math.sqrt(Math.max(x, y, z));\r\n}\r\n\r\n/**\r\n * Returns a quaternion representing the rotational component\r\n *  of a transformation matrix. If a matrix is built with\r\n *  fromRotationTranslation, the returned quaternion will be the\r\n *  same as the quaternion originally supplied.\r\n * @param {quat} out Quaternion to receive the rotation component\r\n * @param {mat4} mat Matrix to be decomposed (input)\r\n * @return {quat} out\r\n */\r\nexport const getRotation = (function () {\r\n    const temp = [0, 0, 0];\r\n\r\n    return function (out, mat) {\r\n        let scaling = temp;\r\n        getScaling(scaling, mat);\r\n\r\n        let is1 = 1 / scaling[0];\r\n        let is2 = 1 / scaling[1];\r\n        let is3 = 1 / scaling[2];\r\n\r\n        let sm11 = mat[0] * is1;\r\n        let sm12 = mat[1] * is2;\r\n        let sm13 = mat[2] * is3;\r\n        let sm21 = mat[4] * is1;\r\n        let sm22 = mat[5] * is2;\r\n        let sm23 = mat[6] * is3;\r\n        let sm31 = mat[8] * is1;\r\n        let sm32 = mat[9] * is2;\r\n        let sm33 = mat[10] * is3;\r\n\r\n        let trace = sm11 + sm22 + sm33;\r\n        let S = 0;\r\n\r\n        if (trace > 0) {\r\n            S = Math.sqrt(trace + 1.0) * 2;\r\n            out[3] = 0.25 * S;\r\n            out[0] = (sm23 - sm32) / S;\r\n            out[1] = (sm31 - sm13) / S;\r\n            out[2] = (sm12 - sm21) / S;\r\n        } else if (sm11 > sm22 && sm11 > sm33) {\r\n            S = Math.sqrt(1.0 + sm11 - sm22 - sm33) * 2;\r\n            out[3] = (sm23 - sm32) / S;\r\n            out[0] = 0.25 * S;\r\n            out[1] = (sm12 + sm21) / S;\r\n            out[2] = (sm31 + sm13) / S;\r\n        } else if (sm22 > sm33) {\r\n            S = Math.sqrt(1.0 + sm22 - sm11 - sm33) * 2;\r\n            out[3] = (sm31 - sm13) / S;\r\n            out[0] = (sm12 + sm21) / S;\r\n            out[1] = 0.25 * S;\r\n            out[2] = (sm23 + sm32) / S;\r\n        } else {\r\n            S = Math.sqrt(1.0 + sm33 - sm11 - sm22) * 2;\r\n            out[3] = (sm12 - sm21) / S;\r\n            out[0] = (sm31 + sm13) / S;\r\n            out[1] = (sm23 + sm32) / S;\r\n            out[2] = 0.25 * S;\r\n        }\r\n\r\n        return out;\r\n    };\r\n})();\r\n\r\n/**\r\n * Creates a matrix from a quaternion rotation, vector translation and vector scale\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.translate(dest, vec);\r\n *     let quatMat = mat4.create();\r\n *     quat4.toMat4(quat, quatMat);\r\n *     mat4.multiply(dest, quatMat);\r\n *     mat4.scale(dest, scale)\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {quat4} q Rotation quaternion\r\n * @param {vec3} v Translation vector\r\n * @param {vec3} s Scaling vector\r\n * @returns {mat4} out\r\n */\r\nexport function fromRotationTranslationScale(out, q, v, s) {\r\n    // Quaternion math\r\n    let x = q[0],\r\n        y = q[1],\r\n        z = q[2],\r\n        w = q[3];\r\n    let x2 = x + x;\r\n    let y2 = y + y;\r\n    let z2 = z + z;\r\n\r\n    let xx = x * x2;\r\n    let xy = x * y2;\r\n    let xz = x * z2;\r\n    let yy = y * y2;\r\n    let yz = y * z2;\r\n    let zz = z * z2;\r\n    let wx = w * x2;\r\n    let wy = w * y2;\r\n    let wz = w * z2;\r\n    let sx = s[0];\r\n    let sy = s[1];\r\n    let sz = s[2];\r\n\r\n    out[0] = (1 - (yy + zz)) * sx;\r\n    out[1] = (xy + wz) * sx;\r\n    out[2] = (xz - wy) * sx;\r\n    out[3] = 0;\r\n    out[4] = (xy - wz) * sy;\r\n    out[5] = (1 - (xx + zz)) * sy;\r\n    out[6] = (yz + wx) * sy;\r\n    out[7] = 0;\r\n    out[8] = (xz + wy) * sz;\r\n    out[9] = (yz - wx) * sz;\r\n    out[10] = (1 - (xx + yy)) * sz;\r\n    out[11] = 0;\r\n    out[12] = v[0];\r\n    out[13] = v[1];\r\n    out[14] = v[2];\r\n    out[15] = 1;\r\n\r\n    return out;\r\n}\r\n\r\n/**\r\n * Calculates a 4x4 matrix from the given quaternion\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {quat} q Quaternion to create matrix from\r\n *\r\n * @returns {mat4} out\r\n */\r\nexport function fromQuat(out, q) {\r\n    let x = q[0],\r\n        y = q[1],\r\n        z = q[2],\r\n        w = q[3];\r\n    let x2 = x + x;\r\n    let y2 = y + y;\r\n    let z2 = z + z;\r\n\r\n    let xx = x * x2;\r\n    let yx = y * x2;\r\n    let yy = y * y2;\r\n    let zx = z * x2;\r\n    let zy = z * y2;\r\n    let zz = z * z2;\r\n    let wx = w * x2;\r\n    let wy = w * y2;\r\n    let wz = w * z2;\r\n\r\n    out[0] = 1 - yy - zz;\r\n    out[1] = yx + wz;\r\n    out[2] = zx - wy;\r\n    out[3] = 0;\r\n\r\n    out[4] = yx - wz;\r\n    out[5] = 1 - xx - zz;\r\n    out[6] = zy + wx;\r\n    out[7] = 0;\r\n\r\n    out[8] = zx + wy;\r\n    out[9] = zy - wx;\r\n    out[10] = 1 - xx - yy;\r\n    out[11] = 0;\r\n\r\n    out[12] = 0;\r\n    out[13] = 0;\r\n    out[14] = 0;\r\n    out[15] = 1;\r\n\r\n    return out;\r\n}\r\n\r\n/**\r\n * Generates a perspective projection matrix with the given bounds\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {number} fovy Vertical field of view in radians\r\n * @param {number} aspect Aspect ratio. typically viewport width/height\r\n * @param {number} near Near bound of the frustum\r\n * @param {number} far Far bound of the frustum\r\n * @returns {mat4} out\r\n */\r\nexport function perspective(out, fovy, aspect, near, far) {\r\n    let f = 1.0 / Math.tan(fovy / 2);\r\n    let nf = 1 / (near - far);\r\n    out[0] = f / aspect;\r\n    out[1] = 0;\r\n    out[2] = 0;\r\n    out[3] = 0;\r\n    out[4] = 0;\r\n    out[5] = f;\r\n    out[6] = 0;\r\n    out[7] = 0;\r\n    out[8] = 0;\r\n    out[9] = 0;\r\n    out[10] = (far + near) * nf;\r\n    out[11] = -1;\r\n    out[12] = 0;\r\n    out[13] = 0;\r\n    out[14] = 2 * far * near * nf;\r\n    out[15] = 0;\r\n    return out;\r\n}\r\n\r\n/**\r\n * Generates a orthogonal projection matrix with the given bounds\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {number} left Left bound of the frustum\r\n * @param {number} right Right bound of the frustum\r\n * @param {number} bottom Bottom bound of the frustum\r\n * @param {number} top Top bound of the frustum\r\n * @param {number} near Near bound of the frustum\r\n * @param {number} far Far bound of the frustum\r\n * @returns {mat4} out\r\n */\r\nexport function ortho(out, left, right, bottom, top, near, far) {\r\n    let lr = 1 / (left - right);\r\n    let bt = 1 / (bottom - top);\r\n    let nf = 1 / (near - far);\r\n    out[0] = -2 * lr;\r\n    out[1] = 0;\r\n    out[2] = 0;\r\n    out[3] = 0;\r\n    out[4] = 0;\r\n    out[5] = -2 * bt;\r\n    out[6] = 0;\r\n    out[7] = 0;\r\n    out[8] = 0;\r\n    out[9] = 0;\r\n    out[10] = 2 * nf;\r\n    out[11] = 0;\r\n    out[12] = (left + right) * lr;\r\n    out[13] = (top + bottom) * bt;\r\n    out[14] = (far + near) * nf;\r\n    out[15] = 1;\r\n    return out;\r\n}\r\n\r\n/**\r\n * Generates a matrix that makes something look at something else.\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {vec3} eye Position of the viewer\r\n * @param {vec3} target Point the viewer is looking at\r\n * @param {vec3} up vec3 pointing up\r\n * @returns {mat4} out\r\n */\r\nexport function targetTo(out, eye, target, up) {\r\n    let eyex = eye[0],\r\n        eyey = eye[1],\r\n        eyez = eye[2],\r\n        upx = up[0],\r\n        upy = up[1],\r\n        upz = up[2];\r\n\r\n    let z0 = eyex - target[0],\r\n        z1 = eyey - target[1],\r\n        z2 = eyez - target[2];\r\n\r\n    let len = z0 * z0 + z1 * z1 + z2 * z2;\r\n    if (len === 0) {\r\n        // eye and target are in the same position\r\n        z2 = 1;\r\n    } else {\r\n        len = 1 / Math.sqrt(len);\r\n        z0 *= len;\r\n        z1 *= len;\r\n        z2 *= len;\r\n    }\r\n\r\n    let x0 = upy * z2 - upz * z1,\r\n        x1 = upz * z0 - upx * z2,\r\n        x2 = upx * z1 - upy * z0;\r\n\r\n    len = x0 * x0 + x1 * x1 + x2 * x2;\r\n    if (len === 0) {\r\n        // up and z are parallel\r\n        if (upz) {\r\n            upx += 1e-6;\r\n        } else if (upy) {\r\n            upz += 1e-6;\r\n        } else {\r\n            upy += 1e-6;\r\n        }\r\n        (x0 = upy * z2 - upz * z1), (x1 = upz * z0 - upx * z2), (x2 = upx * z1 - upy * z0);\r\n\r\n        len = x0 * x0 + x1 * x1 + x2 * x2;\r\n    }\r\n\r\n    len = 1 / Math.sqrt(len);\r\n    x0 *= len;\r\n    x1 *= len;\r\n    x2 *= len;\r\n\r\n    out[0] = x0;\r\n    out[1] = x1;\r\n    out[2] = x2;\r\n    out[3] = 0;\r\n    out[4] = z1 * x2 - z2 * x1;\r\n    out[5] = z2 * x0 - z0 * x2;\r\n    out[6] = z0 * x1 - z1 * x0;\r\n    out[7] = 0;\r\n    out[8] = z0;\r\n    out[9] = z1;\r\n    out[10] = z2;\r\n    out[11] = 0;\r\n    out[12] = eyex;\r\n    out[13] = eyey;\r\n    out[14] = eyez;\r\n    out[15] = 1;\r\n    return out;\r\n}\r\n\r\n/**\r\n * Adds two mat4's\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the first operand\r\n * @param {mat4} b the second operand\r\n * @returns {mat4} out\r\n */\r\nexport function add(out, a, b) {\r\n    out[0] = a[0] + b[0];\r\n    out[1] = a[1] + b[1];\r\n    out[2] = a[2] + b[2];\r\n    out[3] = a[3] + b[3];\r\n    out[4] = a[4] + b[4];\r\n    out[5] = a[5] + b[5];\r\n    out[6] = a[6] + b[6];\r\n    out[7] = a[7] + b[7];\r\n    out[8] = a[8] + b[8];\r\n    out[9] = a[9] + b[9];\r\n    out[10] = a[10] + b[10];\r\n    out[11] = a[11] + b[11];\r\n    out[12] = a[12] + b[12];\r\n    out[13] = a[13] + b[13];\r\n    out[14] = a[14] + b[14];\r\n    out[15] = a[15] + b[15];\r\n    return out;\r\n}\r\n\r\n/**\r\n * Subtracts matrix b from matrix a\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the first operand\r\n * @param {mat4} b the second operand\r\n * @returns {mat4} out\r\n */\r\nexport function subtract(out, a, b) {\r\n    out[0] = a[0] - b[0];\r\n    out[1] = a[1] - b[1];\r\n    out[2] = a[2] - b[2];\r\n    out[3] = a[3] - b[3];\r\n    out[4] = a[4] - b[4];\r\n    out[5] = a[5] - b[5];\r\n    out[6] = a[6] - b[6];\r\n    out[7] = a[7] - b[7];\r\n    out[8] = a[8] - b[8];\r\n    out[9] = a[9] - b[9];\r\n    out[10] = a[10] - b[10];\r\n    out[11] = a[11] - b[11];\r\n    out[12] = a[12] - b[12];\r\n    out[13] = a[13] - b[13];\r\n    out[14] = a[14] - b[14];\r\n    out[15] = a[15] - b[15];\r\n    return out;\r\n}\r\n\r\n/**\r\n * Multiply each element of the matrix by a scalar.\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the matrix to scale\r\n * @param {Number} b amount to scale the matrix's elements by\r\n * @returns {mat4} out\r\n */\r\nexport function multiplyScalar(out, a, b) {\r\n    out[0] = a[0] * b;\r\n    out[1] = a[1] * b;\r\n    out[2] = a[2] * b;\r\n    out[3] = a[3] * b;\r\n    out[4] = a[4] * b;\r\n    out[5] = a[5] * b;\r\n    out[6] = a[6] * b;\r\n    out[7] = a[7] * b;\r\n    out[8] = a[8] * b;\r\n    out[9] = a[9] * b;\r\n    out[10] = a[10] * b;\r\n    out[11] = a[11] * b;\r\n    out[12] = a[12] * b;\r\n    out[13] = a[13] * b;\r\n    out[14] = a[14] * b;\r\n    out[15] = a[15] * b;\r\n    return out;\r\n}\r\n","import * as Mat4Func from './functions/Mat4Func.js';\r\n\r\nexport class Mat4 extends Array {\r\n    constructor(\r\n        m00 = 1,\r\n        m01 = 0,\r\n        m02 = 0,\r\n        m03 = 0,\r\n        m10 = 0,\r\n        m11 = 1,\r\n        m12 = 0,\r\n        m13 = 0,\r\n        m20 = 0,\r\n        m21 = 0,\r\n        m22 = 1,\r\n        m23 = 0,\r\n        m30 = 0,\r\n        m31 = 0,\r\n        m32 = 0,\r\n        m33 = 1\r\n    ) {\r\n        super(m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33);\r\n        return this;\r\n    }\r\n\r\n    get x() {\r\n        return this[12];\r\n    }\r\n\r\n    get y() {\r\n        return this[13];\r\n    }\r\n\r\n    get z() {\r\n        return this[14];\r\n    }\r\n\r\n    get w() {\r\n        return this[15];\r\n    }\r\n\r\n    set x(v) {\r\n        this[12] = v;\r\n    }\r\n\r\n    set y(v) {\r\n        this[13] = v;\r\n    }\r\n\r\n    set z(v) {\r\n        this[14] = v;\r\n    }\r\n\r\n    set w(v) {\r\n        this[15] = v;\r\n    }\r\n\r\n    set(m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {\r\n        if (m00.length) return this.copy(m00);\r\n        Mat4Func.set(this, m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33);\r\n        return this;\r\n    }\r\n\r\n    translate(v, m = this) {\r\n        Mat4Func.translate(this, m, v);\r\n        return this;\r\n    }\r\n\r\n    rotate(v, axis, m = this) {\r\n        Mat4Func.rotate(this, m, v, axis);\r\n        return this;\r\n    }\r\n\r\n    scale(v, m = this) {\r\n        Mat4Func.scale(this, m, typeof v === 'number' ? [v, v, v] : v);\r\n        return this;\r\n    }\r\n\r\n    multiply(ma, mb) {\r\n        if (mb) {\r\n            Mat4Func.multiply(this, ma, mb);\r\n        } else {\r\n            Mat4Func.multiply(this, this, ma);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    identity() {\r\n        Mat4Func.identity(this);\r\n        return this;\r\n    }\r\n\r\n    copy(m) {\r\n        Mat4Func.copy(this, m);\r\n        return this;\r\n    }\r\n\r\n    fromPerspective({ fov, aspect, near, far } = {}) {\r\n        Mat4Func.perspective(this, fov, aspect, near, far);\r\n        return this;\r\n    }\r\n\r\n    fromOrthogonal({ left, right, bottom, top, near, far }) {\r\n        Mat4Func.ortho(this, left, right, bottom, top, near, far);\r\n        return this;\r\n    }\r\n\r\n    fromQuaternion(q) {\r\n        Mat4Func.fromQuat(this, q);\r\n        return this;\r\n    }\r\n\r\n    setPosition(v) {\r\n        this.x = v[0];\r\n        this.y = v[1];\r\n        this.z = v[2];\r\n        return this;\r\n    }\r\n\r\n    inverse(m = this) {\r\n        Mat4Func.invert(this, m);\r\n        return this;\r\n    }\r\n\r\n    compose(q, pos, scale) {\r\n        Mat4Func.fromRotationTranslationScale(this, q, pos, scale);\r\n        return this;\r\n    }\r\n\r\n    getRotation(q) {\r\n        Mat4Func.getRotation(q, this);\r\n        return this;\r\n    }\r\n\r\n    getTranslation(pos) {\r\n        Mat4Func.getTranslation(pos, this);\r\n        return this;\r\n    }\r\n\r\n    getScaling(scale) {\r\n        Mat4Func.getScaling(scale, this);\r\n        return this;\r\n    }\r\n\r\n    getMaxScaleOnAxis() {\r\n        return Mat4Func.getMaxScaleOnAxis(this);\r\n    }\r\n\r\n    lookAt(eye, target, up) {\r\n        Mat4Func.targetTo(this, eye, target, up);\r\n        return this;\r\n    }\r\n\r\n    determinant() {\r\n        return Mat4Func.determinant(this);\r\n    }\r\n\r\n    fromArray(a, o = 0) {\r\n        this[0] = a[o];\r\n        this[1] = a[o + 1];\r\n        this[2] = a[o + 2];\r\n        this[3] = a[o + 3];\r\n        this[4] = a[o + 4];\r\n        this[5] = a[o + 5];\r\n        this[6] = a[o + 6];\r\n        this[7] = a[o + 7];\r\n        this[8] = a[o + 8];\r\n        this[9] = a[o + 9];\r\n        this[10] = a[o + 10];\r\n        this[11] = a[o + 11];\r\n        this[12] = a[o + 12];\r\n        this[13] = a[o + 13];\r\n        this[14] = a[o + 14];\r\n        this[15] = a[o + 15];\r\n        return this;\r\n    }\r\n\r\n    toArray(a = [], o = 0) {\r\n        a[o] = this[0];\r\n        a[o + 1] = this[1];\r\n        a[o + 2] = this[2];\r\n        a[o + 3] = this[3];\r\n        a[o + 4] = this[4];\r\n        a[o + 5] = this[5];\r\n        a[o + 6] = this[6];\r\n        a[o + 7] = this[7];\r\n        a[o + 8] = this[8];\r\n        a[o + 9] = this[9];\r\n        a[o + 10] = this[10];\r\n        a[o + 11] = this[11];\r\n        a[o + 12] = this[12];\r\n        a[o + 13] = this[13];\r\n        a[o + 14] = this[14];\r\n        a[o + 15] = this[15];\r\n        return a;\r\n    }\r\n}\r\n","// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\r\nexport function fromRotationMatrix(out, m, order = 'YXZ') {\r\n    if (order === 'XYZ') {\r\n        out[1] = Math.asin(Math.min(Math.max(m[8], -1), 1));\r\n        if (Math.abs(m[8]) < 0.99999) {\r\n            out[0] = Math.atan2(-m[9], m[10]);\r\n            out[2] = Math.atan2(-m[4], m[0]);\r\n        } else {\r\n            out[0] = Math.atan2(m[6], m[5]);\r\n            out[2] = 0;\r\n        }\r\n    } else if (order === 'YXZ') {\r\n        out[0] = Math.asin(-Math.min(Math.max(m[9], -1), 1));\r\n        if (Math.abs(m[9]) < 0.99999) {\r\n            out[1] = Math.atan2(m[8], m[10]);\r\n            out[2] = Math.atan2(m[1], m[5]);\r\n        } else {\r\n            out[1] = Math.atan2(-m[2], m[0]);\r\n            out[2] = 0;\r\n        }\r\n    } else if (order === 'ZXY') {\r\n        out[0] = Math.asin(Math.min(Math.max(m[6], -1), 1));\r\n        if (Math.abs(m[6]) < 0.99999) {\r\n            out[1] = Math.atan2(-m[2], m[10]);\r\n            out[2] = Math.atan2(-m[4], m[5]);\r\n        } else {\r\n            out[1] = 0;\r\n            out[2] = Math.atan2(m[1], m[0]);\r\n        }\r\n    } else if (order === 'ZYX') {\r\n        out[1] = Math.asin(-Math.min(Math.max(m[2], -1), 1));\r\n        if (Math.abs(m[2]) < 0.99999) {\r\n            out[0] = Math.atan2(m[6], m[10]);\r\n            out[2] = Math.atan2(m[1], m[0]);\r\n        } else {\r\n            out[0] = 0;\r\n            out[2] = Math.atan2(-m[4], m[5]);\r\n        }\r\n    } else if (order === 'YZX') {\r\n        out[2] = Math.asin(Math.min(Math.max(m[1], -1), 1));\r\n        if (Math.abs(m[1]) < 0.99999) {\r\n            out[0] = Math.atan2(-m[9], m[5]);\r\n            out[1] = Math.atan2(-m[2], m[0]);\r\n        } else {\r\n            out[0] = 0;\r\n            out[1] = Math.atan2(m[8], m[10]);\r\n        }\r\n    } else if (order === 'XZY') {\r\n        out[2] = Math.asin(-Math.min(Math.max(m[4], -1), 1));\r\n        if (Math.abs(m[4]) < 0.99999) {\r\n            out[0] = Math.atan2(m[6], m[5]);\r\n            out[1] = Math.atan2(m[8], m[0]);\r\n        } else {\r\n            out[0] = Math.atan2(-m[9], m[10]);\r\n            out[1] = 0;\r\n        }\r\n    }\r\n\r\n    return out;\r\n}\r\n","import * as EulerFunc from './functions/EulerFunc.js';\r\nimport { Mat4 } from './Mat4.js';\r\n\r\nconst tmpMat4 = new Mat4();\r\n\r\nexport class Euler extends Array {\r\n    constructor(x = 0, y = x, z = x, order = 'YXZ') {\r\n        super(x, y, z);\r\n        this.order = order;\r\n        this.onChange = () => {};\r\n        return this;\r\n    }\r\n\r\n    get x() {\r\n        return this[0];\r\n    }\r\n\r\n    get y() {\r\n        return this[1];\r\n    }\r\n\r\n    get z() {\r\n        return this[2];\r\n    }\r\n\r\n    set x(v) {\r\n        this[0] = v;\r\n        this.onChange();\r\n    }\r\n\r\n    set y(v) {\r\n        this[1] = v;\r\n        this.onChange();\r\n    }\r\n\r\n    set z(v) {\r\n        this[2] = v;\r\n        this.onChange();\r\n    }\r\n\r\n    set(x, y = x, z = x) {\r\n        if (x.length) return this.copy(x);\r\n        this[0] = x;\r\n        this[1] = y;\r\n        this[2] = z;\r\n        this.onChange();\r\n        return this;\r\n    }\r\n\r\n    copy(v) {\r\n        this[0] = v[0];\r\n        this[1] = v[1];\r\n        this[2] = v[2];\r\n        this.onChange();\r\n        return this;\r\n    }\r\n\r\n    reorder(order) {\r\n        this.order = order;\r\n        this.onChange();\r\n        return this;\r\n    }\r\n\r\n    fromRotationMatrix(m, order = this.order) {\r\n        EulerFunc.fromRotationMatrix(this, m, order);\r\n        return this;\r\n    }\r\n\r\n    fromQuaternion(q, order = this.order) {\r\n        tmpMat4.fromQuaternion(q);\r\n        return this.fromRotationMatrix(tmpMat4, order);\r\n    }\r\n}\r\n","import { Vec3 } from '../math/Vec3.js';\r\nimport { Quat } from '../math/Quat.js';\r\nimport { Mat4 } from '../math/Mat4.js';\r\nimport { Euler } from '../math/Euler.js';\r\n\r\nexport class Transform {\r\n    constructor() {\r\n        this.parent = null;\r\n        this.children = [];\r\n        this.visible = true;\r\n\r\n        this.matrix = new Mat4();\r\n        this.worldMatrix = new Mat4();\r\n        this.matrixAutoUpdate = true;\r\n\r\n        this.position = new Vec3();\r\n        this.quaternion = new Quat();\r\n        this.scale = new Vec3(1);\r\n        this.rotation = new Euler();\r\n        this.up = new Vec3(0, 1, 0);\r\n\r\n        this.rotation.onChange = () => this.quaternion.fromEuler(this.rotation);\r\n        this.quaternion.onChange = () => this.rotation.fromQuaternion(this.quaternion);\r\n    }\r\n\r\n    setParent(parent, notifyParent = true) {\r\n        if (notifyParent && this.parent && parent !== this.parent) this.parent.removeChild(this, false);\r\n        this.parent = parent;\r\n        if (notifyParent && parent) parent.addChild(this, false);\r\n    }\r\n\r\n    addChild(child, notifyChild = true) {\r\n        if (!~this.children.indexOf(child)) this.children.push(child);\r\n        if (notifyChild) child.setParent(this, false);\r\n    }\r\n\r\n    removeChild(child, notifyChild = true) {\r\n        if (!!~this.children.indexOf(child)) this.children.splice(this.children.indexOf(child), 1);\r\n        if (notifyChild) child.setParent(null, false);\r\n    }\r\n\r\n    updateMatrixWorld(force) {\r\n        if (this.matrixAutoUpdate) this.updateMatrix();\r\n        if (this.worldMatrixNeedsUpdate || force) {\r\n            if (this.parent === null) this.worldMatrix.copy(this.matrix);\r\n            else this.worldMatrix.multiply(this.parent.worldMatrix, this.matrix);\r\n            this.worldMatrixNeedsUpdate = false;\r\n            force = true;\r\n        }\r\n\r\n        for (let i = 0, l = this.children.length; i < l; i++) {\r\n            this.children[i].updateMatrixWorld(force);\r\n        }\r\n    }\r\n\r\n    updateMatrix() {\r\n        this.matrix.compose(this.quaternion, this.position, this.scale);\r\n        this.worldMatrixNeedsUpdate = true;\r\n    }\r\n\r\n    traverse(callback) {\r\n        // Return true in callback to stop traversing children\r\n        if (callback(this)) return;\r\n        for (let i = 0, l = this.children.length; i < l; i++) {\r\n            this.children[i].traverse(callback);\r\n        }\r\n    }\r\n\r\n    decompose() {\r\n        this.matrix.getTranslation(this.position);\r\n        this.matrix.getRotation(this.quaternion);\r\n        this.matrix.getScaling(this.scale);\r\n        this.rotation.fromQuaternion(this.quaternion);\r\n    }\r\n\r\n    lookAt(target, invert = false) {\r\n        if (invert) this.matrix.lookAt(this.position, target, this.up);\r\n        else this.matrix.lookAt(target, this.position, this.up);\r\n        this.matrix.getRotation(this.quaternion);\r\n        this.rotation.fromQuaternion(this.quaternion);\r\n    }\r\n}\r\n","import { Transform } from './Transform.js';\r\nimport { Mat4 } from '../math/Mat4.js';\r\nimport { Vec3 } from '../math/Vec3.js';\r\n\r\nconst tempMat4 = new Mat4();\r\nconst tempVec3a = new Vec3();\r\nconst tempVec3b = new Vec3();\r\n\r\nexport class Camera extends Transform {\r\n    constructor(gl, { near = 0.1, far = 100, fov = 45, aspect = 1, left, right, bottom, top, zoom = 1 } = {}) {\r\n        super();\r\n\r\n        Object.assign(this, { near, far, fov, aspect, left, right, bottom, top, zoom });\r\n\r\n        this.projectionMatrix = new Mat4();\r\n        this.viewMatrix = new Mat4();\r\n        this.projectionViewMatrix = new Mat4();\r\n        this.worldPosition = new Vec3();\r\n\r\n        // Use orthographic if left/right set, else default to perspective camera\r\n        this.type = left || right ? 'orthographic' : 'perspective';\r\n\r\n        if (this.type === 'orthographic') this.orthographic();\r\n        else this.perspective();\r\n    }\r\n\r\n    perspective({ near = this.near, far = this.far, fov = this.fov, aspect = this.aspect } = {}) {\r\n        Object.assign(this, { near, far, fov, aspect });\r\n        this.projectionMatrix.fromPerspective({ fov: fov * (Math.PI / 180), aspect, near, far });\r\n        this.type = 'perspective';\r\n        return this;\r\n    }\r\n\r\n    orthographic({\r\n        near = this.near,\r\n        far = this.far,\r\n        left = this.left,\r\n        right = this.right,\r\n        bottom = this.bottom,\r\n        top = this.top,\r\n        zoom = this.zoom,\r\n    } = {}) {\r\n        Object.assign(this, { near, far, left, right, bottom, top, zoom });\r\n        left /= zoom;\r\n        right /= zoom;\r\n        bottom /= zoom;\r\n        top /= zoom;\r\n        this.projectionMatrix.fromOrthogonal({ left, right, bottom, top, near, far });\r\n        this.type = 'orthographic';\r\n        return this;\r\n    }\r\n\r\n    updateMatrixWorld() {\r\n        super.updateMatrixWorld();\r\n        this.viewMatrix.inverse(this.worldMatrix);\r\n        this.worldMatrix.getTranslation(this.worldPosition);\r\n\r\n        // used for sorting\r\n        this.projectionViewMatrix.multiply(this.projectionMatrix, this.viewMatrix);\r\n        return this;\r\n    }\r\n\r\n    lookAt(target) {\r\n        super.lookAt(target, true);\r\n        return this;\r\n    }\r\n\r\n    // Project 3D coordinate to 2D point\r\n    project(v) {\r\n        v.applyMatrix4(this.viewMatrix);\r\n        v.applyMatrix4(this.projectionMatrix);\r\n        return this;\r\n    }\r\n\r\n    // Unproject 2D point to 3D coordinate\r\n    unproject(v) {\r\n        v.applyMatrix4(tempMat4.inverse(this.projectionMatrix));\r\n        v.applyMatrix4(this.worldMatrix);\r\n        return this;\r\n    }\r\n\r\n    updateFrustum() {\r\n        if (!this.frustum) {\r\n            this.frustum = [new Vec3(), new Vec3(), new Vec3(), new Vec3(), new Vec3(), new Vec3()];\r\n        }\r\n\r\n        const m = this.projectionViewMatrix;\r\n        this.frustum[0].set(m[3] - m[0], m[7] - m[4], m[11] - m[8]).constant = m[15] - m[12]; // -x\r\n        this.frustum[1].set(m[3] + m[0], m[7] + m[4], m[11] + m[8]).constant = m[15] + m[12]; // +x\r\n        this.frustum[2].set(m[3] + m[1], m[7] + m[5], m[11] + m[9]).constant = m[15] + m[13]; // +y\r\n        this.frustum[3].set(m[3] - m[1], m[7] - m[5], m[11] - m[9]).constant = m[15] - m[13]; // -y\r\n        this.frustum[4].set(m[3] - m[2], m[7] - m[6], m[11] - m[10]).constant = m[15] - m[14]; // +z (far)\r\n        this.frustum[5].set(m[3] + m[2], m[7] + m[6], m[11] + m[10]).constant = m[15] + m[14]; // -z (near)\r\n\r\n        for (let i = 0; i < 6; i++) {\r\n            const invLen = 1.0 / this.frustum[i].distance();\r\n            this.frustum[i].multiply(invLen);\r\n            this.frustum[i].constant *= invLen;\r\n        }\r\n    }\r\n\r\n    frustumIntersectsMesh(node) {\r\n        // If no position attribute, treat as frustumCulled false\r\n        if (!node.geometry.attributes.position) return true;\r\n\r\n        if (!node.geometry.bounds || node.geometry.bounds.radius === Infinity) node.geometry.computeBoundingSphere();\r\n\r\n        if (!node.geometry.bounds) return true;\r\n\r\n        const center = tempVec3a;\r\n        center.copy(node.geometry.bounds.center);\r\n        center.applyMatrix4(node.worldMatrix);\r\n\r\n        const radius = node.geometry.bounds.radius * node.worldMatrix.getMaxScaleOnAxis();\r\n\r\n        return this.frustumIntersectsSphere(center, radius);\r\n    }\r\n\r\n    frustumIntersectsSphere(center, radius) {\r\n        const normal = tempVec3b;\r\n\r\n        for (let i = 0; i < 6; i++) {\r\n            const plane = this.frustum[i];\r\n            const distance = normal.copy(plane).dot(center) + plane.constant;\r\n            if (distance < -radius) return false;\r\n        }\r\n        return true;\r\n    }\r\n}\r\n","const EPSILON = 0.000001;\r\n\r\n/**\r\n * Copy the values from one vec2 to another\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a the source vector\r\n * @returns {vec2} out\r\n */\r\nexport function copy(out, a) {\r\n    out[0] = a[0];\r\n    out[1] = a[1];\r\n    return out;\r\n}\r\n\r\n/**\r\n * Set the components of a vec2 to the given values\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @returns {vec2} out\r\n */\r\nexport function set(out, x, y) {\r\n    out[0] = x;\r\n    out[1] = y;\r\n    return out;\r\n}\r\n\r\n/**\r\n * Adds two vec2's\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a the first operand\r\n * @param {vec2} b the second operand\r\n * @returns {vec2} out\r\n */\r\nexport function add(out, a, b) {\r\n    out[0] = a[0] + b[0];\r\n    out[1] = a[1] + b[1];\r\n    return out;\r\n}\r\n\r\n/**\r\n * Subtracts vector b from vector a\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a the first operand\r\n * @param {vec2} b the second operand\r\n * @returns {vec2} out\r\n */\r\nexport function subtract(out, a, b) {\r\n    out[0] = a[0] - b[0];\r\n    out[1] = a[1] - b[1];\r\n    return out;\r\n}\r\n\r\n/**\r\n * Multiplies two vec2's\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a the first operand\r\n * @param {vec2} b the second operand\r\n * @returns {vec2} out\r\n */\r\nexport function multiply(out, a, b) {\r\n    out[0] = a[0] * b[0];\r\n    out[1] = a[1] * b[1];\r\n    return out;\r\n}\r\n\r\n/**\r\n * Divides two vec2's\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a the first operand\r\n * @param {vec2} b the second operand\r\n * @returns {vec2} out\r\n */\r\nexport function divide(out, a, b) {\r\n    out[0] = a[0] / b[0];\r\n    out[1] = a[1] / b[1];\r\n    return out;\r\n}\r\n\r\n/**\r\n * Scales a vec2 by a scalar number\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a the vector to scale\r\n * @param {Number} b amount to scale the vector by\r\n * @returns {vec2} out\r\n */\r\nexport function scale(out, a, b) {\r\n    out[0] = a[0] * b;\r\n    out[1] = a[1] * b;\r\n    return out;\r\n}\r\n\r\n/**\r\n * Calculates the euclidian distance between two vec2's\r\n *\r\n * @param {vec2} a the first operand\r\n * @param {vec2} b the second operand\r\n * @returns {Number} distance between a and b\r\n */\r\nexport function distance(a, b) {\r\n    var x = b[0] - a[0],\r\n        y = b[1] - a[1];\r\n    return Math.sqrt(x * x + y * y);\r\n}\r\n\r\n/**\r\n * Calculates the squared euclidian distance between two vec2's\r\n *\r\n * @param {vec2} a the first operand\r\n * @param {vec2} b the second operand\r\n * @returns {Number} squared distance between a and b\r\n */\r\nexport function squaredDistance(a, b) {\r\n    var x = b[0] - a[0],\r\n        y = b[1] - a[1];\r\n    return x * x + y * y;\r\n}\r\n\r\n/**\r\n * Calculates the length of a vec2\r\n *\r\n * @param {vec2} a vector to calculate length of\r\n * @returns {Number} length of a\r\n */\r\nexport function length(a) {\r\n    var x = a[0],\r\n        y = a[1];\r\n    return Math.sqrt(x * x + y * y);\r\n}\r\n\r\n/**\r\n * Calculates the squared length of a vec2\r\n *\r\n * @param {vec2} a vector to calculate squared length of\r\n * @returns {Number} squared length of a\r\n */\r\nexport function squaredLength(a) {\r\n    var x = a[0],\r\n        y = a[1];\r\n    return x * x + y * y;\r\n}\r\n\r\n/**\r\n * Negates the components of a vec2\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a vector to negate\r\n * @returns {vec2} out\r\n */\r\nexport function negate(out, a) {\r\n    out[0] = -a[0];\r\n    out[1] = -a[1];\r\n    return out;\r\n}\r\n\r\n/**\r\n * Returns the inverse of the components of a vec2\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a vector to invert\r\n * @returns {vec2} out\r\n */\r\nexport function inverse(out, a) {\r\n    out[0] = 1.0 / a[0];\r\n    out[1] = 1.0 / a[1];\r\n    return out;\r\n}\r\n\r\n/**\r\n * Normalize a vec2\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a vector to normalize\r\n * @returns {vec2} out\r\n */\r\nexport function normalize(out, a) {\r\n    var x = a[0],\r\n        y = a[1];\r\n    var len = x * x + y * y;\r\n    if (len > 0) {\r\n        //TODO: evaluate use of glm_invsqrt here?\r\n        len = 1 / Math.sqrt(len);\r\n    }\r\n    out[0] = a[0] * len;\r\n    out[1] = a[1] * len;\r\n    return out;\r\n}\r\n\r\n/**\r\n * Calculates the dot product of two vec2's\r\n *\r\n * @param {vec2} a the first operand\r\n * @param {vec2} b the second operand\r\n * @returns {Number} dot product of a and b\r\n */\r\nexport function dot(a, b) {\r\n    return a[0] * b[0] + a[1] * b[1];\r\n}\r\n\r\n/**\r\n * Computes the cross product of two vec2's\r\n * Note that the cross product returns a scalar\r\n *\r\n * @param {vec2} a the first operand\r\n * @param {vec2} b the second operand\r\n * @returns {Number} cross product of a and b\r\n */\r\nexport function cross(a, b) {\r\n    return a[0] * b[1] - a[1] * b[0];\r\n}\r\n\r\n/**\r\n * Performs a linear interpolation between two vec2's\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a the first operand\r\n * @param {vec2} b the second operand\r\n * @param {Number} t interpolation amount between the two inputs\r\n * @returns {vec2} out\r\n */\r\nexport function lerp(out, a, b, t) {\r\n    var ax = a[0],\r\n        ay = a[1];\r\n    out[0] = ax + t * (b[0] - ax);\r\n    out[1] = ay + t * (b[1] - ay);\r\n    return out;\r\n}\r\n\r\n/**\r\n * Transforms the vec2 with a mat2\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a the vector to transform\r\n * @param {mat2} m matrix to transform with\r\n * @returns {vec2} out\r\n */\r\nexport function transformMat2(out, a, m) {\r\n    var x = a[0],\r\n        y = a[1];\r\n    out[0] = m[0] * x + m[2] * y;\r\n    out[1] = m[1] * x + m[3] * y;\r\n    return out;\r\n}\r\n\r\n/**\r\n * Transforms the vec2 with a mat2d\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a the vector to transform\r\n * @param {mat2d} m matrix to transform with\r\n * @returns {vec2} out\r\n */\r\nexport function transformMat2d(out, a, m) {\r\n    var x = a[0],\r\n        y = a[1];\r\n    out[0] = m[0] * x + m[2] * y + m[4];\r\n    out[1] = m[1] * x + m[3] * y + m[5];\r\n    return out;\r\n}\r\n\r\n/**\r\n * Transforms the vec2 with a mat3\r\n * 3rd vector component is implicitly '1'\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a the vector to transform\r\n * @param {mat3} m matrix to transform with\r\n * @returns {vec2} out\r\n */\r\nexport function transformMat3(out, a, m) {\r\n    var x = a[0],\r\n        y = a[1];\r\n    out[0] = m[0] * x + m[3] * y + m[6];\r\n    out[1] = m[1] * x + m[4] * y + m[7];\r\n    return out;\r\n}\r\n\r\n/**\r\n * Transforms the vec2 with a mat4\r\n * 3rd vector component is implicitly '0'\r\n * 4th vector component is implicitly '1'\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a the vector to transform\r\n * @param {mat4} m matrix to transform with\r\n * @returns {vec2} out\r\n */\r\nexport function transformMat4(out, a, m) {\r\n    let x = a[0];\r\n    let y = a[1];\r\n    out[0] = m[0] * x + m[4] * y + m[12];\r\n    out[1] = m[1] * x + m[5] * y + m[13];\r\n    return out;\r\n}\r\n\r\n/**\r\n * Returns whether or not the vectors exactly have the same elements in the same position (when compared with ===)\r\n *\r\n * @param {vec2} a The first vector.\r\n * @param {vec2} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\r\nexport function exactEquals(a, b) {\r\n    return a[0] === b[0] && a[1] === b[1];\r\n}\r\n","import * as Vec2Func from './functions/Vec2Func.js';\r\n\r\nexport class Vec2 extends Array {\r\n    constructor(x = 0, y = x) {\r\n        super(x, y);\r\n        return this;\r\n    }\r\n\r\n    get x() {\r\n        return this[0];\r\n    }\r\n\r\n    get y() {\r\n        return this[1];\r\n    }\r\n\r\n    set x(v) {\r\n        this[0] = v;\r\n    }\r\n\r\n    set y(v) {\r\n        this[1] = v;\r\n    }\r\n\r\n    set(x, y = x) {\r\n        if (x.length) return this.copy(x);\r\n        Vec2Func.set(this, x, y);\r\n        return this;\r\n    }\r\n\r\n    copy(v) {\r\n        Vec2Func.copy(this, v);\r\n        return this;\r\n    }\r\n\r\n    add(va, vb) {\r\n        if (vb) Vec2Func.add(this, va, vb);\r\n        else Vec2Func.add(this, this, va);\r\n        return this;\r\n    }\r\n\r\n    sub(va, vb) {\r\n        if (vb) Vec2Func.subtract(this, va, vb);\r\n        else Vec2Func.subtract(this, this, va);\r\n        return this;\r\n    }\r\n\r\n    multiply(v) {\r\n        if (v.length) Vec2Func.multiply(this, this, v);\r\n        else Vec2Func.scale(this, this, v);\r\n        return this;\r\n    }\r\n\r\n    divide(v) {\r\n        if (v.length) Vec2Func.divide(this, this, v);\r\n        else Vec2Func.scale(this, this, 1 / v);\r\n        return this;\r\n    }\r\n\r\n    inverse(v = this) {\r\n        Vec2Func.inverse(this, v);\r\n        return this;\r\n    }\r\n\r\n    // Can't use 'length' as Array.prototype uses it\r\n    len() {\r\n        return Vec2Func.length(this);\r\n    }\r\n\r\n    distance(v) {\r\n        if (v) return Vec2Func.distance(this, v);\r\n        else return Vec2Func.length(this);\r\n    }\r\n\r\n    squaredLen() {\r\n        return this.squaredDistance();\r\n    }\r\n\r\n    squaredDistance(v) {\r\n        if (v) return Vec2Func.squaredDistance(this, v);\r\n        else return Vec2Func.squaredLength(this);\r\n    }\r\n\r\n    negate(v = this) {\r\n        Vec2Func.negate(this, v);\r\n        return this;\r\n    }\r\n\r\n    cross(va, vb) {\r\n        if (vb) return Vec2Func.cross(va, vb);\r\n        return Vec2Func.cross(this, va);\r\n    }\r\n\r\n    scale(v) {\r\n        Vec2Func.scale(this, this, v);\r\n        return this;\r\n    }\r\n\r\n    normalize() {\r\n        Vec2Func.normalize(this, this);\r\n        return this;\r\n    }\r\n\r\n    dot(v) {\r\n        return Vec2Func.dot(this, v);\r\n    }\r\n\r\n    equals(v) {\r\n        return Vec2Func.exactEquals(this, v);\r\n    }\r\n\r\n    applyMatrix3(mat3) {\r\n        Vec2Func.transformMat3(this, this, mat3);\r\n        return this;\r\n    }\r\n\r\n    applyMatrix4(mat4) {\r\n        Vec2Func.transformMat4(this, this, mat4);\r\n        return this;\r\n    }\r\n\r\n    lerp(v, a) {\r\n        Vec2Func.lerp(this, this, v, a);\r\n    }\r\n\r\n    clone() {\r\n        return new Vec2(this[0], this[1]);\r\n    }\r\n\r\n    fromArray(a, o = 0) {\r\n        this[0] = a[o];\r\n        this[1] = a[o + 1];\r\n        return this;\r\n    }\r\n\r\n    toArray(a = [], o = 0) {\r\n        a[o] = this[0];\r\n        a[o + 1] = this[1];\r\n        return a;\r\n    }\r\n}\r\n","// Based from ThreeJS' OrbitControls class, rewritten using es6 with some additions and subtractions.\r\n// TODO: abstract event handlers so can be fed from other sources\r\n// TODO: make scroll zoom more accurate than just >/< zero\r\n// TODO: be able to pass in new camera position\r\n\r\nimport { Vec3 } from '../math/Vec3.js';\r\nimport { Vec2 } from '../math/Vec2.js';\r\n\r\nconst STATE = { NONE: -1, ROTATE: 0, DOLLY: 1, PAN: 2, DOLLY_PAN: 3 };\r\nconst tempVec3 = new Vec3();\r\nconst tempVec2a = new Vec2();\r\nconst tempVec2b = new Vec2();\r\n\r\nexport function Orbit(\r\n    object,\r\n    {\r\n        element = document,\r\n        enabled = true,\r\n        target = new Vec3(),\r\n        ease = 0.25,\r\n        inertia = 0.85,\r\n        enableRotate = true,\r\n        rotateSpeed = 0.1,\r\n        autoRotate = false,\r\n        autoRotateSpeed = 1.0,\r\n        enableZoom = true,\r\n        zoomSpeed = 1,\r\n        enablePan = true,\r\n        panSpeed = 0.1,\r\n        minPolarAngle = 0,\r\n        maxPolarAngle = Math.PI,\r\n        minAzimuthAngle = -Infinity,\r\n        maxAzimuthAngle = Infinity,\r\n        minDistance = 0,\r\n        maxDistance = Infinity,\r\n    } = {}\r\n) {\r\n    this.enabled = enabled;\r\n    this.target = target;\r\n\r\n    // Catch attempts to disable - set to 1 so has no effect\r\n    ease = ease || 1;\r\n    inertia = inertia || 0;\r\n\r\n    this.minDistance = minDistance;\r\n    this.maxDistance = maxDistance;\r\n\r\n    // current position in sphericalTarget coordinates\r\n    const sphericalDelta = { radius: 1, phi: 0, theta: 0 };\r\n    const sphericalTarget = { radius: 1, phi: 0, theta: 0 };\r\n    const spherical = { radius: 1, phi: 0, theta: 0 };\r\n    const panDelta = new Vec3();\r\n\r\n    // Grab initial position values\r\n    const offset = new Vec3();\r\n    offset.copy(object.position).sub(this.target);\r\n    spherical.radius = sphericalTarget.radius = offset.distance();\r\n    spherical.theta = sphericalTarget.theta = Math.atan2(offset.x, offset.z);\r\n    spherical.phi = sphericalTarget.phi = Math.acos(Math.min(Math.max(offset.y / sphericalTarget.radius, -1), 1));\r\n\r\n    this.offset = offset;\r\n\r\n    this.update = () => {\r\n        if (autoRotate) {\r\n            handleAutoRotate();\r\n        }\r\n\r\n        // apply delta\r\n        sphericalTarget.radius *= sphericalDelta.radius;\r\n        sphericalTarget.theta += sphericalDelta.theta;\r\n        sphericalTarget.phi += sphericalDelta.phi;\r\n\r\n        // apply boundaries\r\n        sphericalTarget.theta = Math.max(minAzimuthAngle, Math.min(maxAzimuthAngle, sphericalTarget.theta));\r\n        sphericalTarget.phi = Math.max(minPolarAngle, Math.min(maxPolarAngle, sphericalTarget.phi));\r\n        sphericalTarget.radius = Math.max(this.minDistance, Math.min(this.maxDistance, sphericalTarget.radius));\r\n\r\n        // ease values\r\n        spherical.phi += (sphericalTarget.phi - spherical.phi) * ease;\r\n        spherical.theta += (sphericalTarget.theta - spherical.theta) * ease;\r\n        spherical.radius += (sphericalTarget.radius - spherical.radius) * ease;\r\n\r\n        // apply pan to target. As offset is relative to target, it also shifts\r\n        this.target.add(panDelta);\r\n\r\n        // apply rotation to offset\r\n        let sinPhiRadius = spherical.radius * Math.sin(Math.max(0.000001, spherical.phi));\r\n        offset.x = sinPhiRadius * Math.sin(spherical.theta);\r\n        offset.y = spherical.radius * Math.cos(spherical.phi);\r\n        offset.z = sinPhiRadius * Math.cos(spherical.theta);\r\n\r\n        // Apply updated values to object\r\n        object.position.copy(this.target).add(offset);\r\n        object.lookAt(this.target);\r\n\r\n        // Apply inertia to values\r\n        sphericalDelta.theta *= inertia;\r\n        sphericalDelta.phi *= inertia;\r\n        panDelta.multiply(inertia);\r\n\r\n        // Reset scale every frame to avoid applying scale multiple times\r\n        sphericalDelta.radius = 1;\r\n    };\r\n\r\n    // Updates internals with new position\r\n    this.forcePosition = () => {\r\n        offset.copy(object.position).sub(this.target);\r\n        spherical.radius = sphericalTarget.radius = offset.distance();\r\n        spherical.theta = sphericalTarget.theta = Math.atan2(offset.x, offset.z);\r\n        spherical.phi = sphericalTarget.phi = Math.acos(Math.min(Math.max(offset.y / sphericalTarget.radius, -1), 1));\r\n        object.lookAt(this.target);\r\n    };\r\n\r\n    // Everything below here just updates panDelta and sphericalDelta\r\n    // Using those two objects' values, the orbit is calculated\r\n\r\n    const rotateStart = new Vec2();\r\n    const panStart = new Vec2();\r\n    const dollyStart = new Vec2();\r\n\r\n    let state = STATE.NONE;\r\n    this.mouseButtons = { ORBIT: 0, ZOOM: 1, PAN: 2 };\r\n\r\n    function getZoomScale() {\r\n        return Math.pow(0.95, zoomSpeed);\r\n    }\r\n\r\n    function panLeft(distance, m) {\r\n        tempVec3.set(m[0], m[1], m[2]);\r\n        tempVec3.multiply(-distance);\r\n        panDelta.add(tempVec3);\r\n    }\r\n\r\n    function panUp(distance, m) {\r\n        tempVec3.set(m[4], m[5], m[6]);\r\n        tempVec3.multiply(distance);\r\n        panDelta.add(tempVec3);\r\n    }\r\n\r\n    const pan = (deltaX, deltaY) => {\r\n        let el = element === document ? document.body : element;\r\n        tempVec3.copy(object.position).sub(this.target);\r\n        let targetDistance = tempVec3.distance();\r\n        targetDistance *= Math.tan((((object.fov || 45) / 2) * Math.PI) / 180.0);\r\n        panLeft((2 * deltaX * targetDistance) / el.clientHeight, object.matrix);\r\n        panUp((2 * deltaY * targetDistance) / el.clientHeight, object.matrix);\r\n    };\r\n\r\n    function dolly(dollyScale) {\r\n        sphericalDelta.radius /= dollyScale;\r\n    }\r\n\r\n    function handleAutoRotate() {\r\n        const angle = ((2 * Math.PI) / 60 / 60) * autoRotateSpeed;\r\n        sphericalDelta.theta -= angle;\r\n    }\r\n\r\n    function handleMoveRotate(x, y) {\r\n        tempVec2a.set(x, y);\r\n        tempVec2b.sub(tempVec2a, rotateStart).multiply(rotateSpeed);\r\n        let el = element === document ? document.body : element;\r\n        sphericalDelta.theta -= (2 * Math.PI * tempVec2b.x) / el.clientHeight;\r\n        sphericalDelta.phi -= (2 * Math.PI * tempVec2b.y) / el.clientHeight;\r\n        rotateStart.copy(tempVec2a);\r\n    }\r\n\r\n    function handleMouseMoveDolly(e) {\r\n        tempVec2a.set(e.clientX, e.clientY);\r\n        tempVec2b.sub(tempVec2a, dollyStart);\r\n        if (tempVec2b.y > 0) {\r\n            dolly(getZoomScale());\r\n        } else if (tempVec2b.y < 0) {\r\n            dolly(1 / getZoomScale());\r\n        }\r\n        dollyStart.copy(tempVec2a);\r\n    }\r\n\r\n    function handleMovePan(x, y) {\r\n        tempVec2a.set(x, y);\r\n        tempVec2b.sub(tempVec2a, panStart).multiply(panSpeed);\r\n        pan(tempVec2b.x, tempVec2b.y);\r\n        panStart.copy(tempVec2a);\r\n    }\r\n\r\n    function handleTouchStartDollyPan(e) {\r\n        if (enableZoom) {\r\n            let dx = e.touches[0].pageX - e.touches[1].pageX;\r\n            let dy = e.touches[0].pageY - e.touches[1].pageY;\r\n            let distance = Math.sqrt(dx * dx + dy * dy);\r\n            dollyStart.set(0, distance);\r\n        }\r\n\r\n        if (enablePan) {\r\n            let x = 0.5 * (e.touches[0].pageX + e.touches[1].pageX);\r\n            let y = 0.5 * (e.touches[0].pageY + e.touches[1].pageY);\r\n            panStart.set(x, y);\r\n        }\r\n    }\r\n\r\n    function handleTouchMoveDollyPan(e) {\r\n        if (enableZoom) {\r\n            let dx = e.touches[0].pageX - e.touches[1].pageX;\r\n            let dy = e.touches[0].pageY - e.touches[1].pageY;\r\n            let distance = Math.sqrt(dx * dx + dy * dy);\r\n            tempVec2a.set(0, distance);\r\n            tempVec2b.set(0, Math.pow(tempVec2a.y / dollyStart.y, zoomSpeed));\r\n            dolly(tempVec2b.y);\r\n            dollyStart.copy(tempVec2a);\r\n        }\r\n\r\n        if (enablePan) {\r\n            let x = 0.5 * (e.touches[0].pageX + e.touches[1].pageX);\r\n            let y = 0.5 * (e.touches[0].pageY + e.touches[1].pageY);\r\n            handleMovePan(x, y);\r\n        }\r\n    }\r\n\r\n    const onMouseDown = (e) => {\r\n        if (!this.enabled) return;\r\n\r\n        switch (e.button) {\r\n            case this.mouseButtons.ORBIT:\r\n                if (enableRotate === false) return;\r\n                rotateStart.set(e.clientX, e.clientY);\r\n                state = STATE.ROTATE;\r\n                break;\r\n            case this.mouseButtons.ZOOM:\r\n                if (enableZoom === false) return;\r\n                dollyStart.set(e.clientX, e.clientY);\r\n                state = STATE.DOLLY;\r\n                break;\r\n            case this.mouseButtons.PAN:\r\n                if (enablePan === false) return;\r\n                panStart.set(e.clientX, e.clientY);\r\n                state = STATE.PAN;\r\n                break;\r\n        }\r\n\r\n        if (state !== STATE.NONE) {\r\n            window.addEventListener('mousemove', onMouseMove, false);\r\n            window.addEventListener('mouseup', onMouseUp, false);\r\n        }\r\n    };\r\n\r\n    const onMouseMove = (e) => {\r\n        if (!this.enabled) return;\r\n\r\n        switch (state) {\r\n            case STATE.ROTATE:\r\n                if (enableRotate === false) return;\r\n                handleMoveRotate(e.clientX, e.clientY);\r\n                break;\r\n            case STATE.DOLLY:\r\n                if (enableZoom === false) return;\r\n                handleMouseMoveDolly(e);\r\n                break;\r\n            case STATE.PAN:\r\n                if (enablePan === false) return;\r\n                handleMovePan(e.clientX, e.clientY);\r\n                break;\r\n        }\r\n    };\r\n\r\n    const onMouseUp = () => {\r\n        window.removeEventListener('mousemove', onMouseMove, false);\r\n        window.removeEventListener('mouseup', onMouseUp, false);\r\n        state = STATE.NONE;\r\n    };\r\n\r\n    const onMouseWheel = (e) => {\r\n        if (!this.enabled || !enableZoom || (state !== STATE.NONE && state !== STATE.ROTATE)) return;\r\n        e.stopPropagation();\r\n        e.preventDefault();\r\n\r\n        if (e.deltaY < 0) {\r\n            dolly(1 / getZoomScale());\r\n        } else if (e.deltaY > 0) {\r\n            dolly(getZoomScale());\r\n        }\r\n    };\r\n\r\n    const onTouchStart = (e) => {\r\n        if (!this.enabled) return;\r\n        e.preventDefault();\r\n\r\n        switch (e.touches.length) {\r\n            case 1:\r\n                if (enableRotate === false) return;\r\n                rotateStart.set(e.touches[0].pageX, e.touches[0].pageY);\r\n                state = STATE.ROTATE;\r\n                break;\r\n            case 2:\r\n                if (enableZoom === false && enablePan === false) return;\r\n                handleTouchStartDollyPan(e);\r\n                state = STATE.DOLLY_PAN;\r\n                break;\r\n            default:\r\n                state = STATE.NONE;\r\n        }\r\n    };\r\n\r\n    const onTouchMove = (e) => {\r\n        if (!this.enabled) return;\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n\r\n        switch (e.touches.length) {\r\n            case 1:\r\n                if (enableRotate === false) return;\r\n                handleMoveRotate(e.touches[0].pageX, e.touches[0].pageY);\r\n                break;\r\n            case 2:\r\n                if (enableZoom === false && enablePan === false) return;\r\n                handleTouchMoveDollyPan(e);\r\n                break;\r\n            default:\r\n                state = STATE.NONE;\r\n        }\r\n    };\r\n\r\n    const onTouchEnd = () => {\r\n        if (!this.enabled) return;\r\n        state = STATE.NONE;\r\n    };\r\n\r\n    const onContextMenu = (e) => {\r\n        if (!this.enabled) return;\r\n        e.preventDefault();\r\n    };\r\n\r\n    function addHandlers() {\r\n        element.addEventListener('contextmenu', onContextMenu, false);\r\n        element.addEventListener('mousedown', onMouseDown, false);\r\n        element.addEventListener('wheel', onMouseWheel, { passive: false });\r\n        element.addEventListener('touchstart', onTouchStart, { passive: false });\r\n        element.addEventListener('touchend', onTouchEnd, false);\r\n        element.addEventListener('touchmove', onTouchMove, { passive: false });\r\n    }\r\n\r\n    this.remove = function () {\r\n        element.removeEventListener('contextmenu', onContextMenu);\r\n        element.removeEventListener('mousedown', onMouseDown);\r\n        element.removeEventListener('wheel', onMouseWheel);\r\n        element.removeEventListener('touchstart', onTouchStart);\r\n        element.removeEventListener('touchend', onTouchEnd);\r\n        element.removeEventListener('touchmove', onTouchMove);\r\n        window.removeEventListener('mousemove', onMouseMove);\r\n        window.removeEventListener('mouseup', onMouseUp);\r\n    };\r\n\r\n    addHandlers();\r\n}\r\n","// TODO: barycentric code shouldn't be here, but where?\r\n// TODO: SphereCast?\r\n\r\nimport { Vec2 } from '../math/Vec2.js';\r\nimport { Vec3 } from '../math/Vec3.js';\r\nimport { Mat4 } from '../math/Mat4.js';\r\n\r\nconst tempVec2a = new Vec2();\r\nconst tempVec2b = new Vec2();\r\nconst tempVec2c = new Vec2();\r\n\r\nconst tempVec3a = new Vec3();\r\nconst tempVec3b = new Vec3();\r\nconst tempVec3c = new Vec3();\r\nconst tempVec3d = new Vec3();\r\nconst tempVec3e = new Vec3();\r\nconst tempVec3f = new Vec3();\r\nconst tempVec3g = new Vec3();\r\nconst tempVec3h = new Vec3();\r\nconst tempVec3i = new Vec3();\r\nconst tempVec3j = new Vec3();\r\nconst tempVec3k = new Vec3();\r\n\r\nconst tempMat4 = new Mat4();\r\n\r\nexport class Raycast {\r\n    constructor() {\r\n        this.origin = new Vec3();\r\n        this.direction = new Vec3();\r\n    }\r\n\r\n    // Set ray from mouse unprojection\r\n    castMouse(camera, mouse = [0, 0]) {\r\n        if (camera.type === 'orthographic') {\r\n            // Set origin\r\n            // Since camera is orthographic, origin is not the camera position\r\n            const { left, right, bottom, top, zoom } = camera;\r\n            const x = left / zoom + ((right - left) / zoom) * (mouse[0] * 0.5 + 0.5);\r\n            const y = bottom / zoom + ((top - bottom) / zoom) * (mouse[1] * 0.5 + 0.5);\r\n            this.origin.set(x, y, 0);\r\n            this.origin.applyMatrix4(camera.worldMatrix);\r\n\r\n            // Set direction\r\n            // https://community.khronos.org/t/get-direction-from-transformation-matrix-or-quat/65502/2\r\n            this.direction.x = -camera.worldMatrix[8];\r\n            this.direction.y = -camera.worldMatrix[9];\r\n            this.direction.z = -camera.worldMatrix[10];\r\n        } else {\r\n            // Set origin\r\n            camera.worldMatrix.getTranslation(this.origin);\r\n\r\n            // Set direction\r\n            this.direction.set(mouse[0], mouse[1], 0.5);\r\n            camera.unproject(this.direction);\r\n            this.direction.sub(this.origin).normalize();\r\n        }\r\n    }\r\n\r\n    intersectBounds(meshes, { maxDistance, output = [] } = {}) {\r\n        if (!Array.isArray(meshes)) meshes = [meshes];\r\n\r\n        const invWorldMat4 = tempMat4;\r\n        const origin = tempVec3a;\r\n        const direction = tempVec3b;\r\n\r\n        const hits = output;\r\n        hits.length = 0;\r\n\r\n        meshes.forEach((mesh) => {\r\n            // Create bounds\r\n            if (!mesh.geometry.bounds || mesh.geometry.bounds.radius === Infinity) mesh.geometry.computeBoundingSphere();\r\n            const bounds = mesh.geometry.bounds;\r\n            invWorldMat4.inverse(mesh.worldMatrix);\r\n\r\n            // Get max distance locally\r\n            let localMaxDistance;\r\n            if (maxDistance) {\r\n                direction.copy(this.direction).scaleRotateMatrix4(invWorldMat4);\r\n                localMaxDistance = maxDistance * direction.len();\r\n            }\r\n\r\n            // Take world space ray and make it object space to align with bounding box\r\n            origin.copy(this.origin).applyMatrix4(invWorldMat4);\r\n            direction.copy(this.direction).transformDirection(invWorldMat4);\r\n\r\n            // Break out early if bounds too far away from origin\r\n            if (maxDistance) {\r\n                if (origin.distance(bounds.center) - bounds.radius > localMaxDistance) return;\r\n            }\r\n\r\n            let localDistance = 0;\r\n\r\n            // Check origin isn't inside bounds before testing intersection\r\n            if (mesh.geometry.raycast === 'sphere') {\r\n                if (origin.distance(bounds.center) > bounds.radius) {\r\n                    localDistance = this.intersectSphere(bounds, origin, direction);\r\n                    if (!localDistance) return;\r\n                }\r\n            } else {\r\n                if (\r\n                    origin.x < bounds.min.x ||\r\n                    origin.x > bounds.max.x ||\r\n                    origin.y < bounds.min.y ||\r\n                    origin.y > bounds.max.y ||\r\n                    origin.z < bounds.min.z ||\r\n                    origin.z > bounds.max.z\r\n                ) {\r\n                    localDistance = this.intersectBox(bounds, origin, direction);\r\n                    if (!localDistance) return;\r\n                }\r\n            }\r\n\r\n            if (maxDistance && localDistance > localMaxDistance) return;\r\n\r\n            // Create object on mesh to avoid generating lots of objects\r\n            if (!mesh.hit) mesh.hit = { localPoint: new Vec3(), point: new Vec3() };\r\n\r\n            mesh.hit.localPoint.copy(direction).multiply(localDistance).add(origin);\r\n            mesh.hit.point.copy(mesh.hit.localPoint).applyMatrix4(mesh.worldMatrix);\r\n            mesh.hit.distance = mesh.hit.point.distance(this.origin);\r\n\r\n            hits.push(mesh);\r\n        });\r\n\r\n        hits.sort((a, b) => a.hit.distance - b.hit.distance);\r\n        return hits;\r\n    }\r\n\r\n    intersectMeshes(meshes, { cullFace = true, maxDistance, includeUV = true, includeNormal = true, output = [] } = {}) {\r\n        // Test bounds first before testing geometry\r\n        const hits = this.intersectBounds(meshes, { maxDistance, output });\r\n        if (!hits.length) return hits;\r\n\r\n        const invWorldMat4 = tempMat4;\r\n        const origin = tempVec3a;\r\n        const direction = tempVec3b;\r\n        const a = tempVec3c;\r\n        const b = tempVec3d;\r\n        const c = tempVec3e;\r\n        const closestFaceNormal = tempVec3f;\r\n        const faceNormal = tempVec3g;\r\n        const barycoord = tempVec3h;\r\n        const uvA = tempVec2a;\r\n        const uvB = tempVec2b;\r\n        const uvC = tempVec2c;\r\n\r\n        for (let i = hits.length - 1; i >= 0; i--) {\r\n            const mesh = hits[i];\r\n            invWorldMat4.inverse(mesh.worldMatrix);\r\n\r\n            // Get max distance locally\r\n            let localMaxDistance;\r\n            if (maxDistance) {\r\n                direction.copy(this.direction).scaleRotateMatrix4(invWorldMat4);\r\n                localMaxDistance = maxDistance * direction.len();\r\n            }\r\n\r\n            // Take world space ray and make it object space to align with bounding box\r\n            origin.copy(this.origin).applyMatrix4(invWorldMat4);\r\n            direction.copy(this.direction).transformDirection(invWorldMat4);\r\n\r\n            let localDistance = 0;\r\n            let closestA, closestB, closestC;\r\n\r\n            const geometry = mesh.geometry;\r\n            const attributes = geometry.attributes;\r\n            const index = attributes.index;\r\n\r\n            const start = Math.max(0, geometry.drawRange.start);\r\n            const end = Math.min(index ? index.count : attributes.position.count, geometry.drawRange.start + geometry.drawRange.count);\r\n\r\n            for (let j = start; j < end; j += 3) {\r\n                // Position attribute indices for each triangle\r\n                const ai = index ? index.data[j] : j;\r\n                const bi = index ? index.data[j + 1] : j + 1;\r\n                const ci = index ? index.data[j + 2] : j + 2;\r\n\r\n                a.fromArray(attributes.position.data, ai * 3);\r\n                b.fromArray(attributes.position.data, bi * 3);\r\n                c.fromArray(attributes.position.data, ci * 3);\r\n\r\n                const distance = this.intersectTriangle(a, b, c, cullFace, origin, direction, faceNormal);\r\n                if (!distance) continue;\r\n\r\n                // Too far away\r\n                if (maxDistance && distance > localMaxDistance) continue;\r\n\r\n                if (!localDistance || distance < localDistance) {\r\n                    localDistance = distance;\r\n                    closestA = ai;\r\n                    closestB = bi;\r\n                    closestC = ci;\r\n                    closestFaceNormal.copy(faceNormal);\r\n                }\r\n            }\r\n\r\n            if (!localDistance) hits.splice(i, 1);\r\n\r\n            // Update hit values from bounds-test\r\n            mesh.hit.localPoint.copy(direction).multiply(localDistance).add(origin);\r\n            mesh.hit.point.copy(mesh.hit.localPoint).applyMatrix4(mesh.worldMatrix);\r\n            mesh.hit.distance = mesh.hit.point.distance(this.origin);\r\n\r\n            // Add unique hit objects on mesh to avoid generating lots of objects\r\n            if (!mesh.hit.faceNormal) {\r\n                mesh.hit.localFaceNormal = new Vec3();\r\n                mesh.hit.faceNormal = new Vec3();\r\n                mesh.hit.uv = new Vec2();\r\n                mesh.hit.localNormal = new Vec3();\r\n                mesh.hit.normal = new Vec3();\r\n            }\r\n\r\n            // Add face normal data which is already computed\r\n            mesh.hit.localFaceNormal.copy(closestFaceNormal);\r\n            mesh.hit.faceNormal.copy(mesh.hit.localFaceNormal).transformDirection(mesh.worldMatrix);\r\n\r\n            // Optional data, opt out to optimise a bit if necessary\r\n            if (includeUV || includeNormal) {\r\n                // Calculate barycoords to find uv values at hit point\r\n                a.fromArray(attributes.position.data, closestA * 3);\r\n                b.fromArray(attributes.position.data, closestB * 3);\r\n                c.fromArray(attributes.position.data, closestC * 3);\r\n                this.getBarycoord(mesh.hit.localPoint, a, b, c, barycoord);\r\n            }\r\n\r\n            if (includeUV && attributes.uv) {\r\n                uvA.fromArray(attributes.uv.data, closestA * 2);\r\n                uvB.fromArray(attributes.uv.data, closestB * 2);\r\n                uvC.fromArray(attributes.uv.data, closestC * 2);\r\n                mesh.hit.uv.set(\r\n                    uvA.x * barycoord.x + uvB.x * barycoord.y + uvC.x * barycoord.z,\r\n                    uvA.y * barycoord.x + uvB.y * barycoord.y + uvC.y * barycoord.z\r\n                );\r\n            }\r\n\r\n            if (includeNormal && attributes.normal) {\r\n                a.fromArray(attributes.normal.data, closestA * 3);\r\n                b.fromArray(attributes.normal.data, closestB * 3);\r\n                c.fromArray(attributes.normal.data, closestC * 3);\r\n                mesh.hit.localNormal.set(\r\n                    a.x * barycoord.x + b.x * barycoord.y + c.x * barycoord.z,\r\n                    a.y * barycoord.x + b.y * barycoord.y + c.y * barycoord.z,\r\n                    a.z * barycoord.x + b.z * barycoord.y + c.z * barycoord.z\r\n                );\r\n\r\n                mesh.hit.normal.copy(mesh.hit.localNormal).transformDirection(mesh.worldMatrix);\r\n            }\r\n        }\r\n\r\n        hits.sort((a, b) => a.hit.distance - b.hit.distance);\r\n        return hits;\r\n    }\r\n\r\n    intersectSphere(sphere, origin = this.origin, direction = this.direction) {\r\n        const ray = tempVec3c;\r\n        ray.sub(sphere.center, origin);\r\n        const tca = ray.dot(direction);\r\n        const d2 = ray.dot(ray) - tca * tca;\r\n        const radius2 = sphere.radius * sphere.radius;\r\n        if (d2 > radius2) return 0;\r\n        const thc = Math.sqrt(radius2 - d2);\r\n        const t0 = tca - thc;\r\n        const t1 = tca + thc;\r\n        if (t0 < 0 && t1 < 0) return 0;\r\n        if (t0 < 0) return t1;\r\n        return t0;\r\n    }\r\n\r\n    // Ray AABB - Ray Axis aligned bounding box testing\r\n    intersectBox(box, origin = this.origin, direction = this.direction) {\r\n        let tmin, tmax, tYmin, tYmax, tZmin, tZmax;\r\n        const invdirx = 1 / direction.x;\r\n        const invdiry = 1 / direction.y;\r\n        const invdirz = 1 / direction.z;\r\n        const min = box.min;\r\n        const max = box.max;\r\n        tmin = ((invdirx >= 0 ? min.x : max.x) - origin.x) * invdirx;\r\n        tmax = ((invdirx >= 0 ? max.x : min.x) - origin.x) * invdirx;\r\n        tYmin = ((invdiry >= 0 ? min.y : max.y) - origin.y) * invdiry;\r\n        tYmax = ((invdiry >= 0 ? max.y : min.y) - origin.y) * invdiry;\r\n        if (tmin > tYmax || tYmin > tmax) return 0;\r\n        if (tYmin > tmin) tmin = tYmin;\r\n        if (tYmax < tmax) tmax = tYmax;\r\n        tZmin = ((invdirz >= 0 ? min.z : max.z) - origin.z) * invdirz;\r\n        tZmax = ((invdirz >= 0 ? max.z : min.z) - origin.z) * invdirz;\r\n        if (tmin > tZmax || tZmin > tmax) return 0;\r\n        if (tZmin > tmin) tmin = tZmin;\r\n        if (tZmax < tmax) tmax = tZmax;\r\n        if (tmax < 0) return 0;\r\n        return tmin >= 0 ? tmin : tmax;\r\n    }\r\n\r\n    intersectTriangle(a, b, c, backfaceCulling = true, origin = this.origin, direction = this.direction, normal = tempVec3g) {\r\n        // from https://github.com/mrdoob/three.js/blob/master/src/math/Ray.js\r\n        // which is from http://www.geometrictools.com/GTEngine/Include/Mathematics/GteIntrRay3Triangle3.h\r\n        const edge1 = tempVec3h;\r\n        const edge2 = tempVec3i;\r\n        const diff = tempVec3j;\r\n        edge1.sub(b, a);\r\n        edge2.sub(c, a);\r\n        normal.cross(edge1, edge2);\r\n        let DdN = direction.dot(normal);\r\n        if (!DdN) return 0;\r\n        let sign;\r\n        if (DdN > 0) {\r\n            if (backfaceCulling) return 0;\r\n            sign = 1;\r\n        } else {\r\n            sign = -1;\r\n            DdN = -DdN;\r\n        }\r\n        diff.sub(origin, a);\r\n        let DdQxE2 = sign * direction.dot(edge2.cross(diff, edge2));\r\n        if (DdQxE2 < 0) return 0;\r\n        let DdE1xQ = sign * direction.dot(edge1.cross(diff));\r\n        if (DdE1xQ < 0) return 0;\r\n        if (DdQxE2 + DdE1xQ > DdN) return 0;\r\n        let QdN = -sign * diff.dot(normal);\r\n        if (QdN < 0) return 0;\r\n        return QdN / DdN;\r\n    }\r\n\r\n    getBarycoord(point, a, b, c, target = tempVec3h) {\r\n        // From https://github.com/mrdoob/three.js/blob/master/src/math/Triangle.js\r\n        // static/instance method to calculate barycentric coordinates\r\n        // based on: http://www.blackpawn.com/texts/pointinpoly/default.html\r\n        const v0 = tempVec3i;\r\n        const v1 = tempVec3j;\r\n        const v2 = tempVec3k;\r\n        v0.sub(c, a);\r\n        v1.sub(b, a);\r\n        v2.sub(point, a);\r\n        const dot00 = v0.dot(v0);\r\n        const dot01 = v0.dot(v1);\r\n        const dot02 = v0.dot(v2);\r\n        const dot11 = v1.dot(v1);\r\n        const dot12 = v1.dot(v2);\r\n        const denom = dot00 * dot11 - dot01 * dot01;\r\n        if (denom === 0) return target.set(-2, -1, -1);\r\n        const invDenom = 1 / denom;\r\n        const u = (dot11 * dot02 - dot01 * dot12) * invDenom;\r\n        const v = (dot00 * dot12 - dot01 * dot02) * invDenom;\r\n        return target.set(1 - u - v, v, u);\r\n    }\r\n}\r\n","// TODO: delete texture\r\n// TODO: use texSubImage2D for updates (video or when loaded)\r\n// TODO: need? encoding = linearEncoding\r\n// TODO: support non-compressed mipmaps uploads\r\n\r\nconst emptyPixel = new Uint8Array(4);\r\n\r\nfunction isPowerOf2(value) {\r\n    return (value & (value - 1)) === 0;\r\n}\r\n\r\nlet ID = 1;\r\n\r\nexport class Texture {\r\n    constructor(\r\n        gl,\r\n        {\r\n            image,\r\n            target = gl.TEXTURE_2D,\r\n            type = gl.UNSIGNED_BYTE,\r\n            format = gl.RGBA,\r\n            internalFormat = format,\r\n            wrapS = gl.CLAMP_TO_EDGE,\r\n            wrapT = gl.CLAMP_TO_EDGE,\r\n            generateMipmaps = true,\r\n            minFilter = generateMipmaps ? gl.NEAREST_MIPMAP_LINEAR : gl.LINEAR,\r\n            magFilter = gl.LINEAR,\r\n            premultiplyAlpha = false,\r\n            unpackAlignment = 4,\r\n            flipY = target == gl.TEXTURE_2D ? true : false,\r\n            anisotropy = 0,\r\n            level = 0,\r\n            width, // used for RenderTargets or Data Textures\r\n            height = width,\r\n        } = {}\r\n    ) {\r\n        this.gl = gl;\r\n        this.id = ID++;\r\n\r\n        this.image = image;\r\n        this.target = target;\r\n        this.type = type;\r\n        this.format = format;\r\n        this.internalFormat = internalFormat;\r\n        this.minFilter = minFilter;\r\n        this.magFilter = magFilter;\r\n        this.wrapS = wrapS;\r\n        this.wrapT = wrapT;\r\n        this.generateMipmaps = generateMipmaps;\r\n        this.premultiplyAlpha = premultiplyAlpha;\r\n        this.unpackAlignment = unpackAlignment;\r\n        this.flipY = flipY;\r\n        this.anisotropy = Math.min(anisotropy, this.gl.renderer.parameters.maxAnisotropy);\r\n        this.level = level;\r\n        this.width = width;\r\n        this.height = height;\r\n        this.texture = this.gl.createTexture();\r\n\r\n        this.store = {\r\n            image: null,\r\n        };\r\n\r\n        // Alias for state store to avoid redundant calls for global state\r\n        this.glState = this.gl.renderer.state;\r\n\r\n        // State store to avoid redundant calls for per-texture state\r\n        this.state = {};\r\n        this.state.minFilter = this.gl.NEAREST_MIPMAP_LINEAR;\r\n        this.state.magFilter = this.gl.LINEAR;\r\n        this.state.wrapS = this.gl.REPEAT;\r\n        this.state.wrapT = this.gl.REPEAT;\r\n        this.state.anisotropy = 0;\r\n    }\r\n\r\n    bind() {\r\n        // Already bound to active texture unit\r\n        if (this.glState.textureUnits[this.glState.activeTextureUnit] === this.id) return;\r\n        this.gl.bindTexture(this.target, this.texture);\r\n        this.glState.textureUnits[this.glState.activeTextureUnit] = this.id;\r\n    }\r\n\r\n    update(textureUnit = 0) {\r\n        const needsUpdate = !(this.image === this.store.image && !this.needsUpdate);\r\n\r\n        // Make sure that texture is bound to its texture unit\r\n        if (needsUpdate || this.glState.textureUnits[textureUnit] !== this.id) {\r\n            // set active texture unit to perform texture functions\r\n            this.gl.renderer.activeTexture(textureUnit);\r\n            this.bind();\r\n        }\r\n\r\n        if (!needsUpdate) return;\r\n        this.needsUpdate = false;\r\n\r\n        if (this.flipY !== this.glState.flipY) {\r\n            this.gl.pixelStorei(this.gl.UNPACK_FLIP_Y_WEBGL, this.flipY);\r\n            this.glState.flipY = this.flipY;\r\n        }\r\n\r\n        if (this.premultiplyAlpha !== this.glState.premultiplyAlpha) {\r\n            this.gl.pixelStorei(this.gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, this.premultiplyAlpha);\r\n            this.glState.premultiplyAlpha = this.premultiplyAlpha;\r\n        }\r\n\r\n        if (this.unpackAlignment !== this.glState.unpackAlignment) {\r\n            this.gl.pixelStorei(this.gl.UNPACK_ALIGNMENT, this.unpackAlignment);\r\n            this.glState.unpackAlignment = this.unpackAlignment;\r\n        }\r\n\r\n        if (this.minFilter !== this.state.minFilter) {\r\n            this.gl.texParameteri(this.target, this.gl.TEXTURE_MIN_FILTER, this.minFilter);\r\n            this.state.minFilter = this.minFilter;\r\n        }\r\n\r\n        if (this.magFilter !== this.state.magFilter) {\r\n            this.gl.texParameteri(this.target, this.gl.TEXTURE_MAG_FILTER, this.magFilter);\r\n            this.state.magFilter = this.magFilter;\r\n        }\r\n\r\n        if (this.wrapS !== this.state.wrapS) {\r\n            this.gl.texParameteri(this.target, this.gl.TEXTURE_WRAP_S, this.wrapS);\r\n            this.state.wrapS = this.wrapS;\r\n        }\r\n\r\n        if (this.wrapT !== this.state.wrapT) {\r\n            this.gl.texParameteri(this.target, this.gl.TEXTURE_WRAP_T, this.wrapT);\r\n            this.state.wrapT = this.wrapT;\r\n        }\r\n\r\n        if (this.anisotropy && this.anisotropy !== this.state.anisotropy) {\r\n            this.gl.texParameterf(\r\n                this.target,\r\n                this.gl.renderer.getExtension('EXT_texture_filter_anisotropic').TEXTURE_MAX_ANISOTROPY_EXT,\r\n                this.anisotropy\r\n            );\r\n            this.state.anisotropy = this.anisotropy;\r\n        }\r\n\r\n        if (this.image) {\r\n            if (this.image.width) {\r\n                this.width = this.image.width;\r\n                this.height = this.image.height;\r\n            }\r\n\r\n            if (this.target === this.gl.TEXTURE_CUBE_MAP) {\r\n                // For cube maps\r\n                for (let i = 0; i < 6; i++) {\r\n                    this.gl.texImage2D(\r\n                        this.gl.TEXTURE_CUBE_MAP_POSITIVE_X + i,\r\n                        this.level,\r\n                        this.internalFormat,\r\n                        this.format,\r\n                        this.type,\r\n                        this.image[i]\r\n                    );\r\n                }\r\n            } else if (ArrayBuffer.isView(this.image)) {\r\n                // Data texture\r\n                this.gl.texImage2D(this.target, this.level, this.internalFormat, this.width, this.height, 0, this.format, this.type, this.image);\r\n            } else if (this.image.isCompressedTexture) {\r\n                // Compressed texture\r\n                for (let level = 0; level < this.image.length; level++) {\r\n                    this.gl.compressedTexImage2D(\r\n                        this.target,\r\n                        level,\r\n                        this.internalFormat,\r\n                        this.image[level].width,\r\n                        this.image[level].height,\r\n                        0,\r\n                        this.image[level].data\r\n                    );\r\n                }\r\n            } else {\r\n                // Regular texture\r\n                this.gl.texImage2D(this.target, this.level, this.internalFormat, this.format, this.type, this.image);\r\n            }\r\n\r\n            if (this.generateMipmaps) {\r\n                // For WebGL1, if not a power of 2, turn off mips, set wrapping to clamp to edge and minFilter to linear\r\n                if (!this.gl.renderer.isWebgl2 && (!isPowerOf2(this.image.width) || !isPowerOf2(this.image.height))) {\r\n                    this.generateMipmaps = false;\r\n                    this.wrapS = this.wrapT = this.gl.CLAMP_TO_EDGE;\r\n                    this.minFilter = this.gl.LINEAR;\r\n                } else {\r\n                    this.gl.generateMipmap(this.target);\r\n                }\r\n            }\r\n\r\n            // Callback for when data is pushed to GPU\r\n            this.onUpdate && this.onUpdate();\r\n        } else {\r\n            if (this.target === this.gl.TEXTURE_CUBE_MAP) {\r\n                // Upload empty pixel for each side while no image to avoid errors while image or video loading\r\n                for (let i = 0; i < 6; i++) {\r\n                    this.gl.texImage2D(\r\n                        this.gl.TEXTURE_CUBE_MAP_POSITIVE_X + i,\r\n                        0,\r\n                        this.gl.RGBA,\r\n                        1,\r\n                        1,\r\n                        0,\r\n                        this.gl.RGBA,\r\n                        this.gl.UNSIGNED_BYTE,\r\n                        emptyPixel\r\n                    );\r\n                }\r\n            } else if (this.width) {\r\n                // image intentionally left null for RenderTarget\r\n                this.gl.texImage2D(this.target, this.level, this.internalFormat, this.width, this.height, 0, this.format, this.type, null);\r\n            } else {\r\n                // Upload empty pixel if no image to avoid errors while image or video loading\r\n                this.gl.texImage2D(this.target, 0, this.gl.RGBA, 1, 1, 0, this.gl.RGBA, this.gl.UNSIGNED_BYTE, emptyPixel);\r\n            }\r\n        }\r\n        this.store.image = this.image;\r\n    }\r\n}\r\n","const EPSILON = 0.000001;\r\n\r\n/**\r\n * Copies the upper-left 3x3 values into the given mat3.\r\n *\r\n * @param {mat3} out the receiving 3x3 matrix\r\n * @param {mat4} a   the source 4x4 matrix\r\n * @returns {mat3} out\r\n */\r\nexport function fromMat4(out, a) {\r\n    out[0] = a[0];\r\n    out[1] = a[1];\r\n    out[2] = a[2];\r\n    out[3] = a[4];\r\n    out[4] = a[5];\r\n    out[5] = a[6];\r\n    out[6] = a[8];\r\n    out[7] = a[9];\r\n    out[8] = a[10];\r\n    return out;\r\n}\r\n\r\n/**\r\n * Calculates a 3x3 matrix from the given quaternion\r\n *\r\n * @param {mat3} out mat3 receiving operation result\r\n * @param {quat} q Quaternion to create matrix from\r\n *\r\n * @returns {mat3} out\r\n */\r\nexport function fromQuat(out, q) {\r\n    let x = q[0],\r\n        y = q[1],\r\n        z = q[2],\r\n        w = q[3];\r\n    let x2 = x + x;\r\n    let y2 = y + y;\r\n    let z2 = z + z;\r\n\r\n    let xx = x * x2;\r\n    let yx = y * x2;\r\n    let yy = y * y2;\r\n    let zx = z * x2;\r\n    let zy = z * y2;\r\n    let zz = z * z2;\r\n    let wx = w * x2;\r\n    let wy = w * y2;\r\n    let wz = w * z2;\r\n\r\n    out[0] = 1 - yy - zz;\r\n    out[3] = yx - wz;\r\n    out[6] = zx + wy;\r\n\r\n    out[1] = yx + wz;\r\n    out[4] = 1 - xx - zz;\r\n    out[7] = zy - wx;\r\n\r\n    out[2] = zx - wy;\r\n    out[5] = zy + wx;\r\n    out[8] = 1 - xx - yy;\r\n\r\n    return out;\r\n}\r\n\r\n/**\r\n * Copy the values from one mat3 to another\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat3} a the source matrix\r\n * @returns {mat3} out\r\n */\r\nexport function copy(out, a) {\r\n    out[0] = a[0];\r\n    out[1] = a[1];\r\n    out[2] = a[2];\r\n    out[3] = a[3];\r\n    out[4] = a[4];\r\n    out[5] = a[5];\r\n    out[6] = a[6];\r\n    out[7] = a[7];\r\n    out[8] = a[8];\r\n    return out;\r\n}\r\n\r\n/**\r\n * Set the components of a mat3 to the given values\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @returns {mat3} out\r\n */\r\nexport function set(out, m00, m01, m02, m10, m11, m12, m20, m21, m22) {\r\n    out[0] = m00;\r\n    out[1] = m01;\r\n    out[2] = m02;\r\n    out[3] = m10;\r\n    out[4] = m11;\r\n    out[5] = m12;\r\n    out[6] = m20;\r\n    out[7] = m21;\r\n    out[8] = m22;\r\n    return out;\r\n}\r\n\r\n/**\r\n * Set a mat3 to the identity matrix\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @returns {mat3} out\r\n */\r\nexport function identity(out) {\r\n    out[0] = 1;\r\n    out[1] = 0;\r\n    out[2] = 0;\r\n    out[3] = 0;\r\n    out[4] = 1;\r\n    out[5] = 0;\r\n    out[6] = 0;\r\n    out[7] = 0;\r\n    out[8] = 1;\r\n    return out;\r\n}\r\n\r\n/**\r\n * Transpose the values of a mat3\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat3} a the source matrix\r\n * @returns {mat3} out\r\n */\r\nexport function transpose(out, a) {\r\n    // If we are transposing ourselves we can skip a few steps but have to cache some values\r\n    if (out === a) {\r\n        let a01 = a[1],\r\n            a02 = a[2],\r\n            a12 = a[5];\r\n        out[1] = a[3];\r\n        out[2] = a[6];\r\n        out[3] = a01;\r\n        out[5] = a[7];\r\n        out[6] = a02;\r\n        out[7] = a12;\r\n    } else {\r\n        out[0] = a[0];\r\n        out[1] = a[3];\r\n        out[2] = a[6];\r\n        out[3] = a[1];\r\n        out[4] = a[4];\r\n        out[5] = a[7];\r\n        out[6] = a[2];\r\n        out[7] = a[5];\r\n        out[8] = a[8];\r\n    }\r\n\r\n    return out;\r\n}\r\n\r\n/**\r\n * Inverts a mat3\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat3} a the source matrix\r\n * @returns {mat3} out\r\n */\r\nexport function invert(out, a) {\r\n    let a00 = a[0],\r\n        a01 = a[1],\r\n        a02 = a[2];\r\n    let a10 = a[3],\r\n        a11 = a[4],\r\n        a12 = a[5];\r\n    let a20 = a[6],\r\n        a21 = a[7],\r\n        a22 = a[8];\r\n\r\n    let b01 = a22 * a11 - a12 * a21;\r\n    let b11 = -a22 * a10 + a12 * a20;\r\n    let b21 = a21 * a10 - a11 * a20;\r\n\r\n    // Calculate the determinant\r\n    let det = a00 * b01 + a01 * b11 + a02 * b21;\r\n\r\n    if (!det) {\r\n        return null;\r\n    }\r\n    det = 1.0 / det;\r\n\r\n    out[0] = b01 * det;\r\n    out[1] = (-a22 * a01 + a02 * a21) * det;\r\n    out[2] = (a12 * a01 - a02 * a11) * det;\r\n    out[3] = b11 * det;\r\n    out[4] = (a22 * a00 - a02 * a20) * det;\r\n    out[5] = (-a12 * a00 + a02 * a10) * det;\r\n    out[6] = b21 * det;\r\n    out[7] = (-a21 * a00 + a01 * a20) * det;\r\n    out[8] = (a11 * a00 - a01 * a10) * det;\r\n    return out;\r\n}\r\n\r\n/**\r\n * Calculates the determinant of a mat3\r\n *\r\n * @param {mat3} a the source matrix\r\n * @returns {Number} determinant of a\r\n */\r\nexport function determinant(a) {\r\n    let a00 = a[0],\r\n        a01 = a[1],\r\n        a02 = a[2];\r\n    let a10 = a[3],\r\n        a11 = a[4],\r\n        a12 = a[5];\r\n    let a20 = a[6],\r\n        a21 = a[7],\r\n        a22 = a[8];\r\n\r\n    return a00 * (a22 * a11 - a12 * a21) + a01 * (-a22 * a10 + a12 * a20) + a02 * (a21 * a10 - a11 * a20);\r\n}\r\n\r\n/**\r\n * Multiplies two mat3's\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat3} a the first operand\r\n * @param {mat3} b the second operand\r\n * @returns {mat3} out\r\n */\r\nexport function multiply(out, a, b) {\r\n    let a00 = a[0],\r\n        a01 = a[1],\r\n        a02 = a[2];\r\n    let a10 = a[3],\r\n        a11 = a[4],\r\n        a12 = a[5];\r\n    let a20 = a[6],\r\n        a21 = a[7],\r\n        a22 = a[8];\r\n\r\n    let b00 = b[0],\r\n        b01 = b[1],\r\n        b02 = b[2];\r\n    let b10 = b[3],\r\n        b11 = b[4],\r\n        b12 = b[5];\r\n    let b20 = b[6],\r\n        b21 = b[7],\r\n        b22 = b[8];\r\n\r\n    out[0] = b00 * a00 + b01 * a10 + b02 * a20;\r\n    out[1] = b00 * a01 + b01 * a11 + b02 * a21;\r\n    out[2] = b00 * a02 + b01 * a12 + b02 * a22;\r\n\r\n    out[3] = b10 * a00 + b11 * a10 + b12 * a20;\r\n    out[4] = b10 * a01 + b11 * a11 + b12 * a21;\r\n    out[5] = b10 * a02 + b11 * a12 + b12 * a22;\r\n\r\n    out[6] = b20 * a00 + b21 * a10 + b22 * a20;\r\n    out[7] = b20 * a01 + b21 * a11 + b22 * a21;\r\n    out[8] = b20 * a02 + b21 * a12 + b22 * a22;\r\n    return out;\r\n}\r\n\r\n/**\r\n * Translate a mat3 by the given vector\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat3} a the matrix to translate\r\n * @param {vec2} v vector to translate by\r\n * @returns {mat3} out\r\n */\r\nexport function translate(out, a, v) {\r\n    let a00 = a[0],\r\n        a01 = a[1],\r\n        a02 = a[2],\r\n        a10 = a[3],\r\n        a11 = a[4],\r\n        a12 = a[5],\r\n        a20 = a[6],\r\n        a21 = a[7],\r\n        a22 = a[8],\r\n        x = v[0],\r\n        y = v[1];\r\n\r\n    out[0] = a00;\r\n    out[1] = a01;\r\n    out[2] = a02;\r\n\r\n    out[3] = a10;\r\n    out[4] = a11;\r\n    out[5] = a12;\r\n\r\n    out[6] = x * a00 + y * a10 + a20;\r\n    out[7] = x * a01 + y * a11 + a21;\r\n    out[8] = x * a02 + y * a12 + a22;\r\n    return out;\r\n}\r\n\r\n/**\r\n * Rotates a mat3 by the given angle\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat3} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat3} out\r\n */\r\nexport function rotate(out, a, rad) {\r\n    let a00 = a[0],\r\n        a01 = a[1],\r\n        a02 = a[2],\r\n        a10 = a[3],\r\n        a11 = a[4],\r\n        a12 = a[5],\r\n        a20 = a[6],\r\n        a21 = a[7],\r\n        a22 = a[8],\r\n        s = Math.sin(rad),\r\n        c = Math.cos(rad);\r\n\r\n    out[0] = c * a00 + s * a10;\r\n    out[1] = c * a01 + s * a11;\r\n    out[2] = c * a02 + s * a12;\r\n\r\n    out[3] = c * a10 - s * a00;\r\n    out[4] = c * a11 - s * a01;\r\n    out[5] = c * a12 - s * a02;\r\n\r\n    out[6] = a20;\r\n    out[7] = a21;\r\n    out[8] = a22;\r\n    return out;\r\n}\r\n\r\n/**\r\n * Scales the mat3 by the dimensions in the given vec2\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat3} a the matrix to rotate\r\n * @param {vec2} v the vec2 to scale the matrix by\r\n * @returns {mat3} out\r\n **/\r\nexport function scale(out, a, v) {\r\n    let x = v[0],\r\n        y = v[1];\r\n\r\n    out[0] = x * a[0];\r\n    out[1] = x * a[1];\r\n    out[2] = x * a[2];\r\n\r\n    out[3] = y * a[3];\r\n    out[4] = y * a[4];\r\n    out[5] = y * a[5];\r\n\r\n    out[6] = a[6];\r\n    out[7] = a[7];\r\n    out[8] = a[8];\r\n    return out;\r\n}\r\n\r\n/**\r\n * Calculates a 3x3 normal matrix (transpose inverse) from the 4x4 matrix\r\n *\r\n * @param {mat3} out mat3 receiving operation result\r\n * @param {mat4} a Mat4 to derive the normal matrix from\r\n *\r\n * @returns {mat3} out\r\n */\r\nexport function normalFromMat4(out, a) {\r\n    let a00 = a[0],\r\n        a01 = a[1],\r\n        a02 = a[2],\r\n        a03 = a[3];\r\n    let a10 = a[4],\r\n        a11 = a[5],\r\n        a12 = a[6],\r\n        a13 = a[7];\r\n    let a20 = a[8],\r\n        a21 = a[9],\r\n        a22 = a[10],\r\n        a23 = a[11];\r\n    let a30 = a[12],\r\n        a31 = a[13],\r\n        a32 = a[14],\r\n        a33 = a[15];\r\n\r\n    let b00 = a00 * a11 - a01 * a10;\r\n    let b01 = a00 * a12 - a02 * a10;\r\n    let b02 = a00 * a13 - a03 * a10;\r\n    let b03 = a01 * a12 - a02 * a11;\r\n    let b04 = a01 * a13 - a03 * a11;\r\n    let b05 = a02 * a13 - a03 * a12;\r\n    let b06 = a20 * a31 - a21 * a30;\r\n    let b07 = a20 * a32 - a22 * a30;\r\n    let b08 = a20 * a33 - a23 * a30;\r\n    let b09 = a21 * a32 - a22 * a31;\r\n    let b10 = a21 * a33 - a23 * a31;\r\n    let b11 = a22 * a33 - a23 * a32;\r\n\r\n    // Calculate the determinant\r\n    let det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\r\n\r\n    if (!det) {\r\n        return null;\r\n    }\r\n    det = 1.0 / det;\r\n\r\n    out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\r\n    out[1] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\r\n    out[2] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\r\n\r\n    out[3] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\r\n    out[4] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\r\n    out[5] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\r\n\r\n    out[6] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\r\n    out[7] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\r\n    out[8] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\r\n\r\n    return out;\r\n}\r\n\r\n/**\r\n * Generates a 2D projection matrix with the given bounds\r\n *\r\n * @param {mat3} out mat3 frustum matrix will be written into\r\n * @param {number} width Width of your gl context\r\n * @param {number} height Height of gl context\r\n * @returns {mat3} out\r\n */\r\nexport function projection(out, width, height) {\r\n    out[0] = 2 / width;\r\n    out[1] = 0;\r\n    out[2] = 0;\r\n    out[3] = 0;\r\n    out[4] = -2 / height;\r\n    out[5] = 0;\r\n    out[6] = -1;\r\n    out[7] = 1;\r\n    out[8] = 1;\r\n    return out;\r\n}\r\n\r\n/**\r\n * Adds two mat3's\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat3} a the first operand\r\n * @param {mat3} b the second operand\r\n * @returns {mat3} out\r\n */\r\nexport function add(out, a, b) {\r\n    out[0] = a[0] + b[0];\r\n    out[1] = a[1] + b[1];\r\n    out[2] = a[2] + b[2];\r\n    out[3] = a[3] + b[3];\r\n    out[4] = a[4] + b[4];\r\n    out[5] = a[5] + b[5];\r\n    out[6] = a[6] + b[6];\r\n    out[7] = a[7] + b[7];\r\n    out[8] = a[8] + b[8];\r\n    return out;\r\n}\r\n\r\n/**\r\n * Subtracts matrix b from matrix a\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat3} a the first operand\r\n * @param {mat3} b the second operand\r\n * @returns {mat3} out\r\n */\r\nexport function subtract(out, a, b) {\r\n    out[0] = a[0] - b[0];\r\n    out[1] = a[1] - b[1];\r\n    out[2] = a[2] - b[2];\r\n    out[3] = a[3] - b[3];\r\n    out[4] = a[4] - b[4];\r\n    out[5] = a[5] - b[5];\r\n    out[6] = a[6] - b[6];\r\n    out[7] = a[7] - b[7];\r\n    out[8] = a[8] - b[8];\r\n    return out;\r\n}\r\n\r\n/**\r\n * Multiply each element of the matrix by a scalar.\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat3} a the matrix to scale\r\n * @param {Number} b amount to scale the matrix's elements by\r\n * @returns {mat3} out\r\n */\r\nexport function multiplyScalar(out, a, b) {\r\n    out[0] = a[0] * b;\r\n    out[1] = a[1] * b;\r\n    out[2] = a[2] * b;\r\n    out[3] = a[3] * b;\r\n    out[4] = a[4] * b;\r\n    out[5] = a[5] * b;\r\n    out[6] = a[6] * b;\r\n    out[7] = a[7] * b;\r\n    out[8] = a[8] * b;\r\n    return out;\r\n}\r\n","import * as Mat3Func from './functions/Mat3Func.js';\r\n\r\nexport class Mat3 extends Array {\r\n    constructor(m00 = 1, m01 = 0, m02 = 0, m10 = 0, m11 = 1, m12 = 0, m20 = 0, m21 = 0, m22 = 1) {\r\n        super(m00, m01, m02, m10, m11, m12, m20, m21, m22);\r\n        return this;\r\n    }\r\n\r\n    set(m00, m01, m02, m10, m11, m12, m20, m21, m22) {\r\n        if (m00.length) return this.copy(m00);\r\n        Mat3Func.set(this, m00, m01, m02, m10, m11, m12, m20, m21, m22);\r\n        return this;\r\n    }\r\n\r\n    translate(v, m = this) {\r\n        Mat3Func.translate(this, m, v);\r\n        return this;\r\n    }\r\n\r\n    rotate(v, m = this) {\r\n        Mat3Func.rotate(this, m, v);\r\n        return this;\r\n    }\r\n\r\n    scale(v, m = this) {\r\n        Mat3Func.scale(this, m, v);\r\n        return this;\r\n    }\r\n\r\n    multiply(ma, mb) {\r\n        if (mb) {\r\n            Mat3Func.multiply(this, ma, mb);\r\n        } else {\r\n            Mat3Func.multiply(this, this, ma);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    identity() {\r\n        Mat3Func.identity(this);\r\n        return this;\r\n    }\r\n\r\n    copy(m) {\r\n        Mat3Func.copy(this, m);\r\n        return this;\r\n    }\r\n\r\n    fromMatrix4(m) {\r\n        Mat3Func.fromMat4(this, m);\r\n        return this;\r\n    }\r\n\r\n    fromQuaternion(q) {\r\n        Mat3Func.fromQuat(this, q);\r\n        return this;\r\n    }\r\n\r\n    fromBasis(vec3a, vec3b, vec3c) {\r\n        this.set(vec3a[0], vec3a[1], vec3a[2], vec3b[0], vec3b[1], vec3b[2], vec3c[0], vec3c[1], vec3c[2]);\r\n        return this;\r\n    }\r\n\r\n    inverse(m = this) {\r\n        Mat3Func.invert(this, m);\r\n        return this;\r\n    }\r\n\r\n    getNormalMatrix(m) {\r\n        Mat3Func.normalFromMat4(this, m);\r\n        return this;\r\n    }\r\n}\r\n","import { Transform } from './Transform.js';\r\nimport { Mat3 } from '../math/Mat3.js';\r\nimport { Mat4 } from '../math/Mat4.js';\r\n\r\nlet ID = 0;\r\n\r\nexport class Mesh extends Transform {\r\n    constructor(gl, { geometry, program, mode = gl.TRIANGLES, frustumCulled = true, renderOrder = 0 } = {}) {\r\n        super();\r\n        if (!gl.canvas) console.error('gl not passed as first argument to Mesh');\r\n        this.gl = gl;\r\n        this.id = ID++;\r\n        this.geometry = geometry;\r\n        this.program = program;\r\n        this.mode = mode;\r\n\r\n        // Used to skip frustum culling\r\n        this.frustumCulled = frustumCulled;\r\n\r\n        // Override sorting to force an order\r\n        this.renderOrder = renderOrder;\r\n        this.modelViewMatrix = new Mat4();\r\n        this.normalMatrix = new Mat3();\r\n        this.beforeRenderCallbacks = [];\r\n        this.afterRenderCallbacks = [];\r\n    }\r\n\r\n    onBeforeRender(f) {\r\n        this.beforeRenderCallbacks.push(f);\r\n        return this;\r\n    }\r\n\r\n    onAfterRender(f) {\r\n        this.afterRenderCallbacks.push(f);\r\n        return this;\r\n    }\r\n\r\n    draw({ camera } = {}) {\r\n        this.beforeRenderCallbacks.forEach((f) => f && f({ mesh: this, camera }));\r\n        if (camera) {\r\n            // Add empty matrix uniforms to program if unset\r\n            if (!this.program.uniforms.modelMatrix) {\r\n                Object.assign(this.program.uniforms, {\r\n                    modelMatrix: { value: null },\r\n                    viewMatrix: { value: null },\r\n                    modelViewMatrix: { value: null },\r\n                    normalMatrix: { value: null },\r\n                    projectionMatrix: { value: null },\r\n                    cameraPosition: { value: null },\r\n                });\r\n            }\r\n\r\n            // Set the matrix uniforms\r\n            this.program.uniforms.projectionMatrix.value = camera.projectionMatrix;\r\n            this.program.uniforms.cameraPosition.value = camera.worldPosition;\r\n            this.program.uniforms.viewMatrix.value = camera.viewMatrix;\r\n            this.modelViewMatrix.multiply(camera.viewMatrix, this.worldMatrix);\r\n            this.normalMatrix.getNormalMatrix(this.modelViewMatrix);\r\n            this.program.uniforms.modelMatrix.value = this.worldMatrix;\r\n            this.program.uniforms.modelViewMatrix.value = this.modelViewMatrix;\r\n            this.program.uniforms.normalMatrix.value = this.normalMatrix;\r\n        }\r\n\r\n        // determine if faces need to be flipped - when mesh scaled negatively\r\n        let flipFaces = this.program.cullFace && this.worldMatrix.determinant() < 0;\r\n        this.program.use({ flipFaces });\r\n        this.geometry.draw({ mode: this.mode, program: this.program });\r\n        this.afterRenderCallbacks.forEach((f) => f && f({ mesh: this, camera }));\r\n    }\r\n}\r\n","// attribute params\r\n// {\r\n//     data - typed array eg UInt16Array for indices, Float32Array\r\n//     size - int default 1\r\n//     instanced - default null. Pass divisor amount\r\n//     type - gl enum default gl.UNSIGNED_SHORT for 'index', gl.FLOAT for others\r\n//     normalized - boolean default false\r\n\r\n//     buffer - gl buffer, if buffer exists, don't need to provide data\r\n//     stride - default 0 - for when passing in buffer\r\n//     offset - default 0 - for when passing in buffer\r\n//     count - default null - for when passing in buffer\r\n//     min - array - for when passing in buffer\r\n//     max - array - for when passing in buffer\r\n// }\r\n\r\n// TODO: fit in transform feedback\r\n// TODO: when would I disableVertexAttribArray ?\r\n// TODO: use offset/stride if exists\r\n\r\nimport { Vec3 } from '../math/Vec3.js';\r\n\r\nconst tempVec3 = new Vec3();\r\n\r\nlet ID = 1;\r\nlet ATTR_ID = 1;\r\n\r\n// To stop inifinite warnings\r\nlet isBoundsWarned = false;\r\n\r\nexport class Geometry {\r\n    constructor(gl, attributes = {}) {\r\n        if (!gl.canvas) console.error('gl not passed as first argument to Geometry');\r\n        this.gl = gl;\r\n        this.attributes = attributes;\r\n        this.id = ID++;\r\n\r\n        // Store one VAO per program attribute locations order\r\n        this.VAOs = {};\r\n\r\n        this.drawRange = { start: 0, count: 0 };\r\n        this.instancedCount = 0;\r\n\r\n        // Unbind current VAO so that new buffers don't get added to active mesh\r\n        this.gl.renderer.bindVertexArray(null);\r\n        this.gl.renderer.currentGeometry = null;\r\n\r\n        // Alias for state store to avoid redundant calls for global state\r\n        this.glState = this.gl.renderer.state;\r\n\r\n        // create the buffers\r\n        for (let key in attributes) {\r\n            this.addAttribute(key, attributes[key]);\r\n        }\r\n    }\r\n\r\n    addAttribute(key, attr) {\r\n        this.attributes[key] = attr;\r\n\r\n        // Set options\r\n        attr.id = ATTR_ID++; // TODO: currently unused, remove?\r\n        attr.size = attr.size || 1;\r\n        attr.type =\r\n            attr.type ||\r\n            (attr.data.constructor === Float32Array\r\n                ? this.gl.FLOAT\r\n                : attr.data.constructor === Uint16Array\r\n                ? this.gl.UNSIGNED_SHORT\r\n                : this.gl.UNSIGNED_INT); // Uint32Array\r\n        attr.target = key === 'index' ? this.gl.ELEMENT_ARRAY_BUFFER : this.gl.ARRAY_BUFFER;\r\n        attr.normalized = attr.normalized || false;\r\n        attr.stride = attr.stride || 0;\r\n        attr.offset = attr.offset || 0;\r\n        attr.count = attr.count || (attr.stride ? attr.data.byteLength / attr.stride : attr.data.length / attr.size);\r\n        attr.divisor = attr.instanced || 0;\r\n        attr.needsUpdate = false;\r\n\r\n        if (!attr.buffer) {\r\n            attr.buffer = this.gl.createBuffer();\r\n\r\n            // Push data to buffer\r\n            this.updateAttribute(attr);\r\n        }\r\n\r\n        // Update geometry counts. If indexed, ignore regular attributes\r\n        if (attr.divisor) {\r\n            this.isInstanced = true;\r\n            if (this.instancedCount && this.instancedCount !== attr.count * attr.divisor) {\r\n                console.warn('geometry has multiple instanced buffers of different length');\r\n                return (this.instancedCount = Math.min(this.instancedCount, attr.count * attr.divisor));\r\n            }\r\n            this.instancedCount = attr.count * attr.divisor;\r\n        } else if (key === 'index') {\r\n            this.drawRange.count = attr.count;\r\n        } else if (!this.attributes.index) {\r\n            this.drawRange.count = Math.max(this.drawRange.count, attr.count);\r\n        }\r\n    }\r\n\r\n    updateAttribute(attr) {\r\n        if (this.glState.boundBuffer !== attr.buffer) {\r\n            this.gl.bindBuffer(attr.target, attr.buffer);\r\n            this.glState.boundBuffer = attr.buffer;\r\n        }\r\n        this.gl.bufferData(attr.target, attr.data, this.gl.STATIC_DRAW);\r\n        attr.needsUpdate = false;\r\n    }\r\n\r\n    setIndex(value) {\r\n        this.addAttribute('index', value);\r\n    }\r\n\r\n    setDrawRange(start, count) {\r\n        this.drawRange.start = start;\r\n        this.drawRange.count = count;\r\n    }\r\n\r\n    setInstancedCount(value) {\r\n        this.instancedCount = value;\r\n    }\r\n\r\n    createVAO(program) {\r\n        this.VAOs[program.attributeOrder] = this.gl.renderer.createVertexArray();\r\n        this.gl.renderer.bindVertexArray(this.VAOs[program.attributeOrder]);\r\n        this.bindAttributes(program);\r\n    }\r\n\r\n    bindAttributes(program) {\r\n        // Link all attributes to program using gl.vertexAttribPointer\r\n        program.attributeLocations.forEach((location, { name, type }) => {\r\n            // If geometry missing a required shader attribute\r\n            if (!this.attributes[name]) {\r\n                console.warn(`active attribute ${name} not being supplied`);\r\n                return;\r\n            }\r\n\r\n            const attr = this.attributes[name];\r\n\r\n            this.gl.bindBuffer(attr.target, attr.buffer);\r\n            this.glState.boundBuffer = attr.buffer;\r\n\r\n            // For matrix attributes, buffer needs to be defined per column\r\n            let numLoc = 1;\r\n            if (type === 35674) numLoc = 2; // mat2\r\n            if (type === 35675) numLoc = 3; // mat3\r\n            if (type === 35676) numLoc = 4; // mat4\r\n\r\n            const size = attr.size / numLoc;\r\n            const stride = numLoc === 1 ? 0 : numLoc * numLoc * numLoc;\r\n            const offset = numLoc === 1 ? 0 : numLoc * numLoc;\r\n\r\n            for (let i = 0; i < numLoc; i++) {\r\n                this.gl.vertexAttribPointer(location + i, size, attr.type, attr.normalized, attr.stride + stride, attr.offset + i * offset);\r\n                this.gl.enableVertexAttribArray(location + i);\r\n\r\n                // For instanced attributes, divisor needs to be set.\r\n                // For firefox, need to set back to 0 if non-instanced drawn after instanced. Else won't render\r\n                this.gl.renderer.vertexAttribDivisor(location + i, attr.divisor);\r\n            }\r\n        });\r\n\r\n        // Bind indices if geometry indexed\r\n        if (this.attributes.index) this.gl.bindBuffer(this.gl.ELEMENT_ARRAY_BUFFER, this.attributes.index.buffer);\r\n    }\r\n\r\n    draw({ program, mode = this.gl.TRIANGLES }) {\r\n        if (this.gl.renderer.currentGeometry !== `${this.id}_${program.attributeOrder}`) {\r\n            if (!this.VAOs[program.attributeOrder]) this.createVAO(program);\r\n            this.gl.renderer.bindVertexArray(this.VAOs[program.attributeOrder]);\r\n            this.gl.renderer.currentGeometry = `${this.id}_${program.attributeOrder}`;\r\n        }\r\n\r\n        // Check if any attributes need updating\r\n        program.attributeLocations.forEach((location, { name }) => {\r\n            const attr = this.attributes[name];\r\n            if (attr.needsUpdate) this.updateAttribute(attr);\r\n        });\r\n\r\n        if (this.isInstanced) {\r\n            if (this.attributes.index) {\r\n                this.gl.renderer.drawElementsInstanced(\r\n                    mode,\r\n                    this.drawRange.count,\r\n                    this.attributes.index.type,\r\n                    this.attributes.index.offset + this.drawRange.start * 2,\r\n                    this.instancedCount\r\n                );\r\n            } else {\r\n                this.gl.renderer.drawArraysInstanced(mode, this.drawRange.start, this.drawRange.count, this.instancedCount);\r\n            }\r\n        } else {\r\n            if (this.attributes.index) {\r\n                this.gl.drawElements(mode, this.drawRange.count, this.attributes.index.type, this.attributes.index.offset + this.drawRange.start * 2);\r\n            } else {\r\n                this.gl.drawArrays(mode, this.drawRange.start, this.drawRange.count);\r\n            }\r\n        }\r\n    }\r\n\r\n    getPositionArray() {\r\n        // Use position buffer, or min/max if available\r\n        const attr = this.attributes.position;\r\n        // if (attr.min) return [...attr.min, ...attr.max];\r\n        if (attr.data) return attr.data;\r\n        if (isBoundsWarned) return;\r\n        console.warn('No position buffer data found to compute bounds');\r\n        return (isBoundsWarned = true);\r\n    }\r\n\r\n    computeBoundingBox(array) {\r\n        if (!array) array = this.getPositionArray();\r\n\r\n        if (!this.bounds) {\r\n            this.bounds = {\r\n                min: new Vec3(),\r\n                max: new Vec3(),\r\n                center: new Vec3(),\r\n                scale: new Vec3(),\r\n                radius: Infinity,\r\n            };\r\n        }\r\n\r\n        const min = this.bounds.min;\r\n        const max = this.bounds.max;\r\n        const center = this.bounds.center;\r\n        const scale = this.bounds.scale;\r\n\r\n        min.set(+Infinity);\r\n        max.set(-Infinity);\r\n\r\n        // TODO: use offset/stride if exists\r\n        // TODO: check size of position (eg triangle with Vec2)\r\n        for (let i = 0, l = array.length; i < l; i += 3) {\r\n            const x = array[i];\r\n            const y = array[i + 1];\r\n            const z = array[i + 2];\r\n\r\n            min.x = Math.min(x, min.x);\r\n            min.y = Math.min(y, min.y);\r\n            min.z = Math.min(z, min.z);\r\n\r\n            max.x = Math.max(x, max.x);\r\n            max.y = Math.max(y, max.y);\r\n            max.z = Math.max(z, max.z);\r\n        }\r\n\r\n        scale.sub(max, min);\r\n        center.add(min, max).divide(2);\r\n    }\r\n\r\n    computeBoundingSphere(array) {\r\n        if (!array) array = this.getPositionArray();\r\n        if (!this.bounds) this.computeBoundingBox(array);\r\n\r\n        let maxRadiusSq = 0;\r\n        for (let i = 0, l = array.length; i < l; i += 3) {\r\n            tempVec3.fromArray(array, i);\r\n            maxRadiusSq = Math.max(maxRadiusSq, this.bounds.center.squaredDistance(tempVec3));\r\n        }\r\n\r\n        this.bounds.radius = Math.sqrt(maxRadiusSq);\r\n    }\r\n\r\n    remove() {\r\n        if (this.vao) this.gl.renderer.deleteVertexArray(this.vao);\r\n        for (let key in this.attributes) {\r\n            this.gl.deleteBuffer(this.attributes[key].buffer);\r\n            delete this.attributes[key];\r\n        }\r\n    }\r\n}\r\n","import { Geometry } from '../core/Geometry.js';\r\n\r\nexport class Plane extends Geometry {\r\n    constructor(gl, { width = 1, height = 1, widthSegments = 1, heightSegments = 1, attributes = {} } = {}) {\r\n        const wSegs = widthSegments;\r\n        const hSegs = heightSegments;\r\n\r\n        // Determine length of arrays\r\n        const num = (wSegs + 1) * (hSegs + 1);\r\n        const numIndices = wSegs * hSegs * 6;\r\n\r\n        // Generate empty arrays once\r\n        const position = new Float32Array(num * 3);\r\n        const normal = new Float32Array(num * 3);\r\n        const uv = new Float32Array(num * 2);\r\n        const index = num > 65536 ? new Uint32Array(numIndices) : new Uint16Array(numIndices);\r\n\r\n        Plane.buildPlane(position, normal, uv, index, width, height, 0, wSegs, hSegs);\r\n\r\n        Object.assign(attributes, {\r\n            position: { size: 3, data: position },\r\n            normal: { size: 3, data: normal },\r\n            uv: { size: 2, data: uv },\r\n            index: { data: index },\r\n        });\r\n\r\n        super(gl, attributes);\r\n    }\r\n\r\n    static buildPlane(position, normal, uv, index, width, height, depth, wSegs, hSegs, u = 0, v = 1, w = 2, uDir = 1, vDir = -1, i = 0, ii = 0) {\r\n        const io = i;\r\n        const segW = width / wSegs;\r\n        const segH = height / hSegs;\r\n\r\n        for (let iy = 0; iy <= hSegs; iy++) {\r\n            let y = iy * segH - height / 2;\r\n            for (let ix = 0; ix <= wSegs; ix++, i++) {\r\n                let x = ix * segW - width / 2;\r\n\r\n                position[i * 3 + u] = x * uDir;\r\n                position[i * 3 + v] = y * vDir;\r\n                position[i * 3 + w] = depth / 2;\r\n\r\n                normal[i * 3 + u] = 0;\r\n                normal[i * 3 + v] = 0;\r\n                normal[i * 3 + w] = depth >= 0 ? 1 : -1;\r\n\r\n                uv[i * 2] = ix / wSegs;\r\n                uv[i * 2 + 1] = 1 - iy / hSegs;\r\n\r\n                if (iy === hSegs || ix === wSegs) continue;\r\n                let a = io + ix + iy * (wSegs + 1);\r\n                let b = io + ix + (iy + 1) * (wSegs + 1);\r\n                let c = io + ix + (iy + 1) * (wSegs + 1) + 1;\r\n                let d = io + ix + iy * (wSegs + 1) + 1;\r\n\r\n                index[ii * 6] = a;\r\n                index[ii * 6 + 1] = b;\r\n                index[ii * 6 + 2] = d;\r\n                index[ii * 6 + 3] = b;\r\n                index[ii * 6 + 4] = c;\r\n                index[ii * 6 + 5] = d;\r\n                ii++;\r\n            }\r\n        }\r\n    }\r\n}\r\n","// TODO: upload empty texture if null ? maybe not\r\n// TODO: upload identity matrix if null ?\r\n// TODO: sampler Cube\r\n\r\nlet ID = 1;\r\n\r\n// cache of typed arrays used to flatten uniform arrays\r\nconst arrayCacheF32 = {};\r\n\r\nexport class Program {\r\n    constructor(\r\n        gl,\r\n        {\r\n            vertex,\r\n            fragment,\r\n            uniforms = {},\r\n\r\n            transparent = false,\r\n            cullFace = gl.BACK,\r\n            frontFace = gl.CCW,\r\n            depthTest = true,\r\n            depthWrite = true,\r\n            depthFunc = gl.LESS,\r\n        } = {}\r\n    ) {\r\n        if (!gl.canvas) console.error('gl not passed as fist argument to Program');\r\n        this.gl = gl;\r\n        this.uniforms = uniforms;\r\n        this.id = ID++;\r\n\r\n        if (!vertex) console.warn('vertex shader not supplied');\r\n        if (!fragment) console.warn('fragment shader not supplied');\r\n\r\n        // Store program state\r\n        this.transparent = transparent;\r\n        this.cullFace = cullFace;\r\n        this.frontFace = frontFace;\r\n        this.depthTest = depthTest;\r\n        this.depthWrite = depthWrite;\r\n        this.depthFunc = depthFunc;\r\n        this.blendFunc = {};\r\n        this.blendEquation = {};\r\n\r\n        // set default blendFunc if transparent flagged\r\n        if (this.transparent && !this.blendFunc.src) {\r\n            if (this.gl.renderer.premultipliedAlpha) this.setBlendFunc(this.gl.ONE, this.gl.ONE_MINUS_SRC_ALPHA);\r\n            else this.setBlendFunc(this.gl.SRC_ALPHA, this.gl.ONE_MINUS_SRC_ALPHA);\r\n        }\r\n\r\n        // compile vertex shader and log errors\r\n        const vertexShader = gl.createShader(gl.VERTEX_SHADER);\r\n        gl.shaderSource(vertexShader, vertex);\r\n        gl.compileShader(vertexShader);\r\n        if (gl.getShaderInfoLog(vertexShader) !== '') {\r\n            console.warn(`${gl.getShaderInfoLog(vertexShader)}\\nVertex Shader\\n${addLineNumbers(vertex)}`);\r\n        }\r\n\r\n        // compile fragment shader and log errors\r\n        const fragmentShader = gl.createShader(gl.FRAGMENT_SHADER);\r\n        gl.shaderSource(fragmentShader, fragment);\r\n        gl.compileShader(fragmentShader);\r\n        if (gl.getShaderInfoLog(fragmentShader) !== '') {\r\n            console.warn(`${gl.getShaderInfoLog(fragmentShader)}\\nFragment Shader\\n${addLineNumbers(fragment)}`);\r\n        }\r\n\r\n        // compile program and log errors\r\n        this.program = gl.createProgram();\r\n        gl.attachShader(this.program, vertexShader);\r\n        gl.attachShader(this.program, fragmentShader);\r\n        gl.linkProgram(this.program);\r\n        if (!gl.getProgramParameter(this.program, gl.LINK_STATUS)) {\r\n            return console.warn(gl.getProgramInfoLog(this.program));\r\n        }\r\n\r\n        // Remove shader once linked\r\n        gl.deleteShader(vertexShader);\r\n        gl.deleteShader(fragmentShader);\r\n\r\n        // Get active uniform locations\r\n        this.uniformLocations = new Map();\r\n        let numUniforms = gl.getProgramParameter(this.program, gl.ACTIVE_UNIFORMS);\r\n        for (let uIndex = 0; uIndex < numUniforms; uIndex++) {\r\n            let uniform = gl.getActiveUniform(this.program, uIndex);\r\n            this.uniformLocations.set(uniform, gl.getUniformLocation(this.program, uniform.name));\r\n\r\n            // split uniforms' names to separate array and struct declarations\r\n            const split = uniform.name.match(/(\\w+)/g);\r\n\r\n            uniform.uniformName = split[0];\r\n\r\n            if (split.length === 3) {\r\n                uniform.isStructArray = true;\r\n                uniform.structIndex = Number(split[1]);\r\n                uniform.structProperty = split[2];\r\n            } else if (split.length === 2 && isNaN(Number(split[1]))) {\r\n                uniform.isStruct = true;\r\n                uniform.structProperty = split[1];\r\n            }\r\n        }\r\n\r\n        // Get active attribute locations\r\n        this.attributeLocations = new Map();\r\n        const locations = [];\r\n        const numAttribs = gl.getProgramParameter(this.program, gl.ACTIVE_ATTRIBUTES);\r\n        for (let aIndex = 0; aIndex < numAttribs; aIndex++) {\r\n            const attribute = gl.getActiveAttrib(this.program, aIndex);\r\n            const location = gl.getAttribLocation(this.program, attribute.name);\r\n            locations[location] = attribute.name;\r\n            this.attributeLocations.set(attribute, location);\r\n        }\r\n        this.attributeOrder = locations.join('');\r\n    }\r\n\r\n    setBlendFunc(src, dst, srcAlpha, dstAlpha) {\r\n        this.blendFunc.src = src;\r\n        this.blendFunc.dst = dst;\r\n        this.blendFunc.srcAlpha = srcAlpha;\r\n        this.blendFunc.dstAlpha = dstAlpha;\r\n        if (src) this.transparent = true;\r\n    }\r\n\r\n    setBlendEquation(modeRGB, modeAlpha) {\r\n        this.blendEquation.modeRGB = modeRGB;\r\n        this.blendEquation.modeAlpha = modeAlpha;\r\n    }\r\n\r\n    applyState() {\r\n        if (this.depthTest) this.gl.renderer.enable(this.gl.DEPTH_TEST);\r\n        else this.gl.renderer.disable(this.gl.DEPTH_TEST);\r\n\r\n        if (this.cullFace) this.gl.renderer.enable(this.gl.CULL_FACE);\r\n        else this.gl.renderer.disable(this.gl.CULL_FACE);\r\n\r\n        if (this.blendFunc.src) this.gl.renderer.enable(this.gl.BLEND);\r\n        else this.gl.renderer.disable(this.gl.BLEND);\r\n\r\n        if (this.cullFace) this.gl.renderer.setCullFace(this.cullFace);\r\n        this.gl.renderer.setFrontFace(this.frontFace);\r\n        this.gl.renderer.setDepthMask(this.depthWrite);\r\n        this.gl.renderer.setDepthFunc(this.depthFunc);\r\n        if (this.blendFunc.src)\r\n            this.gl.renderer.setBlendFunc(this.blendFunc.src, this.blendFunc.dst, this.blendFunc.srcAlpha, this.blendFunc.dstAlpha);\r\n        this.gl.renderer.setBlendEquation(this.blendEquation.modeRGB, this.blendEquation.modeAlpha);\r\n    }\r\n\r\n    use({ flipFaces = false } = {}) {\r\n        let textureUnit = -1;\r\n        const programActive = this.gl.renderer.currentProgram === this.id;\r\n\r\n        // Avoid gl call if program already in use\r\n        if (!programActive) {\r\n            this.gl.useProgram(this.program);\r\n            this.gl.renderer.currentProgram = this.id;\r\n        }\r\n\r\n        // Set only the active uniforms found in the shader\r\n        this.uniformLocations.forEach((location, activeUniform) => {\r\n            let name = activeUniform.uniformName;\r\n\r\n            // get supplied uniform\r\n            let uniform = this.uniforms[name];\r\n\r\n            // For structs, get the specific property instead of the entire object\r\n            if (activeUniform.isStruct) {\r\n                uniform = uniform[activeUniform.structProperty];\r\n                name += `.${activeUniform.structProperty}`;\r\n            }\r\n            if (activeUniform.isStructArray) {\r\n                uniform = uniform[activeUniform.structIndex][activeUniform.structProperty];\r\n                name += `[${activeUniform.structIndex}].${activeUniform.structProperty}`;\r\n            }\r\n\r\n            if (!uniform) {\r\n                return warn(`Active uniform ${name} has not been supplied`);\r\n            }\r\n\r\n            if (uniform && uniform.value === undefined) {\r\n                return warn(`${name} uniform is missing a value parameter`);\r\n            }\r\n\r\n            if (uniform.value.texture) {\r\n                textureUnit = textureUnit + 1;\r\n\r\n                // Check if texture needs to be updated\r\n                uniform.value.update(textureUnit);\r\n                return setUniform(this.gl, activeUniform.type, location, textureUnit);\r\n            }\r\n\r\n            // For texture arrays, set uniform as an array of texture units instead of just one\r\n            if (uniform.value.length && uniform.value[0].texture) {\r\n                const textureUnits = [];\r\n                uniform.value.forEach((value) => {\r\n                    textureUnit = textureUnit + 1;\r\n                    value.update(textureUnit);\r\n                    textureUnits.push(textureUnit);\r\n                });\r\n\r\n                return setUniform(this.gl, activeUniform.type, location, textureUnits);\r\n            }\r\n\r\n            setUniform(this.gl, activeUniform.type, location, uniform.value);\r\n        });\r\n\r\n        this.applyState();\r\n        if (flipFaces) this.gl.renderer.setFrontFace(this.frontFace === this.gl.CCW ? this.gl.CW : this.gl.CCW);\r\n    }\r\n\r\n    remove() {\r\n        this.gl.deleteProgram(this.program);\r\n    }\r\n}\r\n\r\nfunction setUniform(gl, type, location, value) {\r\n    value = value.length ? flatten(value) : value;\r\n    const setValue = gl.renderer.state.uniformLocations.get(location);\r\n\r\n    // Avoid redundant uniform commands\r\n    if (value.length) {\r\n        if (setValue === undefined || setValue.length !== value.length) {\r\n            // clone array to store as cache\r\n            gl.renderer.state.uniformLocations.set(location, value.slice(0));\r\n        } else {\r\n            if (arraysEqual(setValue, value)) return;\r\n\r\n            // Update cached array values\r\n            setValue.set ? setValue.set(value) : setArray(setValue, value);\r\n            gl.renderer.state.uniformLocations.set(location, setValue);\r\n        }\r\n    } else {\r\n        if (setValue === value) return;\r\n        gl.renderer.state.uniformLocations.set(location, value);\r\n    }\r\n\r\n    switch (type) {\r\n        case 5126:\r\n            return value.length ? gl.uniform1fv(location, value) : gl.uniform1f(location, value); // FLOAT\r\n        case 35664:\r\n            return gl.uniform2fv(location, value); // FLOAT_VEC2\r\n        case 35665:\r\n            return gl.uniform3fv(location, value); // FLOAT_VEC3\r\n        case 35666:\r\n            return gl.uniform4fv(location, value); // FLOAT_VEC4\r\n        case 35670: // BOOL\r\n        case 5124: // INT\r\n        case 35678: // SAMPLER_2D\r\n        case 35680:\r\n            return value.length ? gl.uniform1iv(location, value) : gl.uniform1i(location, value); // SAMPLER_CUBE\r\n        case 35671: // BOOL_VEC2\r\n        case 35667:\r\n            return gl.uniform2iv(location, value); // INT_VEC2\r\n        case 35672: // BOOL_VEC3\r\n        case 35668:\r\n            return gl.uniform3iv(location, value); // INT_VEC3\r\n        case 35673: // BOOL_VEC4\r\n        case 35669:\r\n            return gl.uniform4iv(location, value); // INT_VEC4\r\n        case 35674:\r\n            return gl.uniformMatrix2fv(location, false, value); // FLOAT_MAT2\r\n        case 35675:\r\n            return gl.uniformMatrix3fv(location, false, value); // FLOAT_MAT3\r\n        case 35676:\r\n            return gl.uniformMatrix4fv(location, false, value); // FLOAT_MAT4\r\n    }\r\n}\r\n\r\nfunction addLineNumbers(string) {\r\n    let lines = string.split('\\n');\r\n    for (let i = 0; i < lines.length; i++) {\r\n        lines[i] = i + 1 + ': ' + lines[i];\r\n    }\r\n    return lines.join('\\n');\r\n}\r\n\r\nfunction flatten(a) {\r\n    const arrayLen = a.length;\r\n    const valueLen = a[0].length;\r\n    if (valueLen === undefined) return a;\r\n    const length = arrayLen * valueLen;\r\n    let value = arrayCacheF32[length];\r\n    if (!value) arrayCacheF32[length] = value = new Float32Array(length);\r\n    for (let i = 0; i < arrayLen; i++) value.set(a[i], i * valueLen);\r\n    return value;\r\n}\r\n\r\nfunction arraysEqual(a, b) {\r\n    if (a.length !== b.length) return false;\r\n    for (let i = 0, l = a.length; i < l; i++) {\r\n        if (a[i] !== b[i]) return false;\r\n    }\r\n    return true;\r\n}\r\n\r\nfunction setArray(a, b) {\r\n    for (let i = 0, l = a.length; i < l; i++) {\r\n        a[i] = b[i];\r\n    }\r\n}\r\n\r\nlet warnCount = 0;\r\nfunction warn(message) {\r\n    if (warnCount > 100) return;\r\n    console.warn(message);\r\n    warnCount++;\r\n    if (warnCount > 100) console.warn('More than 100 program warnings - stopping logs.');\r\n}\r\n","module.exports=\"precision highp float;\\n#define GLSLIFY 1\\n\\nattribute vec3 position;\\nattribute vec2 uv;\\n\\nuniform float _Aspect;\\nuniform float _Scale;\\nuniform vec2 _ViewportPos;\\n\\nvarying vec2 vUv;\\n\\nvoid main() {\\n\\n    vec3 localPos = position;\\n    localPos.x /= _Aspect;\\n    localPos *= _Scale;\\n    vec2 finalPos = _ViewportPos + localPos.xy;\\n\\n    vUv = uv;\\n\\n    gl_Position = vec4(finalPos.xy, 0.0, 1.0);\\n\\n}\";","module.exports=\"precision highp float;\\n#define GLSLIFY 1\\n\\nuniform sampler2D _Texture;\\n\\nvarying vec2 vUv;\\n\\nvoid main() {\\n\\n    vec4 col = texture2D(_Texture, vUv);\\n\\n    gl_FragColor = col;\\n\\n}\";","import { Texture } from \"../../../vendor/ogl/src/core/Texture\";\r\n\r\nconst { Mesh } = require(\"../../../vendor/ogl/src/core/Mesh\");\r\nconst { Plane } = require(\"../../../vendor/ogl/src/extras/Plane\");\r\nconst { Program } = require(\"../../../vendor/ogl/src/core/Program\");\r\n\r\nconst vertex = require('./shader/quad.vert');\r\nconst fragment = require('./shader/quad.frag');\r\nconst { Vec2 } = require(\"../../../vendor/ogl/src/math/Vec2\");\r\n\r\nexport class DisplayQuad extends Mesh {\r\n\r\n    constructor(gl, {\r\n        scale,\r\n        aspect,\r\n        position\r\n    }) {\r\n\r\n        super(gl);\r\n\r\n        this.gl = gl;\r\n\r\n        this.geometry = new Plane(this.gl, {\r\n            width: 1.0,\r\n            height: 1.0,\r\n        });\r\n\r\n        const uniforms = {\r\n\r\n            _Texture: {\r\n\r\n                value: new Texture(this.gl)\r\n\r\n            },\r\n            _Aspect: {\r\n                value: window.innerWidth/window.innerHeight\r\n            },\r\n            _Scale: {\r\n                value: scale\r\n            },\r\n            _ViewportPos: {\r\n                value: position\r\n            }\r\n\r\n        }\r\n\r\n        this.program = new Program(this.gl, {\r\n            vertex,\r\n            fragment,\r\n            uniforms,\r\n            depthTest: false,\r\n            depthWrite: false\r\n        });\r\n\r\n    }\r\n\r\n    get Texture() {\r\n        return this.program.uniforms._Texture.value;\r\n    }\r\n\r\n    set Texture(t) {\r\n        this.program.uniforms._Texture.value = t;\r\n    }\r\n\r\n}","// export const params = {\r\n\r\n//     PHYSICS: {\r\n\r\n//         // STIFFNESS: 0.35,\r\n//         STIFFNESS: 0.4,\r\n//        // STIFFNESS: 0.2,\r\n//         MAX_BOUNDS: 2.0,\r\n//         TIMESTEP: 0.0016,\r\n//         // CLAMP: 0.03,\r\n//         CLAMP: 0.001,\r\n//         // CLAMP: 0.0,\r\n//         STEPS: 1\r\n//     },\r\n\r\n//     CLOTH: {\r\n\r\n//         SIZE: 128\r\n\r\n//     },\r\n\r\n//     NOISE: {\r\n\r\n//         SPATIAL_FREQ: 10.9,\r\n//         TEMPORAL_FREQ: 0.1,\r\n//         AMP:0.01,\r\n\r\n//     },\r\n\r\n//     SHADOW: {\r\n//         SIZE: 1024 * 2.0,\r\n//         // BIAS: 0.005\r\n//         BIAS: 0.01\r\n//     }\r\n\r\n// }\r\n\r\nexport const params = {\r\n\r\n    PHYSICS: {\r\n\r\n        // STIFFNESS: 0.38,\r\n        //  STIFFNESS: 0.07,\r\n\r\n        STIFFNESS: 0.25,\r\n        MAX_BOUNDS: 2.0,\r\n        TIMESTEP: 0.0016,\r\n        // CLAMP: 0.03,\r\n        // CLAMP: (1/128.0) * 0.5,\r\n        CLAMP: 0.045,\r\n        // CLAMP: 0.0,\r\n        STEPS: 4\r\n    },\r\n\r\n    CLOTH: {\r\n\r\n        SIZE: 128\r\n\r\n    },\r\n\r\n    NOISE: {\r\n\r\n        SPATIAL_FREQ: 10.9,\r\n        TEMPORAL_FREQ: 0.1,\r\n        AMP:0.1,\r\n\r\n    },\r\n\r\n    SHADOW: {\r\n        SIZE: 1024 * 2.0,\r\n        // BIAS: 0.005\r\n        BIAS: 0.01\r\n    }\r\n\r\n}","// TODO: multi target rendering\r\n// TODO: test stencil and depth\r\n// TODO: destroy\r\n// TODO: blit on resize?\r\nimport { Texture } from './Texture.js';\r\n\r\nexport class RenderTarget {\r\n    constructor(\r\n        gl,\r\n        {\r\n            width = gl.canvas.width,\r\n            height = gl.canvas.height,\r\n            target = gl.FRAMEBUFFER,\r\n            color = 1, // number of color attachments\r\n            depth = true,\r\n            stencil = false,\r\n            depthTexture = false, // note - stencil breaks\r\n            wrapS = gl.CLAMP_TO_EDGE,\r\n            wrapT = gl.CLAMP_TO_EDGE,\r\n            minFilter = gl.LINEAR,\r\n            magFilter = minFilter,\r\n            type = gl.UNSIGNED_BYTE,\r\n            format = gl.RGBA,\r\n            internalFormat = format,\r\n            unpackAlignment,\r\n            premultiplyAlpha,\r\n        } = {}\r\n    ) {\r\n        this.gl = gl;\r\n        this.width = width;\r\n        this.height = height;\r\n        this.depth = depth;\r\n        this.buffer = this.gl.createFramebuffer();\r\n        this.target = target;\r\n        this.gl.bindFramebuffer(this.target, this.buffer);\r\n\r\n        this.textures = [];\r\n        const drawBuffers = [];\r\n\r\n        // create and attach required num of color textures\r\n        for (let i = 0; i < color; i++) {\r\n            this.textures.push(\r\n                new Texture(gl, {\r\n                    width,\r\n                    height,\r\n                    wrapS,\r\n                    wrapT,\r\n                    minFilter,\r\n                    magFilter,\r\n                    type,\r\n                    format,\r\n                    internalFormat,\r\n                    unpackAlignment,\r\n                    premultiplyAlpha,\r\n                    flipY: false,\r\n                    generateMipmaps: false,\r\n                })\r\n            );\r\n            this.textures[i].update();\r\n            this.gl.framebufferTexture2D(this.target, this.gl.COLOR_ATTACHMENT0 + i, this.gl.TEXTURE_2D, this.textures[i].texture, 0 /* level */);\r\n            drawBuffers.push(this.gl.COLOR_ATTACHMENT0 + i);\r\n        }\r\n\r\n        // For multi-render targets shader access\r\n        if (drawBuffers.length > 1) this.gl.renderer.drawBuffers(drawBuffers);\r\n\r\n        // alias for majority of use cases\r\n        this.texture = this.textures[0];\r\n\r\n        // note depth textures break stencil - so can't use together\r\n        if (depthTexture && (this.gl.renderer.isWebgl2 || this.gl.renderer.getExtension('WEBGL_depth_texture'))) {\r\n            this.depthTexture = new Texture(gl, {\r\n                width,\r\n                height,\r\n                minFilter: this.gl.NEAREST,\r\n                magFilter: this.gl.NEAREST,\r\n                format: this.gl.DEPTH_COMPONENT,\r\n                internalFormat: gl.renderer.isWebgl2 ? this.gl.DEPTH_COMPONENT16 : this.gl.DEPTH_COMPONENT,\r\n                type: this.gl.UNSIGNED_INT,\r\n            });\r\n            this.depthTexture.update();\r\n            this.gl.framebufferTexture2D(this.target, this.gl.DEPTH_ATTACHMENT, this.gl.TEXTURE_2D, this.depthTexture.texture, 0 /* level */);\r\n        } else {\r\n            // Render buffers\r\n            if (depth && !stencil) {\r\n                this.depthBuffer = this.gl.createRenderbuffer();\r\n                this.gl.bindRenderbuffer(this.gl.RENDERBUFFER, this.depthBuffer);\r\n                this.gl.renderbufferStorage(this.gl.RENDERBUFFER, this.gl.DEPTH_COMPONENT16, width, height);\r\n                this.gl.framebufferRenderbuffer(this.target, this.gl.DEPTH_ATTACHMENT, this.gl.RENDERBUFFER, this.depthBuffer);\r\n            }\r\n\r\n            if (stencil && !depth) {\r\n                this.stencilBuffer = this.gl.createRenderbuffer();\r\n                this.gl.bindRenderbuffer(this.gl.RENDERBUFFER, this.stencilBuffer);\r\n                this.gl.renderbufferStorage(this.gl.RENDERBUFFER, this.gl.STENCIL_INDEX8, width, height);\r\n                this.gl.framebufferRenderbuffer(this.target, this.gl.STENCIL_ATTACHMENT, this.gl.RENDERBUFFER, this.stencilBuffer);\r\n            }\r\n\r\n            if (depth && stencil) {\r\n                this.depthStencilBuffer = this.gl.createRenderbuffer();\r\n                this.gl.bindRenderbuffer(this.gl.RENDERBUFFER, this.depthStencilBuffer);\r\n                this.gl.renderbufferStorage(this.gl.RENDERBUFFER, this.gl.DEPTH_STENCIL, width, height);\r\n                this.gl.framebufferRenderbuffer(this.target, this.gl.DEPTH_STENCIL_ATTACHMENT, this.gl.RENDERBUFFER, this.depthStencilBuffer);\r\n            }\r\n        }\r\n\r\n        this.gl.bindFramebuffer(this.target, null);\r\n    }\r\n}\r\n","import { Geometry } from '../core/Geometry.js';\r\n\r\nexport class Triangle extends Geometry {\r\n    constructor(gl, { attributes = {} } = {}) {\r\n        Object.assign(attributes, {\r\n            position: { size: 2, data: new Float32Array([-1, -1, 3, -1, -1, 3]) },\r\n            uv: { size: 2, data: new Float32Array([0, 0, 2, 0, 0, 2]) },\r\n        });\r\n\r\n        super(gl, attributes);\r\n    }\r\n}\r\n","import { Program } from '../core/Program.js';\r\nimport { Mesh } from '../core/Mesh.js';\r\nimport { Texture } from '../core/Texture.js';\r\nimport { RenderTarget } from '../core/RenderTarget.js';\r\nimport { Triangle } from './Triangle.js';\r\n\r\nexport class GPGPU {\r\n    constructor(\r\n        gl,\r\n        {\r\n            // Always pass in array of vec4s (RGBA values within texture)\r\n            data = new Float32Array(16),\r\n            geometry = new Triangle(gl),\r\n            type, // Pass in gl.FLOAT to force it, defaults to gl.HALF_FLOAT,\r\n            filtering = gl.NEAREST\r\n        }\r\n    ) {\r\n        this.gl = gl;\r\n        const initialData = data;\r\n        this.passes = [];\r\n        this.geometry = geometry;\r\n        this.dataLength = initialData.length / 4;\r\n\r\n        // Windows and iOS only like power of 2 textures\r\n        // Find smallest PO2 that fits data\r\n        this.size = Math.pow(2, Math.ceil(Math.log(Math.ceil(Math.sqrt(this.dataLength))) / Math.LN2));\r\n\r\n        // Create coords for output texture\r\n        this.coords = new Float32Array(this.dataLength * 2);\r\n        for (let i = 0; i < this.dataLength; i++) {\r\n            const x = (i % this.size) / this.size; // to add 0.5 to be center pixel ?\r\n            const y = Math.floor(i / this.size) / this.size;\r\n            this.coords.set([x, y], i * 2);\r\n        }\r\n\r\n        // Use original data if already correct length of PO2 texture, else copy to new array of correct length\r\n        const floatArray = (() => {\r\n            if (initialData.length === this.size * this.size * 4) {\r\n                return initialData;\r\n            } else {\r\n                const a = new Float32Array(this.size * this.size * 4);\r\n                a.set(initialData);\r\n                return a;\r\n            }\r\n        })();\r\n\r\n        // Create output texture uniform using input float texture with initial data\r\n        this.uniform = {\r\n            value: new Texture(gl, {\r\n                image: floatArray,\r\n                target: gl.TEXTURE_2D,\r\n                type: gl.FLOAT,\r\n                format: gl.RGBA,\r\n                internalFormat: gl.renderer.isWebgl2 ? gl.RGBA32F : gl.RGBA,\r\n                wrapS: gl.CLAMP_TO_EDGE,\r\n                wrapT: gl.CLAMP_TO_EDGE,\r\n                generateMipmaps: false,\r\n                minFilter: gl.NEAREST,\r\n                magFilter: gl.NEAREST,\r\n                width: this.size,\r\n                flipY: false,\r\n            }),\r\n        };\r\n\r\n        // Create FBOs\r\n        const options = {\r\n            width: this.size,\r\n            height: this.size,\r\n            type: type || gl.HALF_FLOAT || gl.renderer.extensions['OES_texture_half_float'].HALF_FLOAT_OES,\r\n            format: gl.RGBA,\r\n            internalFormat: gl.renderer.isWebgl2 ? (type === gl.FLOAT ? gl.RGBA32F : gl.RGBA16F) : gl.RGBA,\r\n            minFilter: filtering,\r\n            depth: false,\r\n            unpackAlignment: 1,\r\n        };\r\n\r\n        this.fbo = {\r\n            read: new RenderTarget(gl, options),\r\n            write: new RenderTarget(gl, options),\r\n            swap: () => {\r\n                let temp = this.fbo.read;\r\n                this.fbo.read = this.fbo.write;\r\n                this.fbo.write = temp;\r\n                this.uniform.value = this.fbo.read.texture;\r\n            },\r\n        };\r\n    }\r\n\r\n    addPass({ vertex = defaultVertex, fragment = defaultFragment, uniforms = {}, textureUniform = 'tMap', enabled = true } = {}) {\r\n        uniforms[textureUniform] = this.uniform;\r\n        const program = new Program(this.gl, { vertex, fragment, uniforms });\r\n        const mesh = new Mesh(this.gl, { geometry: this.geometry, program });\r\n\r\n        const pass = {\r\n            mesh,\r\n            program,\r\n            uniforms,\r\n            enabled,\r\n            textureUniform,\r\n        };\r\n\r\n        this.passes.push(pass);\r\n        return pass;\r\n    }\r\n\r\n    render() {\r\n        const enabledPasses = this.passes.filter((pass) => pass.enabled);\r\n\r\n        enabledPasses.forEach((pass, i) => {\r\n            this.gl.renderer.render({\r\n                scene: pass.mesh,\r\n                target: this.fbo.write,\r\n                clear: false,\r\n            });\r\n            this.fbo.swap();\r\n        });\r\n    }\r\n}\r\n\r\nconst defaultVertex = /* glsl */ `\r\n    attribute vec2 uv;\r\n    attribute vec2 position;\r\n\r\n    varying vec2 vUv;\r\n\r\n    void main() {\r\n        vUv = uv;\r\n        gl_Position = vec4(position, 0, 1);\r\n    }\r\n`;\r\n\r\nconst defaultFragment = /* glsl */ `\r\n    precision highp float;\r\n\r\n    uniform sampler2D tMap;\r\n    varying vec2 vUv;\r\n\r\n    void main() {\r\n        gl_FragColor = texture2D(tMap, vUv);\r\n    }\r\n`;\r\n","module.exports=\"precision highp float;\\n#define GLSLIFY 1\\n\\nuniform sampler2D _Positions;\\nuniform float _Size;\\n\\nvarying vec2 vUv;\\n\\nvoid main() {\\n\\n    gl_FragColor = texture2D(_Positions,vUv);\\n\\n}\";","module.exports=\"precision highp float;\\n#define GLSLIFY 1\\n\\nuniform sampler2D _Positions;\\nuniform float _Size;\\n\\nvarying vec2 vUv;\\n\\nvoid main() {\\n\\n    gl_FragColor = texture2D(_Positions,vUv);\\n\\n}\";","module.exports=\"precision highp float;\\n#define GLSLIFY 1\\n\\nuniform sampler2D tMap;\\nuniform sampler2D _PrevPos;\\nuniform sampler2D _Normal;\\nuniform vec3 _Force;\\nuniform float _Time;\\n\\nuniform bool _IsInteracting;\\nuniform vec3 _InputWorldPos;\\nuniform float _Corner;\\nuniform float _Size;\\n\\nvarying vec2 vUv;\\n\\n#define INERTIA 0.9997\\n// #define INERTIA 0.998\\n// #define INERTIA 0.9995\\n// #define INERTIA 0.997\\n// #define INERTIA 0.9998\\n#define timestepSq 0.016*0.016\\n#define EPS 0.00001\\n\\n//\\n// Description : Array and textureless GLSL 2D/3D/4D simplex \\n//               noise functions.\\n//      Author : Ian McEwan, Ashima Arts.\\n//  Maintainer : stegu\\n//     Lastmod : 20110822 (ijm)\\n//     License : Copyright (C) 2011 Ashima Arts. All rights reserved.\\n//               Distributed under the MIT License. See LICENSE file.\\n//               https://github.com/ashima/webgl-noise\\n//               https://github.com/stegu/webgl-noise\\n// \\n\\nvec3 mod289(vec3 x) {\\n  return x - floor(x * (1.0 / 289.0)) * 289.0;\\n}\\n\\nvec4 mod289(vec4 x) {\\n  return x - floor(x * (1.0 / 289.0)) * 289.0;\\n}\\n\\nvec4 permute(vec4 x) {\\n     return mod289(((x*34.0)+1.0)*x);\\n}\\n\\nvec4 taylorInvSqrt(vec4 r)\\n{\\n  return 1.79284291400159 - 0.85373472095314 * r;\\n}\\n\\nfloat snoise(vec3 v)\\n  { \\n  const vec2  C = vec2(1.0/6.0, 1.0/3.0) ;\\n  const vec4  D = vec4(0.0, 0.5, 1.0, 2.0);\\n\\n// First corner\\n  vec3 i  = floor(v + dot(v, C.yyy) );\\n  vec3 x0 =   v - i + dot(i, C.xxx) ;\\n\\n// Other corners\\n  vec3 g = step(x0.yzx, x0.xyz);\\n  vec3 l = 1.0 - g;\\n  vec3 i1 = min( g.xyz, l.zxy );\\n  vec3 i2 = max( g.xyz, l.zxy );\\n\\n  //   x0 = x0 - 0.0 + 0.0 * C.xxx;\\n  //   x1 = x0 - i1  + 1.0 * C.xxx;\\n  //   x2 = x0 - i2  + 2.0 * C.xxx;\\n  //   x3 = x0 - 1.0 + 3.0 * C.xxx;\\n  vec3 x1 = x0 - i1 + C.xxx;\\n  vec3 x2 = x0 - i2 + C.yyy; // 2.0*C.x = 1/3 = C.y\\n  vec3 x3 = x0 - D.yyy;      // -1.0+3.0*C.x = -0.5 = -D.y\\n\\n// Permutations\\n  i = mod289(i); \\n  vec4 p = permute( permute( permute( \\n             i.z + vec4(0.0, i1.z, i2.z, 1.0 ))\\n           + i.y + vec4(0.0, i1.y, i2.y, 1.0 )) \\n           + i.x + vec4(0.0, i1.x, i2.x, 1.0 ));\\n\\n// Gradients: 7x7 points over a square, mapped onto an octahedron.\\n// The ring size 17*17 = 289 is close to a multiple of 49 (49*6 = 294)\\n  float n_ = 0.142857142857; // 1.0/7.0\\n  vec3  ns = n_ * D.wyz - D.xzx;\\n\\n  vec4 j = p - 49.0 * floor(p * ns.z * ns.z);  //  mod(p,7*7)\\n\\n  vec4 x_ = floor(j * ns.z);\\n  vec4 y_ = floor(j - 7.0 * x_ );    // mod(j,N)\\n\\n  vec4 x = x_ *ns.x + ns.yyyy;\\n  vec4 y = y_ *ns.x + ns.yyyy;\\n  vec4 h = 1.0 - abs(x) - abs(y);\\n\\n  vec4 b0 = vec4( x.xy, y.xy );\\n  vec4 b1 = vec4( x.zw, y.zw );\\n\\n  //vec4 s0 = vec4(lessThan(b0,0.0))*2.0 - 1.0;\\n  //vec4 s1 = vec4(lessThan(b1,0.0))*2.0 - 1.0;\\n  vec4 s0 = floor(b0)*2.0 + 1.0;\\n  vec4 s1 = floor(b1)*2.0 + 1.0;\\n  vec4 sh = -step(h, vec4(0.0));\\n\\n  vec4 a0 = b0.xzyw + s0.xzyw*sh.xxyy ;\\n  vec4 a1 = b1.xzyw + s1.xzyw*sh.zzww ;\\n\\n  vec3 p0 = vec3(a0.xy,h.x);\\n  vec3 p1 = vec3(a0.zw,h.y);\\n  vec3 p2 = vec3(a1.xy,h.z);\\n  vec3 p3 = vec3(a1.zw,h.w);\\n\\n//Normalise gradients\\n  vec4 norm = taylorInvSqrt(vec4(dot(p0,p0), dot(p1,p1), dot(p2, p2), dot(p3,p3)));\\n  p0 *= norm.x;\\n  p1 *= norm.y;\\n  p2 *= norm.z;\\n  p3 *= norm.w;\\n\\n// Mix final noise value\\n  vec4 m = max(0.6 - vec4(dot(x0,x0), dot(x1,x1), dot(x2,x2), dot(x3,x3)), 0.0);\\n  m = m * m;\\n  return 42.0 * dot( m*m, vec4( dot(p0,x0), dot(p1,x1), \\n                                dot(p2,x2), dot(p3,x3) ) );\\n  }\\n\\nvec3 snoiseVec3( vec3 x ){\\n\\n  float s  = snoise(vec3( x ));\\n  float s1 = snoise(vec3( x.y - 19.1 , x.z + 33.4 , x.x + 47.2 ));\\n  float s2 = snoise(vec3( x.z + 74.2 , x.x - 124.5 , x.y + 99.4 ));\\n  vec3 c = vec3( s , s1 , s2 );\\n  return c;\\n\\n}\\n\\nvec3 curlNoise( vec3 p ){\\n  \\n  const float e = .1;\\n  vec3 dx = vec3( e   , 0.0 , 0.0 );\\n  vec3 dy = vec3( 0.0 , e   , 0.0 );\\n  vec3 dz = vec3( 0.0 , 0.0 , e   );\\n\\n  vec3 p_x0 = snoiseVec3( p - dx );\\n  vec3 p_x1 = snoiseVec3( p + dx );\\n  vec3 p_y0 = snoiseVec3( p - dy );\\n  vec3 p_y1 = snoiseVec3( p + dy );\\n  vec3 p_z0 = snoiseVec3( p - dz );\\n  vec3 p_z1 = snoiseVec3( p + dz );\\n\\n  float x = p_y1.z - p_y0.z - p_z1.y + p_z0.y;\\n  float y = p_z1.x - p_z0.x - p_x1.z + p_x0.z;\\n  float z = p_x1.y - p_x0.y - p_y1.x + p_y0.x;\\n\\n  const float divisor = 1.0 / ( 2.0 * e );\\n  return normalize( vec3( x , y , z ) * divisor );\\n\\n}\\n\\nvec2 getCenterTexel(vec2 coord, vec2 offset) {\\n\\n    return (floor((coord+offset) * (_Size-EPS)) + 0.5) / _Size;\\n\\n}\\n\\nvoid main() {\\n    \\n\\n    vec4 currentPos = texture2D(tMap, vUv);\\n    vec3 prevPos = texture2D(_PrevPos, vUv).xyz;\\n    vec3 delta = INERTIA * (currentPos.xyz-prevPos);\\n\\n    vec3 acc = vec3(0.0);\\n\\n    vec3 normal = texture2D(_Normal, vUv).xyz;\\n\\n    vec3 curlNoiseForce = curlNoise((currentPos.xyz *0.4237) + (_Time * 0.14)) * 0.5245;\\n    curlNoiseForce = normal * dot(normal, curlNoiseForce);\\n\\n    if(_IsInteracting && currentPos.w == _Corner) {\\n\\n            vec3 delta = _InputWorldPos - currentPos.xyz;\\n            currentPos.xyz += delta * 0.1 * smoothstep(0.0, 2.0, dot(delta, delta));\\n\\n    } else {\\n        \\n        acc += curlNoiseForce;\\n        acc += (vec3(0.0) - currentPos.xyz) * 0.01;\\n    }\\n\\n    acc *= timestepSq;\\n    delta += acc;\\n    currentPos.xyz += delta;\\n\\n    gl_FragColor = currentPos;\\n\\n}\";","module.exports=\"precision highp float;\\n#define GLSLIFY 1\\n\\nuniform sampler2D tMap;\\nuniform sampler2D _Position;\\nuniform float _Size;\\n\\nvarying vec2 vUv;\\n\\n#define EPS 0.001\\n\\nvoid main() {\\n\\n    vec2 uv = vUv;\\n\\n    vec2 texelSize = vec2(1.0/_Size);\\n    vec2 index = floor(vUv * _Size);\\n\\n    vec3 pos = texture2D(_Position, vUv).xyz;\\n    vec3 rNeighbour = texture2D(_Position, vUv + vec2(texelSize.x, 0.0)).xyz;\\n    vec3 lNeighbour = texture2D(_Position, vUv + vec2(-texelSize.x, 0.0)).xyz;\\n    vec3 tNeighbour = texture2D(_Position, vUv + vec2(0.0, texelSize.y)).xyz;\\n    vec3 bNeighbour = texture2D(_Position, vUv + vec2(0.0, -texelSize.y)).xyz;\\n\\n    vec3 tangent = vec3(1.0,0.0,0.0);\\n    vec3 biNormal = vec3(0.0,1.0,0.0);\\n    vec3 normal = vec3(0.0);\\n\\n    vec3 tangentA = vec3(0.0);\\n    vec3 tangentB = vec3(0.0);\\n\\n    vec3 biNormalA = vec3(0.0);\\n    vec3 biNormalB = vec3(0.0);\\n\\n    if(index.x < (_Size - 1.0)) tangentA = rNeighbour - pos;\\n    if(index.x >= (_Size - 1.0)) tangentA = pos - lNeighbour;\\n\\n    if(index.x > 0.0) tangentB = lNeighbour - pos;\\n    if(index.x <= 0.0) tangentB = pos - rNeighbour;\\n\\n    tangentA = pos + normalize(tangentA) * EPS;\\n    tangentB = pos + normalize(tangentB) *EPS;\\n\\n    tangent = normalize(tangentA - tangentB);\\n\\n    if(index.y < (_Size - 1.0)) biNormalA = tNeighbour - pos;\\n    if(index.y >= (_Size - 1.0)) biNormalA = pos - bNeighbour;\\n    \\n    if(index.y > 0.0) biNormalB = bNeighbour - pos;\\n    if(index.y <= 0.0) biNormalB = pos - tNeighbour;\\n\\n    biNormalA = pos + normalize(biNormalA) * EPS;\\n    biNormalB = pos + normalize(biNormalB) *EPS;\\n\\n    biNormal = normalize(biNormalA - biNormalB);\\n\\n    normal = normalize(cross(biNormal,tangent));\\n    \\n\\n    gl_FragColor = vec4(normal, 1.0);\\n\\n}\";","module.exports=\"precision highp float;\\n#define GLSLIFY 1\\n\\nuniform sampler2D tMap;\\nuniform sampler2D _InitPos;\\n// uniform sampler2D _VHOffset;\\nuniform float _Size;\\n\\nvarying vec2 vUv;\\n\\nvoid main() {\\n\\n    vec2 texelSize = vec2(1.0/_Size);\\n\\n    vec3 initPos = texture2D(_InitPos, vUv).xyz;\\n    // vec4 vhOffsets = texture2D(_VHOffset, vUv);\\n\\n    float size = _Size;\\n    vec2 index = floor(vUv * size); //HAVE TO READ UP ON NEAREST FILTERING\\n\\n    vec3 rNeighbour = texture2D(_InitPos, (vUv + vec2(texelSize.x, 0.0))).xyz;\\n    vec3 lNeighbour = texture2D(_InitPos, (vUv + vec2(-texelSize.x, 0.0))).xyz;\\n    vec3 tNeighbour = texture2D(_InitPos, (vUv + vec2(0.0, texelSize.y))).xyz;\\n    vec3 bNeighbour = texture2D(_InitPos, (vUv + vec2(0.0, -texelSize.y))).xyz;\\n\\n    float rDist = 0.0;\\n    float lDist = 0.0;\\n    float tDist = 0.0;\\n    float bDist = 0.0;\\n\\n    if(index.x < (size - 1.0)) {\\n        rDist = length(rNeighbour - initPos );\\n    }\\n    if(index.x > 0.5) {\\n        lDist = length(lNeighbour - initPos );\\n    }\\n    if(index.y < (size - 1.0)) {\\n        tDist = length(tNeighbour - initPos );\\n    }  \\n    if(index.y > 0.5) {\\n        bDist = length(bNeighbour - initPos );\\n    }\\n    \\n\\n    gl_FragColor = vec4(rDist, lDist, tDist, bDist);\\n    \\n}\";","module.exports=\"precision highp float;\\n#define GLSLIFY 1\\n\\nuniform sampler2D tMap;\\nuniform sampler2D _InitPos;\\nuniform float _Size;\\n\\nvarying vec2 vUv;\\n\\nvec2 getTexCoord(float i) {\\n\\n    float x = mod(i, _Size);\\n    float y = floor(i / _Size);\\n\\n    return vec2(x,y) / (_Size -1.0);\\n\\n}\\n\\nvoid main() {\\n\\n    vec2 texelSize = vec2(1.0/_Size);\\n\\n    vec3 initPos = texture2D(_InitPos, vUv).xyz;\\n\\n    vec3 tRNeighbour = texture2D(_InitPos, (vUv + vec2(texelSize.x, texelSize.y))).xyz;\\n    vec3 tLNeighbour = texture2D(_InitPos, (vUv + vec2(-texelSize.x, texelSize.y))).xyz;\\n    vec3 bRNeighbour = texture2D(_InitPos, (vUv + vec2(texelSize.x, -texelSize.y))).xyz;\\n    vec3 bLNeighbour = texture2D(_InitPos, (vUv + vec2(-texelSize.x, -texelSize.y))).xyz;\\n\\n    float tlDist = 0.0;\\n    float trDist = 0.0;\\n    float brDist = 0.0;\\n    float blDist = 0.0;\\n\\n    float size = _Size;\\n    vec2 index = floor(vUv * size);\\n\\n    bool isTl = index.x < (size- 1.0) && index.y > 0.5; \\n    bool isTr = index.x > 0.5 && index.y > 0.5;\\n\\n    bool isBL = index.x < (size - 1.0) && index.y < (size - 1.0);    \\n    bool isBr = index.x > 0.5 && index.y < (size-1.0);\\n\\n    if(isBL) {\\n        trDist = length(tRNeighbour - initPos );\\n    } \\n    if(isBr) {\\n        tlDist = length(tLNeighbour - initPos );\\n    }\\n    if(isTl) {\\n        brDist = length(bRNeighbour - initPos );\\n    }\\n    if(isTr) {\\n        blDist = length(bLNeighbour - initPos );\\n    }  \\n     \\n\\n    gl_FragColor = vec4(trDist, tlDist, brDist, blDist);\\n    \\n}\";","module.exports=\"precision highp float;\\n#define GLSLIFY 1\\n\\nuniform sampler2D tMap;\\n\\nuniform sampler2D _RestLengthVH;\\nuniform sampler2D _RestLengthDiagonal;\\n// uniform sampler2D _RestengthTLTR;\\n// uniform sampler2D _RestlenghBLBR;\\n\\nuniform float _Size;\\nuniform vec2 _TexelSize;\\n\\nuniform float _Clamp;\\nuniform float _Stiffness;\\n\\nvarying vec2 vUv;\\n\\n#define RESTLENGTH 0.01\\n\\nvec3 applyConstrain(vec3 a, vec3 b, float restLength) {\\n\\n    vec3 delta = b - a;\\n    float dist = max(_Clamp, length(delta));\\n    float percentage = (dist-restLength) / (dist);\\n    return delta * percentage * _Stiffness;\\n}\\n\\n// vec3 applyConstrain(vec3 a, vec3 b, float restLength) {\\n\\n//     vec3 delta = b - a;\\n//     float dist = length(delta);\\n//     // float percentage = (dist-restLength) / (dist);\\n//     float percentage = (dist-restLength);\\n//     return ((percentage * delta * _Stiffness) / dist);\\n// }\\n\\nvoid main() {\\n\\n    vec2 texelSize = vec2(1.0/_Size);\\n\\n    vec4 pos = texture2D(tMap, vUv);\\n\\n    vec2 index = floor(vUv * _Size);\\n\\n    //x = right\\n    //y = left\\n    //z = top\\n    //w = bottom\\n    vec4 restLengthVH = texture2D(_RestLengthVH, vUv);\\n\\n    //x = top right\\n    //y = top left\\n    //z = bottom right\\n    //w = bottom left\\n    vec4 restLengthDiagonal = texture2D(_RestLengthDiagonal, vUv);\\n\\n    vec3 lNeighbour = texture2D(tMap, vUv + vec2(-texelSize.x, 0.0)).xyz;\\n    vec3 rNeighbour = texture2D(tMap, vUv + vec2(texelSize.x, 0.0)).xyz;\\n    vec3 tNeighbour = texture2D(tMap, vUv + vec2(0.0, texelSize.y)).xyz;\\n    vec3 bNeighbour = texture2D(tMap, vUv + vec2(0.0, -texelSize.y)).xyz;\\n\\n    vec3 tRNeighbour = texture2D(tMap, (vUv + vec2(texelSize.x, texelSize.y))).xyz;\\n    vec3 tLNeighbour = texture2D(tMap, (vUv + vec2(-texelSize.x, texelSize.y))).xyz;\\n    vec3 bRNeighbour = texture2D(tMap, (vUv + vec2(texelSize.x, -texelSize.y))).xyz;\\n    vec3 bLNeighbour = texture2D(tMap, (vUv + vec2(-texelSize.x, -texelSize.y))).xyz;\\n\\n    vec3 constrain = vec3(0.0);\\n\\n    if(index.x < (_Size - 1.0)) constrain += applyConstrain(pos.xyz, rNeighbour, restLengthVH.x);\\n    if(index.x > 0.5) constrain += applyConstrain(pos.xyz, lNeighbour,restLengthVH.y);\\n    if(index.y < (_Size - 1.0)) constrain += applyConstrain(pos.xyz, tNeighbour,restLengthVH.z);\\n    if(index.y > 0.5) constrain += applyConstrain(pos.xyz, bNeighbour, restLengthVH.w);\\n\\n    bool isTl = (index.x < _Size- 1.0) && index.y > 0.5; \\n    bool isTr = index.x > 0.5 && index.y > 0.5;\\n\\n    bool isBL = (index.x < _Size - 1.0) && index.y < (_Size - 1.0);    \\n    bool isBr = index.x > 0.5 && index.y < (_Size-1.0);\\n\\n    if(isBL) constrain += applyConstrain(pos.xyz, tRNeighbour,restLengthDiagonal.x);\\n    if(isTl) constrain += applyConstrain(pos.xyz, bRNeighbour, restLengthDiagonal.z);\\n    if(isBr) constrain += applyConstrain(pos.xyz, tLNeighbour, restLengthDiagonal.y);\\n    if(isTr) constrain += applyConstrain(pos.xyz, bLNeighbour,restLengthDiagonal.w);\\n\\n    constrain /= 8.0;\\n    pos.xyz += constrain;\\n\\n    gl_FragColor = pos;\\n\\n}\";","module.exports=\"precision highp float;\\n#define GLSLIFY 1\\n\\nuniform sampler2D tMap;\\n\\nuniform sampler2D _RestLengthVH;\\nuniform sampler2D _RestLengthDiagonal;\\n// uniform sampler2D _RestengthTLTR;\\n// uniform sampler2D _RestlenghBLBR;\\n\\nuniform float _Size;\\nuniform vec2 _TexelSize;\\n\\nuniform float _Clamp;\\nuniform float _Stiffness;\\n\\nvarying vec2 vUv;\\n\\n#define RESTLENGTH 0.01\\n\\nvec3 applyConstrain(vec3 a, vec3 b, float restLength) {\\n\\n    vec3 delta = b - a;\\n    float dist = length(delta);\\n    if(dist <= _Clamp) dist = _Clamp;\\n    float percentage = (dist-restLength) / (dist);\\n    return delta * percentage * _Stiffness;\\n\\n}\\n\\nvoid main() {\\n\\n    vec4 pos = texture2D(tMap, vUv);\\n\\n    vec2 index = floor(vUv * _Size);\\n\\n    //x = right\\n    //y = left\\n    //z = top\\n    //w = bottom\\n    vec4 restLengthVH = texture2D(_RestLengthVH, vUv);\\n\\n    //x = top right\\n    //y = top left\\n    //z = bottom right\\n    //w = bottom left\\n    vec4 restLengthDiagonal = texture2D(_RestLengthDiagonal, vUv);\\n\\n    // vec3 lNeighbour = texture2D(tMap, vUv + vec2(-_TexelSize.x, 0.0)).xyz;\\n    // vec3 rNeighbour = texture2D(tMap, vUv + vec2(_TexelSize.x, 0.0)).xyz;\\n    // vec3 tNeighbour = texture2D(tMap, vUv + vec2(0.0, _TexelSize.y)).xyz;\\n    // vec3 bNeighbour = texture2D(tMap, vUv + vec2(0.0, -_TexelSize.y)).xyz;\\n\\n    vec3 tRNeighbour = texture2D(tMap, (vUv + vec2(_TexelSize.x, _TexelSize.y))).xyz;\\n    vec3 tLNeighbour = texture2D(tMap, (vUv + vec2(-_TexelSize.x, _TexelSize.y))).xyz;\\n    vec3 bRNeighbour = texture2D(tMap, (vUv + vec2(_TexelSize.x, -_TexelSize.y))).xyz;\\n    vec3 bLNeighbour = texture2D(tMap, (vUv + vec2(-_TexelSize.x, -_TexelSize.y))).xyz;\\n\\n    vec3 constrain = vec3(0.0);\\n\\n    // if(index.x < _Size - 1.0) constrain += applyConstrain(pos.xyz, rNeighbour, restLengthVH.x);\\n    // if(index.x > 0.0) constrain += applyConstrain(pos.xyz, lNeighbour,restLengthVH.y);\\n    // if(index.y < _Size - 1.0) constrain += applyConstrain(pos.xyz, tNeighbour,restLengthVH.z) ;\\n    // if(index.y > 0.0) constrain += applyConstrain(pos.xyz, bNeighbour, restLengthVH.w);\\n\\n    bool isTl = (index.x < _Size- 1.0) && index.y > 0.0; \\n    bool isTr = index.x > 0.0 && index.y > 0.0;\\n\\n    bool isBL = (index.x < _Size - 1.0) && index.y < (_Size - 1.0);    \\n    bool isBr = index.x > 0.0 && index.y < (_Size-1.0);\\n\\n    if(isBL) constrain += applyConstrain(pos.xyz, tRNeighbour,restLengthDiagonal.x)*.25;\\n    if(isTl) constrain += applyConstrain(pos.xyz, bRNeighbour, restLengthDiagonal.z)*.25;\\n    if(isBr) constrain += applyConstrain(pos.xyz, tLNeighbour, restLengthDiagonal.y)*.25;\\n    if(isTr) constrain += applyConstrain(pos.xyz, bLNeighbour,restLengthDiagonal.w)*.25;\\n\\n    pos.xyz += constrain;\\n\\n    gl_FragColor = pos;\\n\\n}\";","module.exports=\"precision highp float;\\n#define GLSLIFY 1\\n\\nuniform sampler2D tMap;\\n// uniform sampler2D _VHOffsets;\\n\\nuniform vec2 _TexelSize;\\nuniform float _Flip;\\nuniform sampler2D _RestLength;\\nuniform float _Stiffness;\\nuniform float _Clamp;\\nuniform float _Size;\\n\\nvarying vec2 vUv;\\n\\nvec3 constrain(vec3 a, vec3 b, float restLength) {\\n\\n    vec3 delta = b - a;\\n    float dist = max(restLength, length(delta));\\n    float percentage = (dist-restLength) / (dist);\\n    return delta * percentage * _Stiffness;\\n\\n}\\n\\nvec2 getCenterTexel(vec2 coord, vec2 offset) {\\n\\n    return ((floor(coord * _Size) + 0.5) / (_Size)) + offset;\\n\\n}\\n\\n//inspired by:\\n//https://pdfs.semanticscholar.org/4718/6dcbbc8ccc01c6f4143719d09ed5ab4395fb.pdf?_ga=2.107277378.1544954547.1603025794-293436447.1603025794\\n\\nvoid main() {\\n\\n    // vec4 pos = texture2D(tMap, getCenterTexel(vUv, vec2(0.0)));\\n    vec4 pos = texture2D(tMap, (vUv));\\n    \\n    //r = right\\n    //g = left\\n    //b = top\\n    //w = bottom\\n    vec2 restLength = texture2D(_RestLength, vUv).xy;\\n    vec3 displacement = vec3(0.0, 0.0, 0.0);\\n\\n    vec2 texelSize = vec2(1.0/_Size);\\n\\n    //floor uv coordinate to get integer representation\\n    //so we know which particle to go towards\\n    float floorCoord = floor(vUv.x * _Size);\\n    float modFloorCoord = mod(floorCoord, 2.0);\\n    bool constrainA = modFloorCoord == mix(0.0, 1.0, _Flip) && floorCoord < (_Size - 1.0);\\n    bool constrainB = modFloorCoord == mix(1.0, 0.0, _Flip) && floorCoord > 0.5;\\n    \\n    vec3 x1 = texture2D(tMap, vUv + vec2(texelSize.x, 0.0)).xyz;\\n    vec3 x2 = texture2D(tMap, vUv + vec2(-texelSize.x, 0.0)).xyz;\\n\\n    if(constrainA) displacement = constrain(pos.xyz, x1, restLength.x);\\n    if(constrainB) displacement = constrain(pos.xyz, x2, restLength.y);\\n    // displacement = mix(constrain(pos.xyz, x1, restLength.x), constrain(pos.xyz, x2, restLength.y), _Flip);\\n\\n    pos.xyz += displacement;\\n\\n    gl_FragColor = pos;\\n\\n}\";","module.exports=\"precision highp float;\\n#define GLSLIFY 1\\n\\nuniform sampler2D tMap;\\n// uniform sampler2D _VHOffsets;\\n\\nuniform vec2 _TexelSize;\\nuniform float _Flip;\\nuniform sampler2D _RestLength;\\nuniform float _Stiffness;\\nuniform float _Clamp;\\nuniform float _Size;\\n\\nvarying vec2 vUv;\\n\\nvec3 constrain(vec3 a, vec3 b, float restLength) {\\n\\n    vec3 delta = b - a;\\n    float dist = max(restLength, length(delta));\\n    float percentage = (dist-restLength) / (dist);\\n    return delta * percentage * _Stiffness;\\n\\n}\\n\\nvec2 getCenterTexel(vec2 coord, vec2 offset) {\\n\\n    return ((floor(coord * _Size) + 0.5) / (_Size)) + offset;\\n\\n}\\n\\n//inspired by:\\n//https://pdfs.semanticscholar.org/4718/6dcbbc8ccc01c6f4143719d09ed5ab4395fb.pdf?_ga=2.107277378.1544954547.1603025794-293436447.1603025794\\n\\nvoid main() {\\n\\n    // vec4 pos = texture2D(tMap, getCenterTexel(vUv, vec2(0.0)));\\n    vec4 pos = texture2D(tMap, vUv);\\n    vec3 displacement = vec3(0.0, 0.0, 0.0);\\n\\n    //r = right\\n    //g = left\\n    //b = top\\n    //w = bottom\\n    vec2 restLength = texture2D(_RestLength, vUv).zw;\\n\\n    vec2 texelSize = vec2(1.0/_Size);\\n\\n    float floorCoord = floor(vUv.y * (_Size));\\n    float modFloorCoord = mod(floorCoord, 2.0);\\n    bool constrainA = modFloorCoord == mix(0.0, 1.0, _Flip) && floorCoord < (_Size - 1.0);\\n    bool constrainB = modFloorCoord == mix(1.0, 0.0, _Flip) && floorCoord > 0.5;\\n\\n    vec3 x1 = texture2D(tMap, vUv + vec2(0.0, texelSize.y)).xyz;\\n    vec3 x2 = texture2D(tMap, vUv + vec2(0.0, -texelSize.y)).xyz;\\n\\n    if(constrainA) displacement = constrain(pos.xyz, x1, restLength.x);\\n    if(constrainB) displacement = constrain(pos.xyz, x2, restLength.y);\\n\\n    pos.xyz += displacement;\\n\\n    gl_FragColor = pos;\\n\\n}\";","module.exports=\"precision highp float;\\n#define GLSLIFY 1\\n\\nuniform sampler2D tMap;\\n\\nuniform vec2 _TexelSize;\\nuniform float _Flip;\\nuniform sampler2D _RestLength;\\nuniform float _Stiffness;\\nuniform float _Clamp;\\nuniform float _Size;\\n\\nvarying vec2 vUv;\\n\\nvec3 constrain(vec3 a, vec3 b, float restLength) {\\n\\n    vec3 delta = b - a;\\n    float dist = max(restLength, length(delta));\\n    float percentage = (dist-restLength) / (dist);\\n    return delta * percentage * _Stiffness;\\n\\n}\\n\\n//inspired by:\\n//https://pdfs.semanticscholar.org/4718/6dcbbc8ccc01c6f4143719d09ed5ab4395fb.pdf?_ga=2.107277378.1544954547.1603025794-293436447.1603025794\\n\\nvoid main() {\\n\\n    // vec4 pos = texture2D(tMap, getCenterTexel(vUv, vec2(0.0)));\\n    vec2 texelSize = vec2(1.0/_Size);\\n\\n    vec4 pos = texture2D(tMap, vUv);\\n    vec2 index = floor(vUv * _Size);\\n\\n    bool isBL = index.x < (_Size - 1.0) && (index.y < _Size - 1.0);    \\n    bool isTR = index.x > 0.5 && index.y > 0.5;\\n    \\n    vec3 x1 = texture2D(tMap, vUv + vec2(texelSize.x, texelSize.y)).xyz;\\n    vec3 x2 = texture2D(tMap, vUv + vec2(-texelSize.x, -texelSize.y)).xyz;\\n\\n    vec3 displacement = vec3(0.0, 0.0, 0.0);\\n\\n    //x = top right\\n    //y = top left\\n    //z = bottom right\\n    //w = bottom left\\n    vec2 restLength = texture2D(_RestLength, vUv).xw;\\n  \\n    vec2 modIndex = mod(index, 2.0);\\n\\n    bool constrainA = modIndex.y == mix(0.0, 1.0, _Flip) && isBL;\\n    bool constrainB = modIndex.y == mix(1.0, 0.0, _Flip) && isTR;\\n\\n    if(constrainA) displacement = constrain(pos.xyz, x1, restLength.x);\\n    if(constrainB) displacement = constrain(pos.xyz, x2, restLength.y);\\n  \\n    pos.xyz += displacement;\\n\\n    gl_FragColor = pos;\\n\\n}\";","module.exports=\"precision highp float;\\n#define GLSLIFY 1\\n\\nuniform sampler2D tMap;\\nuniform vec2 _TexelSize;\\nuniform float _Flip;\\nuniform sampler2D _RestLength;\\nuniform float _Stiffness;\\nuniform float _Clamp;\\nuniform float _Size;\\n\\nvarying vec2 vUv;\\n\\nvec3 constrain(vec3 a, vec3 b, float restLength) {\\n\\n    vec3 delta = b - a;\\n    float dist = max(restLength, length(delta));\\n    float percentage = (dist-restLength) / (dist);\\n    return delta * percentage * _Stiffness;\\n\\n}\\n\\n//inspired by:\\n//https://pdfs.semanticscholar.org/4718/6dcbbc8ccc01c6f4143719d09ed5ab4395fb.pdf?_ga=2.107277378.1544954547.1603025794-293436447.1603025794\\n\\nvoid main() {\\n\\n    // vec4 pos = texture2D(tMap, getCenterTexel(vUv, vec2(0.0)));\\n    vec2 texelSize = vec2(1.0/_Size);\\n\\n    vec4 pos = texture2D(tMap, vUv);\\n    vec2 index = floor(vUv * _Size);\\n\\n    bool isBr = index.x > 0.5 && (index.y < _Size-1.0);\\n    bool isTL = index.x < (_Size - 1.0) && index.y > 0.5;    \\n\\n    vec3 x1 = texture2D(tMap, vUv + vec2(-texelSize.x, texelSize.y)).xyz;\\n    vec3 x2 = texture2D(tMap, vUv + vec2(texelSize.x, -texelSize.y)).xyz;\\n\\n    vec3 displacement = vec3(0.0, 0.0, 0.0);\\n\\n    //x = top right\\n    //y = top left\\n    //z = bottom right\\n    //w = bottom left\\n    vec2 restLength = texture2D(_RestLength, vUv).yz;\\n\\n    vec2 modIndex = mod(index, 2.0);\\n\\n    bool constrainA = modIndex.y == mix(0.0, 1.0, _Flip) && isBr;\\n    bool constrainB = modIndex.y == mix(1.0, 0.0, _Flip) && isTL;\\n\\n    if(constrainA) displacement = constrain(pos.xyz, x1, restLength.x);\\n    if(constrainB) displacement = constrain(pos.xyz, x2, restLength.y);\\n  \\n    pos.xyz += displacement;\\n\\n    gl_FragColor = pos;\\n\\n}\";","import { Program } from \"../../../../vendor/ogl/src/core/Program\";\r\nimport { Vec2 } from \"../../../../vendor/ogl/src/math/Vec2\";\r\nimport { Texture } from \"../../../../vendor/ogl/src/core/Texture\";\r\nimport { Vec3 } from \"../../../../vendor/ogl/src/math/Vec3\";\r\nconst { GPGPU } = require(\"../../../../vendor/ogl/src/extras/GPGPU\");\r\n\r\nconst prevPosKernel = require('./kernels/prevPos.frag');\r\nconst currentPosKernel = require('./kernels/currentPos.frag');\r\nconst positionKernel = require('./kernels/position.frag');\r\nconst normalKernel = require('./kernels/calcNormal.frag');\r\n\r\nconst restlengthKernel = require('./kernels/restLength.frag');\r\nconst restLengthDiagonalKernel = require('./kernels/restLengthDiagonal.frag');\r\n\r\nconst constrainKernel = require('./kernels/constrain.frag');\r\nconst constrainDiagonalKernel = require('./kernels/constrainDiagonal.frag');\r\n\r\nconst constrainHorizontalKernel = require('./kernels/constrainHorizontal.frag');\r\nconst constrainVerticalKernel = require('./kernels/constrainVertical.frag');\r\nconst constrainTLTRKernel = require('./kernels/constrainTLTR.frag');\r\nconst constrainBLBRKernel = require('./kernels/constrainBLBR.frag');\r\n\r\nimport {params} from '../../../params.js';\r\n\r\nexport class Simulator {\r\n\r\n    constructor(gl, {\r\n        data,\r\n        countX,\r\n        countY,\r\n    }) {\r\n\r\n        this.gl = gl;\r\n\r\n        this.data = data;\r\n\r\n        this.countX = countX;\r\n        this.countY = countY;\r\n\r\n        this.firstTick = true;\r\n\r\n        this.initSimulators();\r\n        this.initPrograms();\r\n\r\n    }\r\n\r\n    initSimulators() {\r\n\r\n        this.positionData = new Float32Array(this.countX*this.countY*4);\r\n        let positionDataIterator = 0;\r\n        let origDataIterator = 0;\r\n        \r\n        for(let y = 0; y < this.countY; y++) {\r\n            \r\n            for(let x = 0; x < this.countX; x++) {\r\n\r\n                this.positionData[positionDataIterator++] = this.data[origDataIterator++];\r\n                this.positionData[positionDataIterator++] = this.data[origDataIterator++];\r\n                this.positionData[positionDataIterator++] = this.data[origDataIterator++];\r\n                \r\n                let corner = 0;\r\n\r\n                let isTopLeft = y === 0 && x === 0;\r\n                let isTopRight = y === 0 && x === this.countX - 1;\r\n                let isBottomLeft = y === this.countY-1 && x === this.countX -1;\r\n                let isBottomRight = y === this.countY-1 && x === 0;\r\n\r\n                if(isTopLeft) corner = 1;\r\n                if(isTopRight) corner = 2;\r\n                if(isBottomLeft) corner = 3;\r\n                if(isBottomRight) corner = 4;\r\n               \r\n                this.positionData[positionDataIterator++] = corner;\r\n\r\n            }\r\n\r\n        }\r\n\r\n        this.currentPosCapture = new GPGPU(this.gl, {\r\n            data: this.positionData,\r\n            type: this.gl.FLOAT\r\n        });\r\n\r\n        const prevPositionData = this.positionData.slice();\r\n        let prevPosIterator = 0;\r\n        origDataIterator = 0;\r\n        let twoPI = Math.PI * 2;\r\n            \r\n            for(let x = 0; x < this.countX*this.countY; x++) {\r\n\r\n                let offsetx = Math.random() * 2.0 - 1.0;\r\n                let offsety = Math.random() * 2.0 - 1.0;\r\n                let offsetz = Math.random() * 2.0 - 1.0;\r\n\r\n                prevPositionData[prevPosIterator++] += (offsetx*0.);\r\n                prevPositionData[prevPosIterator++] += (offsety*0.);\r\n                prevPositionData[prevPosIterator++] += (offsetz*0.);\r\n                prevPositionData[prevPosIterator++] += 0.0;\r\n\r\n        }\r\n\r\n        this.prevPositionCapture = new GPGPU(this.gl, {\r\n            data: prevPositionData,\r\n            type: this.gl.FLOAT\r\n        });\r\n\r\n        this.positionSim = new GPGPU(this.gl, {\r\n            data: this.positionData,\r\n            type: this.gl.FLOAT,\r\n        });\r\n\r\n        const normalData = new Float32Array(this.countX*this.countY*4.0);\r\n        let normalIterator = 0;\r\n        \r\n        for(let i = 0; i < this.countX*this.countY; i++) {\r\n\r\n            normalData[normalIterator++] = 0.0;\r\n            normalData[normalIterator++] = 0.0;\r\n            normalData[normalIterator++] = -1.0;\r\n            normalData[normalIterator++] = 0.0;\r\n\r\n        }\r\n\r\n        this.normalSim = new GPGPU(this.gl, {\r\n            data: normalData,\r\n            type: this.gl.FLOAT,\r\n            // filtering: this.gl.LINEAR\r\n        });\r\n\r\n        this.initPositions = this.createDataTexture({data: this.positionData, size: this.countX});\r\n\r\n        this.restlengthCapture = new GPGPU(this.gl, {\r\n            data: this.positionData,\r\n            type: this.gl.FLOAT\r\n        });\r\n\r\n        this.restlengthDiagonalCapture = new GPGPU(this.gl, {\r\n            data: this.positionData,\r\n            type: this.gl.FLOAT\r\n        });\r\n        \r\n        \r\n        const restlengthCaptureU = {\r\n            _InitPos: {\r\n                value: this.initPositions\r\n            },\r\n            _Size: {\r\n                value: params.CLOTH.SIZE\r\n              },\r\n        }\r\n\r\n        this.restlengthCapture.addPass({\r\n            fragment: restlengthKernel,\r\n            uniforms: restlengthCaptureU\r\n        });\r\n\r\n        const restlengthDiagonalU = {\r\n            _InitPos: {\r\n                value: this.initPositions\r\n            },\r\n            _Size: {\r\n                value: params.CLOTH.SIZE\r\n              },\r\n        }\r\n\r\n        this.restlengthDiagonalCapture.addPass({\r\n            fragment: restLengthDiagonalKernel,\r\n            uniforms: restlengthDiagonalU\r\n        });\r\n\r\n        this.prewarm();\r\n\r\n    }\r\n\r\n    //TODO:\r\n    //MAKE SURE THE LAST PIXEL IN EACH ROW IS NOT PROCESSED\r\n    //DOUBLE CHECK THE MIX CONDITION I ADDED\r\n\r\n    initPrograms() {\r\n\r\n        const normalSimU = {\r\n            _Position: this.positionSim.uniform,\r\n            _Size: {\r\n                value: params.CLOTH.SIZE\r\n              },\r\n        }\r\n\r\n        this.normalSim.addPass({\r\n            fragment: normalKernel,\r\n            uniforms: normalSimU\r\n        });\r\n\r\n        const positionSimU = {\r\n            _PrevPos: this.prevPositionCapture.uniform,\r\n            _CurrentPos: this.currentPosCapture.uniform,\r\n            _Normal: this.normalSim.uniform,\r\n            _Force: {\r\n                value: new Vec3(0.0, 0.0, 0.0)\r\n            },\r\n            _Time: {\r\n                value: 0.0\r\n            },\r\n            _InputWorldPos: {\r\n                value: new Vec3(0.0,0.0,0.0)\r\n            },\r\n            _IsInteracting: {\r\n                value: false\r\n            },\r\n            _Corner: {\r\n                value: 0\r\n            },\r\n            _Size: {\r\n                value: params.CLOTH.SIZE\r\n              },\r\n        }\r\n\r\n        this.positionSim.addPass({\r\n            fragment: positionKernel,\r\n            uniforms: positionSimU\r\n        });\r\n\r\n        const constrainU = {\r\n\r\n            _RestLengthVH: this.restlengthCapture.uniform,\r\n            _RestLengthDiagonal: this.restlengthDiagonalCapture.uniform,\r\n            _Size: {\r\n                value: params.CLOTH.SIZE\r\n            },\r\n            _TexelSize: {\r\n                value: new Vec2(1.0/params.CLOTH.SIZE)\r\n            },\r\n            _Clamp: {\r\n                value: params.PHYSICS.CLAMP\r\n            },\r\n            _Stiffness: {\r\n                value: params.PHYSICS.STIFFNESS\r\n            }\r\n\r\n        }\r\n\r\n        for(let i = 0; i < params.PHYSICS.STEPS; i++) {\r\n            // this.positionSim.addPass({\r\n            //     fragment: constrainKernel,\r\n            //     uniforms: constrainU\r\n            // });\r\n            // this.positionSim.addPass({\r\n            //     fragment: constrainDiagonalKernel,\r\n            //     uniforms: constrainU\r\n            // });\r\n        }\r\n\r\n        const prevPosCaptureSimU = {\r\n            _Positions: this.currentPosCapture.uniform,\r\n            _Size: {\r\n                value: params.CLOTH.SIZE\r\n              },\r\n        }\r\n\r\n        this.prevPositionCapture.addPass({\r\n            fragment: prevPosKernel,\r\n            uniforms: prevPosCaptureSimU\r\n        });\r\n\r\n        const currentPosCaptureSimU = {\r\n            _Positions: this.positionSim.uniform,\r\n            _Size: {\r\n                value: params.CLOTH.SIZE\r\n              },\r\n        }\r\n\r\n        this.currentPosCapture.addPass({\r\n            fragment: currentPosKernel,\r\n            uniforms: currentPosCaptureSimU\r\n        });\r\n\r\n        const constrainHorizontalFirstPassU = this.createConstraintUniform({flip: 0.0, restlength: this.restlengthCapture.uniform}); \r\n        const constrainHorizontalSecondPassU = this.createConstraintUniform({flip: 1.0, restlength: this.restlengthCapture.uniform});\r\n        \r\n        const constrainVerticalFirstPassU = this.createConstraintUniform({flip: 0.0, restlength: this.restlengthCapture.uniform});\r\n        const constrainVerticalSecondPassU = this.createConstraintUniform({flip: 1.0, restlength: this.restlengthCapture.uniform});\r\n\r\n        const constrainTLTRfirstPasssU = this.createConstraintUniform({flip: 0.0, restlength: this.restlengthDiagonalCapture.uniform}); \r\n        const constrainTLTRsecondPasssU = this.createConstraintUniform({flip: 1.0, restlength: this.restlengthDiagonalCapture.uniform});\r\n        \r\n        const constrainBRBLfirstPasssU = this.createConstraintUniform({flip: 0.0, restlength: this.restlengthDiagonalCapture.uniform});\r\n        const constrainBRBLsecondPasssU = this.createConstraintUniform({flip: 1.0, restlength: this.restlengthDiagonalCapture.uniform});\r\n\r\n        \r\n\r\n        for(let i = 0; i < params.PHYSICS.STEPS; i++) {\r\n\r\n            // HORIZONTAL CONSTRAINTS\r\n            this.positionSim.addPass({\r\n                fragment: constrainHorizontalKernel,\r\n                uniforms: constrainHorizontalFirstPassU\r\n            });\r\n    \r\n            this.positionSim.addPass({\r\n                fragment: constrainHorizontalKernel,\r\n                uniforms: constrainHorizontalSecondPassU\r\n            });\r\n\r\n            //VERTICAL CONSTRAINTS\r\n            this.positionSim.addPass({\r\n                fragment: constrainVerticalKernel,\r\n                uniforms: constrainVerticalFirstPassU\r\n            });\r\n    \r\n            this.positionSim.addPass({\r\n                fragment: constrainVerticalKernel,\r\n                uniforms: constrainVerticalSecondPassU\r\n            });\r\n\r\n            // DIAGONAL CONSTRAINTS\r\n\r\n            this.positionSim.addPass({\r\n                fragment: constrainBLBRKernel,\r\n                uniforms: constrainBRBLfirstPasssU\r\n            });\r\n\r\n            this.positionSim.addPass({\r\n                fragment: constrainBLBRKernel,\r\n                uniforms: constrainBRBLsecondPasssU\r\n            });\r\n\r\n            this.positionSim.addPass({\r\n                fragment: constrainTLTRKernel,\r\n                uniforms: constrainTLTRfirstPasssU\r\n            });\r\n\r\n            \r\n            this.positionSim.addPass({\r\n                fragment: constrainTLTRKernel,\r\n                uniforms: constrainTLTRsecondPasssU\r\n            });\r\n\r\n            }\r\n\r\n    }\r\n\r\n    createDataTexture({\r\n        data,\r\n        size\r\n    }) {\r\n\r\n        return new Texture(this.gl, {\r\n            image: data,\r\n            target: this.gl.TEXTURE_2D,\r\n            type: this.gl.FLOAT,\r\n            format: this.gl.RGBA,\r\n            internalFormat: this.gl.renderer.isWebgl2 ? this.gl.RGBA32F : this.gl.RGBA,\r\n            wrapS: this.gl.CLAMP_TO_EDGE,\r\n            wrapT: this.gl.CLAMP_TO_EDGE,\r\n            generateMipmaps: false,\r\n            minFilter: this.gl.NEAREST,\r\n            magFilter: this.gl.NEAREST,\r\n            width: size,\r\n            height: size,\r\n            flipY: false\r\n        })\r\n\r\n    }\r\n\r\n    createConstraintUniform({\r\n        flip,\r\n        restlength\r\n    }) {\r\n       \r\n\r\n    const uniform = {\r\n\r\n        _TexelSize: {\r\n            value: new Vec2(1.0 / params.CLOTH.SIZE, 1.0 / params.CLOTH.SIZE)\r\n        },\r\n        _Stiffness: {\r\n            value: params.PHYSICS.STIFFNESS\r\n        },\r\n        _Flip: {\r\n            value: flip\r\n        },\r\n        _RestLength: restlength,\r\n        _Clamp: {\r\n            value: params.PHYSICS.CLAMP\r\n        },\r\n        _Size: {\r\n            value: params.CLOTH.SIZE\r\n          },\r\n\r\n    }\r\n\r\n       return uniform \r\n    }\r\n\r\n    prewarm() {\r\n\r\n        this.cornerUpdated = false;\r\n        this.restlengthCapture.render();\r\n        this.restlengthDiagonalCapture.render();\r\n\r\n    }\r\n\r\n    update(t, {\r\n        isInteracting,\r\n        inputWorldPos\r\n    }) {\r\n\r\n        this.currentPosCapture.render();   \r\n\r\n        if(isInteracting) {\r\n            if(this.cornerUpdated === false) {\r\n                const corner = (Math.floor(Math.random() * 4) + 1);\r\n                this.positionSim.passes[0].program.uniforms._Corner.value = corner;\r\n                this.cornerUpdated = true;\r\n            }\r\n        } else {\r\n            this.cornerUpdated = false;\r\n        }\r\n\r\n        this.positionSim.passes[0].program.uniforms._Time.value = t;\r\n        this.positionSim.passes[0].program.uniforms._IsInteracting.value = isInteracting;\r\n        this.positionSim.passes[0].program.uniforms._InputWorldPos.value.copy(inputWorldPos);\r\n\r\n\r\n        this.positionSim.render();\r\n        this.prevPositionCapture.render();\r\n\r\n        this.normalSim.render();\r\n        \r\n    }\r\n\r\n    get Positions() {\r\n        return this.positionSim.fbo.read.texture\r\n    }\r\n\r\n    get Normals() {\r\n        return this.normalSim.fbo.read.texture\r\n    }\r\n\r\n    get RestLengthsOrtho() {\r\n        return this.restlengthCapture.fbo.read.texture\r\n    }\r\n\r\n    get RestLengthsDiagonal() {\r\n        return this.restlengthDiagonalCapture.fbo.read.texture\r\n    }\r\n\r\n}","module.exports=\"precision highp float;\\n#define GLSLIFY 1\\n\\nattribute vec2 position;\\nattribute vec2 uv;\\n\\nuniform sampler2D _Positions;\\nuniform sampler2D _Normals;\\n\\nuniform mat4 projectionMatrix;\\nuniform mat4 modelViewMatrix;\\nuniform mat4 viewMatrix;\\nuniform mat4 modelMatrix;\\nuniform mat3 normalMatrix;\\n\\nvarying vec2 vUv;\\nvarying vec3 vPos;\\nvarying vec3 vNormal;\\nvarying vec3 vMvPos;\\n\\nuniform float _Flip;\\nuniform float _Size;\\n\\n#define LIGHT vec3(0.0, 5.0, 2.3)\\n#define EPS 0.00001\\n\\nvec2 getCenterTexel(vec2 coord, vec2 offset) {\\n\\n    return (floor((coord+offset) * (_Size-EPS)) + 0.5) / _Size;\\n\\n}\\n\\nvoid main() {\\n\\n    vec3 pos = texture2D(_Positions, position).xyz;\\n    vec4 mvPos = modelViewMatrix * vec4(pos, 1.0);\\n    vec3 norm = (texture2D(_Normals, position).xyz);\\n    norm *= _Flip;\\n\\n    gl_Position = projectionMatrix * mvPos;\\n    vMvPos = mvPos.xyz;\\n    vUv = uv;\\n    vPos = pos.xyz;\\n    vNormal = norm;\\n\\n}\";","module.exports=\"precision highp float;\\n#define GLSLIFY 1\\n\\nuniform samplerCube _CubeMap;\\n\\nuniform vec3 cameraPosition;\\n\\nvarying vec3 vNormal;\\nvarying vec3 vPos;\\nvarying vec2 vUv;\\nvarying vec3 vMvPos;\\n\\nvoid main() {\\n\\n    vec3 N = normalize(vNormal);\\n    // vec3 E = normalize(-vMvPos);\\n    vec3 E = normalize(vPos - cameraPosition);\\n\\n    float light = dot(N, vec3(0.0, 1.0, 0.0)) * 0.5 + 0.5;\\n\\n    float fresnel = 1.0-clamp(dot(N, -E), 0.0, 1.0);\\n    fresnel = fresnel;\\n    //light = light * 0.9 + (1.0 - 0.9);\\n\\n    vec3 reflectV = reflect(E, N);\\n    vec3 reflection = textureCube(_CubeMap, reflectV, 1.0).xyz;\\n\\n    vec3 prettyNorms = N*0.5+0.5;\\n    vec3 col = vec3(0.7, 0.6, 0.1) + reflection.x + fresnel*.2;\\n\\n    // gl_FragColor = vec4(col , reflection.x * fresnel * 1.2);\\n    gl_FragColor = vec4(reflection , 1.0);\\n    // gl_FragColor = vec4(prettyNorms , 1.0);\\n\\n}\";","import {\r\n  Mesh\r\n} from \"../../../vendor/ogl/src/core/Mesh.js\";\r\nimport {\r\n  Plane\r\n} from \"../../../vendor/ogl/src/extras/Plane.js\";\r\nimport {\r\n  Program\r\n} from \"../../../vendor/ogl/src/core/Program.js\";\r\n\r\nimport {\r\n  Geometry\r\n} from \"../../../vendor/ogl/src/core/Geometry.js\";\r\nimport {\r\n  Vec3\r\n} from \"../../../vendor/ogl/src/math/Vec3.js\";\r\n\r\nimport {params} from '../../params.js';\r\n\r\nimport {Simulator} from './Simulator/index.js';\r\nimport { Texture } from \"../../../vendor/ogl/src/core/Texture.js\";\r\n\r\nimport cubemap from '../../../static/cubemap/*.jpg';\r\n\r\nconst vertex = require(\"./shader/verlet.vert\");\r\nconst fragment = require(\"./shader/verlet.frag\");\r\n\r\nexport class Verlet extends Mesh {\r\n  constructor(gl) {\r\n    super(gl);\r\n\r\n    this.gl = gl;\r\n\r\n    this.initGeometry();\r\n    this.initProgram();\r\n    // this.initShadowPass();\r\n\r\n    this.timestep = 18.0 / 1000.0 //I suppose this is hardcoded delta time, from what I could gather from logging delta time\r\n    this.timeStepSQ = this.timestep * this.timestep;\r\n    this.windForce = new Vec3(0.0, 0.0, 0.0);\r\n    this.forceDir = new Vec3(0.0, 0.0, 0.0);\r\n    // this.gravity = new Vec3(0.0, -0.0005, 0.0);\r\n    this.gravity = new Vec3(0.0, 0, 0.0);\r\n    this.t = 0;\r\n    this.flipped = false;\r\n\r\n    // this.mode = this.gl.POINTS;\r\n\r\n  }\r\n\r\n  initGeometry() {\r\n    this.widthSegments = params.CLOTH.SIZE-1;\r\n    this.heightSegments = params.CLOTH.SIZE-1;\r\n\r\n    const width = 4.0;\r\n    const height = 4.0;\r\n\r\n    const refGeometry = new Plane(this.gl, {\r\n      width,\r\n      height,\r\n      widthSegments: this.widthSegments,\r\n      heightSegments: this.heightSegments\r\n    });\r\n\r\n    this.faces = []; //will be used for normals\r\n    this.particles = [];\r\n    this.sticks = [];\r\n\r\n    const {\r\n      position,\r\n      uv,\r\n      normal,\r\n      index\r\n    } = refGeometry.attributes;\r\n\r\n\r\n    this.simulator = new Simulator(this.gl, {\r\n      data: position.data,\r\n      countX: params.CLOTH.SIZE,\r\n      countY: params.CLOTH.SIZE,\r\n    });\r\n\r\n    this.geometry = new Geometry(this.gl, {\r\n      position: {\r\n        size: 2,\r\n        data: this.simulator.positionSim.coords\r\n      },\r\n      uv: {\r\n        size: 2,\r\n        data: uv.data\r\n      },\r\n      index: {\r\n        data: index.data\r\n      }\r\n    });\r\n\r\n  }\r\n\r\n\r\n  initProgram() {\r\n\r\n    this.cubeMapTexture = new Texture(this.gl, {\r\n      target: this.gl.TEXTURE_CUBE_MAP,\r\n      generateMipmaps: true\r\n      // minFilter: this.gl.LINEAR_MIPMAP_LINEAR,\r\n      // magFilter: this.gl.LINEAR_MIPMAP_LINEAR\r\n    });\r\n\r\n    this.loadCubeMap();\r\n\r\n    const uniforms = {\r\n      _Positions: {\r\n        value: this.simulator.Positions\r\n      },\r\n      _Normals: {\r\n        value: this.simulator.Normals\r\n      },\r\n      _Size: {\r\n        value: params.CLOTH.SIZE\r\n      },\r\n      _CubeMap: {\r\n        value: this.cubeMapTexture\r\n      },\r\n      _Flip: {\r\n        value: -1.0\r\n      }\r\n    };\r\n\r\n    this.program = new Program(this.gl, {\r\n      vertex,\r\n      fragment,\r\n      uniforms,\r\n      cullFace: null,\r\n      transparent: true,\r\n      depthTest: true,\r\n      // depthWrite: false\r\n    });\r\n  }\r\n\r\n      async loadCubeMap() {\r\n\r\n        function loadImage(src) {\r\n            return new Promise(res => {\r\n\r\n                const img = new Image();\r\n                img.onload = () => res(img);\r\n                img.src = src;\r\n\r\n            });\r\n        }\r\n\r\n        const images = await Promise.all([\r\n            loadImage(cubemap.posx),\r\n            loadImage(cubemap.negx),\r\n            loadImage(cubemap.posy),\r\n            loadImage(cubemap.negy),\r\n            loadImage(cubemap.posz),\r\n            loadImage(cubemap.negz),\r\n        ]);\r\n\r\n        this.cubeMapTexture.image = images;\r\n\r\n    }\r\n\r\n  update({\r\n    t,\r\n    isInteracting,\r\n    inputWorldPos,\r\n    scene\r\n  }) {\r\n    this.t += t;\r\n    this.simulator.update(this.t, {\r\n      isInteracting,\r\n      inputWorldPos\r\n    });\r\n\r\n  }\r\n\r\n  flipFace() {\r\n\r\n\r\n    this.program.cullFace = this.flipped ? this.gl.FRONT : this.gl.BACK;\r\n    this.program.uniforms._Flip.value = this.flipped ? -1.0 : 1.0;\r\n    this.flipped = !this.flipped;\r\n\r\n  }\r\n\r\n}","import {\r\n    Renderer\r\n} from \"../../vendor/ogl/src/core/Renderer.js\";\r\nimport {\r\n    Transform\r\n} from \"../../vendor/ogl/src/core/Transform.js\";\r\nimport {\r\n    Camera\r\n} from \"../../vendor/ogl/src/core/Camera.js\";\r\nimport {\r\n    Orbit\r\n} from \"../../vendor/ogl/src/extras/Orbit.js\";\r\nimport {\r\n    Raycast\r\n} from '../../vendor/ogl/src/extras/Raycast';\r\nimport { Vec2 } from \"../../vendor/ogl/src/math/Vec2.js\";\r\n\r\nimport {DisplayQuad} from './debug/DisplayQuad.js';\r\n\r\nimport {\r\n    Verlet\r\n} from \"./VerletGPU/index.js\";\r\nimport { Vec3 } from \"../../vendor/ogl/src/math/Vec3.js\";\r\n\r\nexport default class World3d {\r\n    constructor() {\r\n        this.init();\r\n        this.initInputParams();\r\n    }\r\n\r\n    init() {\r\n        this.renderer = new Renderer({\r\n            width: window.innerWidth,\r\n            height: window.innerHeight,\r\n            antialias: true\r\n        });\r\n        this.gl = this.renderer.gl;\r\n\r\n        this.gl.clearColor(0.8, 0.8, 0.83, 1);\r\n        // this.gl.clearColor(0.0, 0.0, 0.0, 1);\r\n        this.gl.canvas.style.top = \"0\";\r\n        this.gl.canvas.style.left = \"0\";\r\n        this.gl.canvas.style.zIndex = \"0\";\r\n        this.gl.canvas.style.position = \"absolute\";\r\n        this.gl.canvas.style.width = \"100vw\";\r\n        this.gl.canvas.style.height = \"100vh\";\r\n\r\n        document.body.appendChild(this.gl.canvas);\r\n\r\n        this.camera = new Camera(this.gl, {\r\n            aspect: window.innerWidth / window.innerHeight\r\n        });\r\n        this.camera.position.x = 0.0;\r\n        this.camera.position.y = 0.0;\r\n        this.camera.position.z = 7.0;\r\n\r\n        this.orbitCamera = new Orbit(this.camera, {\r\n            element: this.gl.canvas\r\n        });\r\n\r\n        this.scene = new Transform();\r\n\r\n        this.initMesh();\r\n        this.initDebug();\r\n    }\r\n\r\n    initInputParams() {\r\n\r\n        this.inputPos = new Vec3(0.0, 0.0, 0.5);\r\n        this.projectedInputPos = new Vec3(0.0, 0.0, 0.5);\r\n        this.worldInputPos = new Vec3(0.0,0.0,0.5);\r\n        this.raycast = new Raycast(this.gl);\r\n        this.isInteracting = false;\r\n\r\n    }\r\n\r\n    onMouseDown(e) {\r\n\r\n        this.isInteracting = true;\r\n        this.inputPos.x = (e.clientX / window.innerWidth) * 2.0 - 1.0;\r\n        this.inputPos.y = (1.0 - e.clientY / window.innerHeight) * 2.0 - 1.0;\r\n\r\n    }\r\n\r\n    onMouseMove(e) {\r\n\r\n        if(this.isInteracting === false) return;\r\n\r\n        this.inputPos.x = (e.clientX / window.innerWidth) * 2.0 - 1.0;\r\n        this.inputPos.y = (1.0 - e.clientY / window.innerHeight) * 2.0 - 1.0;        \r\n\r\n    }\r\n\r\n    onMouseUp(e) {\r\n\r\n        this.isInteracting = false;\r\n\r\n    }\r\n\r\n    initMesh() {\r\n        this.verlet = new Verlet(this.gl);\r\n        this.verlet.setParent(this.scene);\r\n    }\r\n\r\n    initDebug() {\r\n        \r\n        this.positionQuad = new DisplayQuad(this.gl, {\r\n            aspect: this.renderer.width/this.renderer.height,\r\n            scale: 0.5,\r\n            position: new Vec2(-0.87,0.74)\r\n        });\r\n\r\n        this.prevPositionQuad = new DisplayQuad(this.gl, {\r\n            aspect: this.renderer.width/this.renderer.height,\r\n            scale: 0.5,\r\n            position: new Vec2(-0.87,0.23)\r\n        })\r\n        \r\n        this.restlengthQuad = new DisplayQuad(this.gl, {\r\n            aspect: this.renderer.width/this.renderer.height,\r\n            scale: 0.5,\r\n            position: new Vec2(-0.87, -0.28)\r\n        })\r\n\r\n    }\r\n\r\n    render({\r\n        scene,\r\n        camera = null,\r\n        clear = true\r\n    }) {\r\n        this.renderer.render({\r\n            scene,\r\n            camera,\r\n            clear\r\n        });\r\n    }\r\n\r\n    calcScreenToWorldPos() {\r\n\r\n        \r\n        this.camera.unproject(this.projectedInputPos.copy(this.inputPos));\r\n        this.projectedInputPos.sub(this.camera.position).normalize();\r\n        \r\n        const dist = -this.camera.position.z / this.projectedInputPos.z;\r\n\r\n        this.worldInputPos.copy(this.camera.position).add(this.projectedInputPos.multiply(dist));\r\n        // this.worldInputPos.z = -this.inputPos.y * 1.0;\r\n        this.worldInputPos.z = -this.inputPos.y * 5.0;\r\n\r\n    }\r\n\r\n    update(dt) {\r\n\r\n        this.camera.updateMatrixWorld();\r\n        //  this.orbitCamera.update();\r\n\r\n        this.calcScreenToWorldPos();\r\n\r\n        this.verlet.update({\r\n            t: dt,\r\n            isInteracting: this.isInteracting,\r\n            inputWorldPos: this.worldInputPos,\r\n            scene: this.scene\r\n        });\r\n\r\n        this.render({\r\n            scene: this.scene,\r\n            camera: this.camera,\r\n            clear: true\r\n        });\r\n\r\n        this.verlet.flipFace();\r\n\r\n        this.render({\r\n            scene: this.scene,\r\n            camera: this.camera,\r\n            clear: false\r\n        });\r\n\r\n        this.verlet.flipFace();\r\n\r\n\r\n    }\r\n\r\n    onResize() {\r\n        this.renderer.setSize(window.innerWidth, window.innerHeight);\r\n        this.camera.perspective({\r\n            aspect: this.gl.canvas.width / this.gl.canvas.height\r\n        });\r\n    }\r\n}","import World3d from './World3d'\r\n\r\nexport class App {\r\n    constructor() {\r\n       this.World3d = new World3d();\r\n       this.initEvents();\r\n       this.start();\r\n    }\r\n\r\n    initEvents() {\r\n\r\n        this.time = Date.now();\r\n        this.prevTime = this.time;\r\n        this.deltaTime = 0;\r\n        this.ctaHidden = false;\r\n\r\n        window.addEventListener(\"resize\", this.onResize.bind(this));\r\n        window.addEventListener('mousedown', this.onMouseDown);\r\n        window.addEventListener('mousemove', this.onMouseMove);\r\n        window.addEventListener('mouseup', this.onMouseUp);\r\n\r\n    }\r\n\r\n    start() {\r\n    \r\n        this.update();\r\n\r\n    }\r\n\r\n    onMouseDown = e => {\r\n\r\n        this.World3d.onMouseDown(e);\r\n        this.hideCTA();\r\n\r\n\r\n    }\r\n\r\n    onMouseMove = e => {\r\n\r\n        this.World3d.onMouseMove(e);\r\n\r\n    }\r\n\r\n    onMouseUp = e => {\r\n\r\n        this.World3d.onMouseUp(e);\r\n\r\n    }\r\n\r\n    onResize = () => {\r\n        this.World3d.onResize();\r\n    }\r\n\r\n    hideCTA() {\r\n\r\n        if(this.ctaHidden === false) {\r\n            this.ctaHidden = true;\r\n            document.body.querySelector('.cta-message').classList.add('hidden');\r\n        }\r\n\r\n    }\r\n\r\n    update = () => {\r\n    \r\n        window.requestAnimationFrame(() => this.update());\r\n\r\n        this.time = Date.now();\r\n        let tmpTime = this.time;\r\n        this.deltaTime = (this.time - this.prevTime) / 1000.0;\r\n        this.prevTime = tmpTime;\r\n\r\n        this.World3d.update(this.deltaTime);\r\n\r\n    }\r\n    \r\n}\r\n\r\nwindow.onload = () => new App();","var OVERLAY_ID = '__parcel__error__overlay__';\n\nvar OldModule = module.bundle.Module;\n\nfunction Module(moduleName) {\n  OldModule.call(this, moduleName);\n  this.hot = {\n    data: module.bundle.hotData,\n    _acceptCallbacks: [],\n    _disposeCallbacks: [],\n    accept: function (fn) {\n      this._acceptCallbacks.push(fn || function () {});\n    },\n    dispose: function (fn) {\n      this._disposeCallbacks.push(fn);\n    }\n  };\n\n  module.bundle.hotData = null;\n}\n\nmodule.bundle.Module = Module;\nvar checkedAssets, assetsToAccept;\n\nvar parent = module.bundle.parent;\nif ((!parent || !parent.isParcelRequire) && typeof WebSocket !== 'undefined') {\n  var hostname = process.env.HMR_HOSTNAME || location.hostname;\n  var protocol = location.protocol === 'https:' ? 'wss' : 'ws';\n  var ws = new WebSocket(protocol + '://' + hostname + ':' + process.env.HMR_PORT + '/');\n  ws.onmessage = function(event) {\n    checkedAssets = {};\n    assetsToAccept = [];\n\n    var data = JSON.parse(event.data);\n\n    if (data.type === 'update') {\n      var handled = false;\n      data.assets.forEach(function(asset) {\n        if (!asset.isNew) {\n          var didAccept = hmrAcceptCheck(global.parcelRequire, asset.id);\n          if (didAccept) {\n            handled = true;\n          }\n        }\n      });\n\n      // Enable HMR for CSS by default.\n      handled = handled || data.assets.every(function(asset) {\n        return asset.type === 'css' && asset.generated.js;\n      });\n\n      if (handled) {\n        console.clear();\n\n        data.assets.forEach(function (asset) {\n          hmrApply(global.parcelRequire, asset);\n        });\n\n        assetsToAccept.forEach(function (v) {\n          hmrAcceptRun(v[0], v[1]);\n        });\n      } else if (location.reload) { // `location` global exists in a web worker context but lacks `.reload()` function.\n        location.reload();\n      }\n    }\n\n    if (data.type === 'reload') {\n      ws.close();\n      ws.onclose = function () {\n        location.reload();\n      }\n    }\n\n    if (data.type === 'error-resolved') {\n      console.log('[parcel] ✨ Error resolved');\n\n      removeErrorOverlay();\n    }\n\n    if (data.type === 'error') {\n      console.error('[parcel] 🚨  ' + data.error.message + '\\n' + data.error.stack);\n\n      removeErrorOverlay();\n\n      var overlay = createErrorOverlay(data);\n      document.body.appendChild(overlay);\n    }\n  };\n}\n\nfunction removeErrorOverlay() {\n  var overlay = document.getElementById(OVERLAY_ID);\n  if (overlay) {\n    overlay.remove();\n  }\n}\n\nfunction createErrorOverlay(data) {\n  var overlay = document.createElement('div');\n  overlay.id = OVERLAY_ID;\n\n  // html encode message and stack trace\n  var message = document.createElement('div');\n  var stackTrace = document.createElement('pre');\n  message.innerText = data.error.message;\n  stackTrace.innerText = data.error.stack;\n\n  overlay.innerHTML = (\n    '<div style=\"background: black; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; opacity: 0.85; font-family: Menlo, Consolas, monospace; z-index: 9999;\">' +\n      '<span style=\"background: red; padding: 2px 4px; border-radius: 2px;\">ERROR</span>' +\n      '<span style=\"top: 2px; margin-left: 5px; position: relative;\">🚨</span>' +\n      '<div style=\"font-size: 18px; font-weight: bold; margin-top: 20px;\">' + message.innerHTML + '</div>' +\n      '<pre>' + stackTrace.innerHTML + '</pre>' +\n    '</div>'\n  );\n\n  return overlay;\n\n}\n\nfunction getParents(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return [];\n  }\n\n  var parents = [];\n  var k, d, dep;\n\n  for (k in modules) {\n    for (d in modules[k][1]) {\n      dep = modules[k][1][d];\n      if (dep === id || (Array.isArray(dep) && dep[dep.length - 1] === id)) {\n        parents.push(k);\n      }\n    }\n  }\n\n  if (bundle.parent) {\n    parents = parents.concat(getParents(bundle.parent, id));\n  }\n\n  return parents;\n}\n\nfunction hmrApply(bundle, asset) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (modules[asset.id] || !bundle.parent) {\n    var fn = new Function('require', 'module', 'exports', asset.generated.js);\n    asset.isNew = !modules[asset.id];\n    modules[asset.id] = [fn, asset.deps];\n  } else if (bundle.parent) {\n    hmrApply(bundle.parent, asset);\n  }\n}\n\nfunction hmrAcceptCheck(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (!modules[id] && bundle.parent) {\n    return hmrAcceptCheck(bundle.parent, id);\n  }\n\n  if (checkedAssets[id]) {\n    return;\n  }\n  checkedAssets[id] = true;\n\n  var cached = bundle.cache[id];\n\n  assetsToAccept.push([bundle, id]);\n\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    return true;\n  }\n\n  return getParents(global.parcelRequire, id).some(function (id) {\n    return hmrAcceptCheck(global.parcelRequire, id)\n  });\n}\n\nfunction hmrAcceptRun(bundle, id) {\n  var cached = bundle.cache[id];\n  bundle.hotData = {};\n  if (cached) {\n    cached.hot.data = bundle.hotData;\n  }\n\n  if (cached && cached.hot && cached.hot._disposeCallbacks.length) {\n    cached.hot._disposeCallbacks.forEach(function (cb) {\n      cb(bundle.hotData);\n    });\n  }\n\n  delete bundle.cache[id];\n  bundle(id);\n\n  cached = bundle.cache[id];\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    cached.hot._acceptCallbacks.forEach(function (cb) {\n      cb();\n    });\n    return true;\n  }\n}\n"]}